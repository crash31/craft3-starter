{"version":3,"sources":["updater/src/Updater.js"],"names":["$","Craft","Updater","Garnish","Base","extend","$graphic","$status","error","data","actionPrefix","this","parseStatus","status","html","escapeHtml","replace","addClass","showStatus","appendTo","postActionRequest","showErrorDetails","details","id","action","response","textStatus","handleFatalError","proxy","jqXHR","state","setState","complete","noop","showError","nextAction","options","showOptions","finished","returnUrl","errorDetails","$buttonContainer","onFinish","length","text","label","option","class","i","$button","getEmailLink","addListener","attr","url","encodeURIComponent","link","email","subject","ev","body","window","getUrl","location","t","responseText","jQuery"],"mappings":"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","file":"Updater.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.Updater = Garnish.Base.extend(\n        {\n            $graphic: null,\n            $status: null,\n            error: null,\n            data: null,\n            actionPrefix: null,\n\n            init: function(actionPrefix) {\n                this.actionPrefix = actionPrefix;\n                this.$graphic = $('#graphic');\n                this.$status = $('#status');\n            },\n\n            parseStatus: function(status) {\n                return '<p>' +\n                    Craft.escapeHtml(status)\n                        .replace(/\\n{2,}/g, '</p><p>')\n                        .replace(/\\n/g, '<br>')\n                        .replace(/`(.*?)`/g, '<code>$1</code>') +\n                    '</p>';\n            },\n\n            showStatus: function(status) {\n                this.$status.html(this.parseStatus(status));\n            },\n\n            showError: function(error) {\n                this.$graphic.addClass('error');\n                this.showStatus(error);\n            },\n\n            showErrorDetails: function(details) {\n                $('<div/>', {id: 'error', 'class': 'code', html: this.parseStatus(details)}).appendTo(this.$status);\n            },\n\n            postActionRequest: function(action) {\n                var data = {\n                    data: this.data\n                };\n\n                Craft.postActionRequest(this.actionPrefix + '/' + action, data, $.proxy(function(response, textStatus, jqXHR) {\n                    if (textStatus === 'success') {\n                        this.setState(response);\n                    } else {\n                        this.handleFatalError(jqXHR);\n                    }\n                }, this), {\n                    complete: $.noop\n                });\n            },\n\n            setState: function(state) {\n                this.$graphic.removeClass('error');\n\n                // Data probably won't be set if this is coming from an option\n                if (state.data) {\n                    this.data = state.data;\n                }\n\n                if (state.status) {\n                    this.showStatus(state.status);\n                } else if (state.error) {\n                    this.showError(state.error);\n                    if (state.errorDetails) {\n                        this.showErrorDetails(state.errorDetails);\n                    }\n                }\n\n                if (state.nextAction) {\n                    this.postActionRequest(state.nextAction);\n                } else if (state.options) {\n                    this.showOptions(state);\n                } else if (state.finished) {\n                    this.onFinish(state.returnUrl);\n                }\n            },\n\n            showOptions: function(state) {\n                var $buttonContainer = $('<div/>', {id: 'options', 'class': 'buttons'}).appendTo(this.$status);\n\n                for (var i = 0; i < state.options.length; i++) {\n                    var option = state.options[i],\n                        $button = $('<a/>', {\n                            'class': 'btn big',\n                            text: option.label\n                        }).appendTo($buttonContainer);\n\n                    if (option.submit) {\n                        $button.addClass('submit');\n                    }\n\n                    if (option.email) {\n                        $button.attr('href', this.getEmailLink(state, option));\n                    } else if (option.url) {\n                        $button.attr('href', option.url);\n                        $button.attr('target', '_blank');\n                    } else {\n                        $button.attr('role', 'button');\n                        this.addListener($button, 'click', option, 'onOptionSelect');\n                    }\n                }\n            },\n\n            getEmailLink: function(state, option) {\n                var link = 'mailto:' + option.email +\n                    '?subject=' + encodeURIComponent(option.subject || 'Craft update failure');\n\n                var body = 'Describe what happened here.';\n                if (state.errorDetails) {\n                    body += '\\n\\n-----------------------------------------------------------\\n\\n' + state.errorDetails;\n                }\n                link += '&body=' + encodeURIComponent(body);\n\n                return link;\n            },\n\n            onOptionSelect: function(ev) {\n                this.setState(ev.data);\n            },\n\n            onFinish: function(returnUrl) {\n                this.$graphic.addClass('success');\n\n                // Redirect in a moment\n                setTimeout(function() {\n                    if (returnUrl) {\n                        window.location = Craft.getUrl(returnUrl);\n                    }\n                    else {\n                        window.location = Craft.getUrl('dashboard');\n                    }\n                }, 750);\n            },\n\n            handleFatalError: function(jqXHR) {\n                var details = Craft.t('app', 'Status:') + ' ' + jqXHR.statusText + '\\n\\n' +\n                    Craft.t('app', 'Response:') + ' ' + jqXHR.responseText + '\\n\\n';\n\n                this.setState({\n                    error: Craft.t('app', 'A fatal error has occurred:'),\n                    errorDetails: details,\n                    options: [\n                        {\n                            label: Craft.t('app', 'Troubleshoot'),\n                            url: 'https://craftcms.com/guides/failed-updates'\n                        },\n                        {\n                            label: Craft.t('app', 'Send for help'),\n                            email: 'support@craftcms.com'\n                        }\n                    ]\n                });\n\n                // Tell Craft to disable maintenance mode\n                Craft.postActionRequest(this.actionPrefix + '/finish', {data: this.data});\n            }\n        });\n})(jQuery);\n"]}