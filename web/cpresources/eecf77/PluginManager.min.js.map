{"version":3,"sources":["plugins/src/PluginManager.js"],"names":["$","Craft","PluginManager","Garnish","Base","extend","init","getPluginLicenseInfo","handle","response","hasOwnProperty","isComposerInstalled","addUninstalledPluginRow","Plugin","this","update","bind","Promise","resolve","reject","sendApiRequest","params","textStatus","postActionRequest","pluginLicenses","license","contentType","catch","info","$table","length","id","replaceWith","class","html","appendTo","children","data","iconUrl","append","name","description","src","text","normalizeUserKey","documentationUrl","href","target","t","size","maxlength","value","licenseKey","readonly","disabled","licensedEdition","data-title","latestVersion","getCsrfInput","method","accept-charset","type","packageName","substr","$keyContainer","find","replace","toUpperCase","updateTimeout","key","data-icon","proxy","data-align","licenseKeyStatus","initUiElements","$row","$oldIcon","$newIcon","remove","getUrl","manager","$details","hasMultipleEditions","$spinner","$buyBtn","$newEdition","isTrial","$keyInput","removeAttr","$oldEdition","addListener","getKey","val","onKeyFocus","showLicenseKey","select","onKeyChange","addClass","userKey","removeClass","setTimeout","licenseIssues","message","then","i","url","upgradeAvailable","edition","insertBefore","$form","$oldExpired","$p","$issues","charAt","substring","$newExpired","version","add","expired","renewalUrl","jQuery"],"mappings":"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","file":"PluginManager.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.PluginManager = Garnish.Base.extend(\n        {\n            init: function() {\n                this.getPluginLicenseInfo()\n                    .then(function(response) {\n                        for (var handle in response) {\n                            if (response.hasOwnProperty(handle)) {\n                                if (!response[handle].isComposerInstalled) {\n                                    this.addUninstalledPluginRow(handle, response[handle]);\n                                } else {\n                                    (new Plugin(this, $('#plugin-' + handle))).update(response[handle]);\n                                }\n                            }\n                        }\n                    }.bind(this));\n            },\n\n            getPluginLicenseInfo: function() {\n                return new Promise(function(resolve, reject) {\n                    Craft.sendApiRequest('GET', 'cms-licenses', {\n                            params: {\n                                include: 'plugins',\n                            },\n                        })\n                        .then(function(response) {\n                            Craft.postActionRequest('app/get-plugin-license-info', {\n                                pluginLicenses: response.license.pluginLicenses || [],\n                            }, function(response, textStatus) {\n                                if (textStatus === 'success') {\n                                    resolve(response);\n                                } else {\n                                    reject();\n                                }\n                            }, {\n                                contentType: 'json'\n                            });\n                        })\n                        .catch(reject);\n                });\n            },\n\n            addUninstalledPluginRow: function(handle, info) {\n                var $table = $('#plugins');\n                if (!$table.length) {\n                    $table = $('<table/>', {\n                        id: 'plugins',\n                        'class': 'data fullwidth collapsible',\n                        html: '<tbody></tbody>'\n                    });\n                    $('#no-plugins').replaceWith($table);\n                }\n\n                var $row = $('<tr/>', {\n                        data: {\n                            handle: handle,\n                        }\n                    })\n                    .appendTo($table.children('tbody'))\n                    .append(\n                        $('<th/>')\n                            .append(\n                                $('<div/>', {'class': 'plugin-infos'})\n                                    .append(\n                                        $('<div/>', {'class': 'icon'})\n                                            .append(\n                                                $('<img/>', {src: info.iconUrl})\n                                            )\n                                    )\n                                    .append(\n                                        $('<div/>', {'class': 'details'})\n                                            .append(\n                                                $('<h2/>', {text: info.name})\n                                            )\n                                            .append(\n                                                info.description\n                                                    ? $('<p/>', {text: info.description})\n                                                    : $()\n                                            )\n                                            .append(\n                                                info.documentationUrl\n                                                    ? $('<p/>', {'class': 'links'})\n                                                    .append(\n                                                        $('<a/>', {\n                                                            href: info.documentationUrl,\n                                                            target: '_blank',\n                                                            text: Craft.t('app', 'Documentation')\n                                                        })\n                                                    )\n                                                    : $()\n                                            )\n                                            .append(\n                                                $('<div/>', {'class': 'flex license-key'})\n                                                    .append(\n                                                        $('<div />', {'class': 'pane'})\n                                                            .append(\n                                                                $('<input/>', {\n                                                                    'class': 'text code',\n                                                                    size: 29,\n                                                                    maxlength: 29,\n                                                                    value: Craft.PluginManager.normalizeUserKey(info.licenseKey),\n                                                                    readonly: true,\n                                                                    disabled: true\n                                                                })\n                                                            )\n                                                    )\n                                            )\n                                    )\n                            )\n                    )\n                    .append(\n                        $('<td/>', {\n                            'class': 'nowrap',\n                            'data-title': Craft.t('app', 'Status')\n                        })\n                            .append(\n                                $('<span/>', {'class': 'status'})\n                            )\n                            .append(\n                                $('<span/>', {'class': 'light', text: Craft.t('app', 'Missing')})\n                            )\n                    )\n                    .append(\n                        info.latestVersion\n                            ? $('<td/>', {\n                                'class': 'nowrap thin',\n                                'data-title': Craft.t('app', 'Action')\n                            })\n                            .append(\n                                $('<form/>', {\n                                    method: 'post',\n                                    'accept-charset': 'UTF-8',\n                                })\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'action',\n                                            value: 'pluginstore/install'\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'packageName',\n                                            value: info.packageName\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'handle',\n                                            value: handle\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'edition',\n                                            value: info.licensedEdition\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'version',\n                                            value: info.latestVersion\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'licenseKey',\n                                            value: info.licenseKey\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'return',\n                                            value: 'settings/plugins'\n                                        })\n                                    )\n                                    .append(Craft.getCsrfInput())\n                                    .append(\n                                        $('<div/>', {'class': 'btngroup'})\n                                            .append(\n                                                $('<button/>', {\n                                                    type: 'button',\n                                                    'class': 'btn menubtn',\n                                                    'data-icon': 'settings'\n                                                })\n                                            )\n                                            .append(\n                                                $('<div/>', {\n                                                    'class': 'menu',\n                                                    'data-align': 'right',\n                                                })\n                                                    .append(\n                                                        $('<ul/>')\n                                                            .append(\n                                                                $('<li/>')\n                                                                    .append(\n                                                                        $('<button/>', {\n                                                                            type: 'button',\n                                                                            'class': 'formsubmit',\n                                                                            text: Craft.t('app', 'Install')\n                                                                        })\n                                                                    )\n                                                            )\n                                                    )\n                                            )\n                                    )\n                            )\n                            : $()\n                    )\n                ;\n\n                Craft.initUiElements($row);\n            }\n        }, {\n            normalizeUserKey: function(key) {\n                if (typeof key !== 'string' || key === '') {\n                    return '';\n                }\n                if (key[0] === '$') {\n                    return key;\n                }\n                return key.replace(/.{4}/g, '$&-').substr(0, 29).toUpperCase();\n            }\n        }\n    );\n\n    var Plugin = Garnish.Base.extend(\n        {\n            manager: null,\n            $row: null,\n            $details: null,\n            $keyContainer: null,\n            $keyInput: null,\n            $spinner: null,\n            $buyBtn: null,\n            handle: null,\n            updateTimeout: null,\n\n            init: function(manager, $row) {\n                this.manager = manager;\n                this.$row = $row;\n                this.$details = this.$row.find('.details');\n                this.$keyContainer = $row.find('.license-key')\n                this.$keyInput = this.$keyContainer.find('input.text').removeAttr('readonly');\n                this.$buyBtn = this.$keyContainer.find('.btn');\n                this.$spinner = $row.find('.spinner');\n                this.handle = this.$row.data('handle');\n                this.addListener(this.$keyInput, 'focus', 'onKeyFocus')\n                this.addListener(this.$keyInput, 'input', 'onKeyChange');\n            },\n\n            getKey: function() {\n                return this.$keyInput.val().replace(/\\-/g, '').toUpperCase();\n            },\n\n            onKeyFocus: function() {\n                this.$keyInput.select();\n            },\n\n            onKeyChange: function() {\n                if (this.updateTimeout) {\n                    clearTimeout(this.updateTimeout);\n                }\n                var key = this.getKey();\n                if (key.length === 0 || key.length === 24 || (key.length > 1 && key[0] === '$')) {\n                    // normalize\n                    var userKey = Craft.PluginManager.normalizeUserKey(key);\n                    this.$keyInput.val(userKey);\n                    this.updateTimeout = setTimeout($.proxy(this, 'updateLicenseStatus'), 100);\n                }\n            },\n\n            updateLicenseStatus: function() {\n                this.$spinner.removeClass('hidden');\n                Craft.postActionRequest('app/update-plugin-license', {handle: this.handle, key: this.getKey()}, function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        this.manager.getPluginLicenseInfo()\n                            .then(function(response) {\n                                this.$spinner.addClass('hidden');\n                                this.update(response[this.handle]);\n                            }.bind(this));\n                    }\n                }.bind(this))\n            },\n\n            update: function(info) {\n                // update the status icon\n                var $oldIcon = this.$row.find('.license-key-status');\n                if (info.licenseKeyStatus == 'valid' || info.licenseIssues.length) {\n                    var $newIcon = $('<span/>', {'class': 'license-key-status ' + (info.licenseIssues.length === 0 ? 'valid' : '')});\n                    if ($oldIcon.length) {\n                        $oldIcon.replaceWith($newIcon);\n                    } else {\n                        $newIcon.appendTo(this.$row.find('.icon'));\n                    }\n                } else if ($oldIcon.length) {\n                    $oldIcon.remove();\n                }\n\n                // add the edition/trial badge\n                var $oldEdition = this.$row.find('.edition');\n                if (info.hasMultipleEditions || info.isTrial) {\n                    var $newEdition = info.upgradeAvailable\n                        ? $('<a/>', {href: Craft.getUrl('plugin-store/' + this.handle), 'class': 'edition'})\n                        : $('<div/>', {'class': 'edition'});\n                    if (info.hasMultipleEditions) {\n                        $('<div/>', {'class': 'edition-name', text: info.edition}).appendTo($newEdition);\n                    }\n                    if (info.isTrial) {\n                        $('<div/>', {'class': 'edition-trial', text: Craft.t('app', 'Trial')}).appendTo($newEdition);\n                    }\n                    if ($oldEdition.length) {\n                        $oldEdition.replaceWith($newEdition);\n                    } else {\n                        $newEdition.insertBefore(this.$row.find('.version'));\n                    }\n                } else if ($oldEdition.length) {\n                    $oldEdition.remove();\n                }\n\n                // show the license key?\n                var showLicenseKey = info.licenseKey || info.licenseKeyStatus !== 'unknown';\n                if (showLicenseKey) {\n                    this.$keyContainer.removeClass('hidden');\n                } else {\n                    this.$keyContainer.addClass('hidden');\n                }\n\n                // update the license key input class\n                if (showLicenseKey && info.licenseIssues.length) {\n                    this.$keyInput.addClass('error');\n                } else {\n                    this.$keyInput.removeClass('error');\n                }\n\n                // add the error message\n                this.$row.find('p.error').remove();\n                if (info.licenseIssues.length) {\n                    var $issues = $();\n                    var $p, $form, message;\n                    for (var i = 0; i < info.licenseIssues.length; i++) {\n                        switch (info.licenseIssues[i]) {\n                            case 'wrong_edition':\n                                message = Craft.t('app', 'This license is for the {name} edition.', {\n                                    name: info.licensedEdition.charAt(0).toUpperCase() + info.licensedEdition.substring(1)\n                                }) + ' <button type=\"button\" class=\"btn submit small formsubmit\">' + Craft.t('app', 'Switch') + '</button>';\n                                break;\n                            case 'mismatched':\n                                message = Craft.t('app', 'This license is tied to another Craft install. Visit {url} to resolve.', {\n                                    url: '<a href=\"https://id.craftcms.com\" rel=\"noopener\" target=\"_blank\">id.craftcms.com</a>'\n                                });\n                                break;\n                            case 'astray':\n                                message = Craft.t('app', 'This license isn’t allowed to run version {version}.', {\n                                    version: info.version\n                                });\n                                break;\n                            case 'required':\n                                message = Craft.t('app', 'A license key is required.');\n                                break;\n                            default:\n                                message = Craft.t('app', 'Your license key is invalid.');\n                        }\n\n                        $p = $('<p/>', {'class': 'error', html: message});\n                        if (info.licenseIssues[i] === 'wrong_edition') {\n                            $form = $('<form/>', {\n                                    method: 'post',\n                                    'accept-charset': 'UTF-8',\n                                })\n                                .append(Craft.getCsrfInput())\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'action',\n                                        value: 'plugins/switch-edition'\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'pluginHandle',\n                                        value: this.handle\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'edition',\n                                        value: info.licensedEdition\n                                    })\n                                )\n                                .append($p);\n\n                            Craft.initUiElements($form);\n                            $issues = $issues.add($form);\n                        } else {\n                            $issues = $issues.add($p);\n                        }\n                    }\n                    $issues.appendTo(this.$details);\n                    Craft.initUiElements()\n                }\n\n                // add the expired badge\n                var $oldExpired = this.$row.find('.expired');\n                if (info.expired) {\n                    var $newExpired = $('<p/>', {\n                        'class': 'warning with-icon expired',\n                        html: Craft.t('app', 'This license has expired.') +\n                            ' ' +\n                            Craft.t('app', '<a>Renew now</a> for another year of updates.').replace('<a>', '<a href=\"' + info.renewalUrl + '\" target=\"_blank\">')\n                    });\n                    if ($oldExpired.length) {\n                        $oldExpired.replaceWith($newExpired);\n                    } else {\n                        $newExpired.appendTo(this.$details);\n                    }\n                }\n\n                // show/hide the Buy button\n                if (showLicenseKey && !info.licenseKey) {\n                    this.$buyBtn.removeClass('hidden');\n                    if (info.licenseIssues.length) {\n                        this.$buyBtn.addClass('submit');\n                    } else {\n                        this.$buyBtn.removeClass('submit');\n                    }\n                } else {\n                    this.$buyBtn.addClass('hidden');\n                }\n            }\n        }\n    )\n})(jQuery);\n"]}