{"version":3,"sources":["webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","webpack:///./node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js","webpack:///./node_modules/vue/dist/vue.esm-bundler.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@babel/parser/lib/index.js"],"names":["targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","fn","options","_isEffect","isEffect","raw","effect","active","scheduler","undefined","includes","trackStack","push","shouldTrack","pop","resetTracking","length","id","uid","allowRecurse","deps","createReactiveEffect","lazy","stop","onStop","i","delete","pauseTracking","last","track","target","type","key","depsMap","get","set","Map","dep","Set","has","add","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","forEach","builtInSymbols","Object","getOwnPropertyNames","map","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","value","readonly","reactive","method","Array","prototype","args","arr","toRaw","this","l","apply","createSetter","shallowSet","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","call","has$1","size","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isReactive","isProxy","markRaw","convert","val","r","Boolean","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","rawValue","triggerRef","ref","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","ret","toRef","ObjectRefImpl","_object","_key","ComputedRefImpl","getter","_setter","_dirty","stack","warn","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","currentVNode","normalizedStack","vnode","recurseCount","parentInstance","parent","getComponentTrace","callWithErrorHandling","join","formatComponentName","warnArgs","logs","entry","postfix","isRoot","open","close","props","formatProps","formatTraceEntry","formatTrace","console","keys","slice","formatProp","JSON","stringify","name","err","handleError","callWithAsyncErrorHandling","catch","values","throwInDev","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","contextVNode","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","then","bind","queueJob","job","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","index","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","a","b","getId","Infinity","devtools","setDevtoolsHook","hook","event","handlerName","handler","startsWith","emitted","normalizeEmitsOptions","comp","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","mixins","extends","isEmitListener","replace","toLowerCase","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","emit","render","renderCache","data","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","some","filterModelListeners","cloneVNode","dirs","concat","transition","createVNode","Comment","filterSingleRoot","children","filtered","child","isVNode","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","el","subTree","Suspense","__isSuspense","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","optimized","rendererInternals","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","pendingBranch","ssContent","ssFallback","setActiveBranch","mountSuspense","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","onPending","timeout","setTimeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","create","m","move","n","remove","isUnmounted","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","onResolve","fallbackVNode","onFallback","mountFallback","setupRenderEffect","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","normalizeSuspenseSlot","s","queueEffectWithSuspense","branch","isRenderingCompiledSlot","setCompiledSlotRendering","renderSlot","slot","rendered","openBlock","createBlock","Fragment","_","withCtx","renderFnWithContext","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","arguments","setFullProps","rawProps","needCastKeys","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","default","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","String","getType","ctor","match","toString","isSameType","expectedTypes","len","injectHook","currentInstance","prepend","hooks","wrappedHook","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","watchEffect","doWatch","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","flush","onTrack","onTrigger","cleanup","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransition","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","clone","isKeepAlive","keepComment","keyedFragmentCount","patchFlag","__isKeepAlive","KeepAlive","inheritRef","include","RegExp","exclude","max","cache","current","sharedContext","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getName","pruneCacheEntry","cached","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","pendingCacheKey","cacheSubtree","getInnerChild","rawVNode","cachedVNode","parseInt","displayName","pattern","split","indexOf","test","onActivated","registerKeepAliveHook","onDeactivated","__wdc","injectToKeepAliveRoot","keepAliveRoot","injected","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","withDirectives","directives","bindings","dir","arg","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","createAppContext","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","setRef","dynamicChildren","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","firstChild","parentVNode","isFragment","end","prodEffectOptions","rawRef","oldRawRef","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","scopeId","is","mountChildren","unmountChildren","needCallTransitionHooks","beforeEnter","enter","treeOwnerId","__scopeId","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","propsToUpdate","dynamicProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","emptyAppContext","uid$1","accessCache","setupContext","bc","c","bm","bu","u","bum","rtg","rtc","createComponentInstance","isSSR","isStateful","InternalObjectKey","initProps","initSlots","setupResult","PublicInstanceProxyHandlers","setup","createSetupContext","resolvedResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","moveType","leave","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","removeFragment","performRemove","_vnode","mc","pc","pbc","createApp","ch1","ch2","disabled","resolveTarget","select","targetSelector","to","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","mount","wasDisabled","currentContainer","currentAnchor","nextTarget","targetNode","_lpa","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","registry","blockStack","currentBlock","disableTracking","vnodeArgsTransformer","setBlockTracking","__v_isVNode","transformVNodeArgs","transformer","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","klass","isSuspense","isTeleport","content","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","createStaticVNode","numberOfNodes","createCommentVNode","asBlock","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","defineProperty","enumerable","configurable","createWatcher","callHookFromMixins","base","callHookFromExtends","baseHook","selfHook","chainedMixins","path","segments","createPathGetter","mergeOptions","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","$nextTick","$watch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","registerRuntimeCompiler","_compile","template","delimiters","_rc","classifyRE","__file","inferFromRegistry","toUpperCase","getterOrOptions","setter","defineComponent","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","__esModule","toStringTag","createInnerComp","loaded","delayed","h","propsOrChildren","ssrContextKey","useSSRContext","initCustomFormatter","renderList","renderItem","toHandlers","obj","createSlots","dynamicSlots","ssrUtils","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","nodeValue","selector","setAttribute","temp","first","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","Date","now","createEvent","timeStamp","cachedNow","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","initialValue","invoker","e","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","useCssModule","modules","mod","useCssVars","scoped","prefix","setVars","setVarsOnVNode","vars","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","cls","classList","_vtc","requestAnimationFrame","expectedType","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","window","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","d","toMs","positionMap","newPositionMap","TransitionGroup","moveClass","display","appendChild","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","body","offsetHeight","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","trim","number","_assign","castToNumber","domValue","activeElement","vModelCheckbox","setChecked","modelValue","_modelValue","elementValue","getValue","checked","assign","found","splice","getCheckboxValue","vModelRadio","vModelSelect","selectedVal","selected","multiple","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","modelToUse","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","self","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","middle","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","k","vShow","_vod","setDisplay","rendererOptions","transitionClasses","className","patchClass","cssText","removeAttribute","patchStyle","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","createSSRApp","defaultOnError","createCompilerError","code","loc","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","helperNameMap","locStub","line","column","offset","createVNodeCall","isBlock","helper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","isConstant","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","isStaticExp","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","memberExpRE","isMemberExpression","getInnerRange","newLoc","substr","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","allowEmpty","exp","findProp","dynamicOnly","isBindKey","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","injectProp","propsWithInjection","alreadyExists","propKeyName","toValidAssetId","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isVoidTag","isPreTag","decodeEntities","rawText","p1","comments","baseParse","rawOptions","originalSource","inPre","inVPre","createParserContext","getCursor","helpers","hoists","imports","temps","codegenNode","createRoot","parseChildren","getSelection","ancestors","ns","nodes","isEnd","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","parseText","pushNode","removedWhitespace","exec","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","hasVIs","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","dirName","startOffset","getNewPosition","endsWith","valueLoc","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","resultCache","doNotHoistNode","hasHoistedNode","hasRuntimeConstant","staticType","getStaticType","hoist","getPatchFlag","hasNonHoistableProps","getNodeProps","branches","transformHoist","isSingleElementRoot","returnType","childType","isRuntimeConstant","createTransformContext","prefixIdentifiers","hoistStatic","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","ssr","ssrCssVars","bindingMetadata","identifiers","scopes","vFor","vSlot","vPre","vOnce","currentNode","childIndex","helperString","list","removalIndex","onNodeRemoved","identifier","hoisted","createCacheExpression","traverseNode","createRootCodegen","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","matches","generate","ast","sourceMap","filename","optimizeImports","runtimeGlobalName","runtimeModuleName","indentLevel","pure","withoutNewLine","repeat","createCodegenContext","onContextCreated","indent","deindent","hasHelpers","useWithBlock","VueBinding","aliasHelper","staticHelpers","genNode","genHoists","genFunctionPreamble","optimizeSources","genAssets","toJSON","assets","resolver","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","transformIf","processCodegen","createIfBranch","ifNode","replaceNode","siblings","sibling","removeNode","processIf","createCodegenNodeForBranch","getParentCondition","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","vnodeCall","transformFor","parseResult","parseForExpression","addIdentifiers","removeIdentifiers","forNode","valueAlias","keyAlias","objectIndexAlias","processFor","renderExp","keyProp","isStableFragment","fragmentFlag","childBlock","isTemplate","needFragmentWrapper","slotOutlet","createForLoopParams","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","buildDefaultSlotProperty","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","hasForwardedSlots","directiveImportMap","transformElement","isComponent","vnodeTag","isProp","builtIn","resolveComponentType","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isBind","isOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","knownProps","mergeAsArray","transformSlotOutlet","propsWithoutName","processSlotOutlet","slotArgs","fnExpRE","transformOn","augmentor","eventName","isCacheable","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","transformText","hasText","callArgs","WeakSet","transformOnce","transformModel","createTransformProps","expString","propName","modifiersKey","baseCompile","isModuleMode","on","model","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","getOwnPropertySymbols","isRawTextContainer","parserOptions","parseInlineCSS","createDOMCompilerError","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","baseResult","directiveToUse","isInvalidType","hasDynamicKeyVBind","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","show","compileCache","compileToFunction","makeMap","str","expectsLowerCase","PatchFlagNames","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","isHTMLTag","isSVGTag","looseEqual","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","findIndex","toDisplayString","replacer","isMap","entries","reduce","isSet","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isModelListener","extend","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","isReservedProp","cacheStringFunction","camelizeRE","camelize","hyphenateRE","hyphenate","capitalize","charAt","hasChanged","invokeArrayFns","fns","def","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","global","exports","TokenType","label","conf","keyword","beforeExpr","startsExpr","rightAssociative","isLoop","isAssign","binop","updateContext","keywords","createKeyword","token","createBinop","types","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","isWhitespace","Position","col","SourceLocation","identifierName","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","isSimpleProperty","kind","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","readTmplToken","functionExpression","functionStatement","exprAllowed","out","curContext","prevType","allowed","prodParam","hasYield","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","isRedeclaredInScope","TypeScriptScope","super","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","declareName","checkLocalExport","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","hasPlugin","plugins","getPluginOption","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","regex","estreeParseLiteral","bigInt","BigInt","parseLiteral","directiveLiteral","stmt","startNodeAt","expression","extra","finishNodeAt","initFunction","checkDeclaration","expr","checkClashes","contextDescription","disallowLetBinding","checkLVal","isRecord","protoRef","refExpressionErrors","checkProto","_stmt$expression$extr","parenthesized","stmtToDirective","allowDirectives","topLevel","parseBlockBody","directiveStatements","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","parseExprAtom","startPos","startLoc","allowExpression","isMethod","parseFunctionBody","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","parseObjectMethod","shorthand","parseObjectProperty","toAssignable","isLast","toAssignableObjectExpressionProp","optional","finishCallExpression","exprList","isParenthesizedExpr","toReferencedListDeep","parseExport","exported","specifiers","noCalls","parseSubscript","optionalChainMember","substring","chain","startNodeAtNode","jsx","chunkStart","ch","finishToken","getTokenFromCode","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","lineStart","entity","count","fromCodePoint","unexpected","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","lastTokEnd","lastTokEndLoc","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","comment","addComment","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","lastTokStart","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","implements","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","createIdentifier","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","parseStatement","isValidDirective","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","refNeedsArrowPos","tryParse","parseConditional","failState","originalNoArrowAt","noArrowAt","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","checkParams","parse","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","declarationNode","parseExportSpecifiers","parseExportFrom","parseExportDeclaration","eatExportStar","hasNamespace","maybeParseExportNamespaceSpecifier","isStatement","optionalId","parseClassId","member","parseClassMemberFromModifier","parseClassMember","finishOp","isIteratorStart","readWord","isBinding","operator","typeCastToParameter","trailingCommaPos","_expr$extra","parseClassProperty","parseClassPrivateProperty","isClassMethod","isClassProperty","isNonstaticConstructor","pushClassMethod","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","isPrivateNameAllowed","parsePropertyName","parseObjPropValue","parseMaybeDefault","shouldParseDefaultImport","specifier","local","maybeParseDefaultImportSpecifier","firstIdentLoc","firstIdent","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","parseFunctionParams","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","canBeArrow","parseParenAndDistinguishExpression","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","parseSubscripts","subscriptState","isLookaheadToken_lt","typeArguments","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseNewArguments","parseArrowExpression","hasFlowComment","nextToken","readToken_mult_modulo","readToken_pipe_amp","file","program","fileNode","parseTopLevel","skipFlowComment","hasFlowCommentCompletion","skipBlockComment","shiftToFirstNonWhiteSpace","ch3","enumName","memberName","suppliedType","explicitType","message","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","nodeAny","tsParseSignatureMember","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","parseTemplateSubstitution","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","asserts","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","oldContext","tsDoThenParseType","initializer","isConst","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","tsCheckLineTerminatorAndMatch","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","maybeInArrowParameters","oldYieldPos","yieldPos","oldAwaitPos","awaitPos","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","accessibility","parseAccessModifier","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","registerFunctionStatementId","allowPlaceholder","parseExprListItem","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","parseStatementContent","tsParseModifiers","callParseClassMember","parseClassMemberWithIsStatic","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","parseBindingAtom","parseMaybeDecoratorArguments","readToken_lt_gt","canHaveLeadingDecorator","baseCount","getGetterSetterExpectedParamCount","firstParam","parseCatchClauseParam","oldIsDeclareContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","errorRecovery","State","endLoc","errors","potentialArrowAt","inParameters","maybeInAsyncArrowHead","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","trailingComments","leadingComments","commentStack","commentPreviousNode","lastTokStartLoc","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","ExpressionErrors","shorthandAssign","doubleProto","Node","parser","innerComments","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","_Array$from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","oldStatic","newStatic","_this$stack","Parser","sawUnambiguousESM","ambiguousScriptDifferentAst","takeAllComments","lastElement","newTrailingComments","leadingComment","lastChild","lastInStack","adjustCommentsAfterTrailingComma","firstTrailingCommentIndex","lastIndex","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","_raise","errorContext","isLookahead","checkKeywordEscapes","pushToken","old","curr","lastIndexOf","skipSpace","codePointAt","block","pushComment","startSkip","loop","skipLineComment","readToken_interpreter","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","escaped","inClass","mods","char","charCode","radix","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","readWord1","op","nameStart","nameEnd","messageOrType","missingPlugin","names","oldState","abortSignal","andThrow","processComment","locationNode","_node$extra3","_node$extra2","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedList","parseObjectLike","closeCharCode","elts","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","strictModeChanged","_expr$properties","_expr$elements","elem","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseYield","ownExpressionErrors","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","isDelete","parseUpdate","parseExprSubscripts","maybeAsyncArrow","oldMaybeInAsyncArrowHead","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","checkYieldAwaitInDefaultParams","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","nodeForExtra","innerParenStart","oldInFSharpPipelineDirectBody","addExtra","_call$extra","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","expectOnePlugin","oldLabels","allowSuper","parseMetaProperty","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenStart","metaProp","inNonArrowFunction","parseNew","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","propHash","parsePropertyDefinition","isLiteralPropertyName","parseSpread","maybeAsyncOrAccessorProp","keyName","_params","getObjectOrClassMethodParams","checkGetterSetterParams","oldInPropertyName","generator","canBePattern","isTuple","isExpression","oldInParameters","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","nameHash","isKeyword","inFunction","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","outerContextTopicState","outerContextSoloAwaitState","interpreter","parseInterpreterDirective","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","hasReturn","discriminant","cases","sawDefault","isCase","simple","clause","finalizer","_this$state$labels","statementStart","createNewLexicalScope","afterBlockParse","parsedNonDirective","setStrict","isForIn","await","isFor","isTypescript","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","hadStaticBlock","parseClassStaticBlock","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","SCOPE_CLASS","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","parseModuleExportName","FUNC_STATEMENT","hasFrom","nextAfterFrom","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","_i5","_node$declaration$dec","_i6","_node$properties","_i7","_node$elements","surrogate","parseNext","assertions","maybeParseImportAssertions","maybeParseModuleAttributes","attrNames","assertionKeyNode","parseAssertEntries","parseImportSpecifierLocal","parseImportSpecifier","opts","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","_unused","moduleError","_unused2","getExpression","tokTypes"],"mappings":";;;;;;;;;uxTAEA,MAAMA,EAAY,IAAIC,QAChBC,EAAc,GACpB,IAAIC,EACJ,MAAMC,EAAcC,OAA6D,IAC3EC,EAAsBD,OAAqE,IAIjG,SAAS,EAAOE,EAAIC,EAAU,MAH9B,SAAkBD,GACd,OAAOA,IAAuB,IAAjBA,EAAGE,WAGZC,CAASH,KACTA,EAAKA,EAAGI,KAEZ,MAAMC,EAgBV,SAA8BL,EAAIC,GAC9B,MAAMI,EAAS,WACX,IAAKA,EAAOC,OACR,OAAOL,EAAQM,eAAYC,EAAYR,IAE3C,IAAKL,EAAYc,SAASJ,GAAS,CAC/B,EAAQA,GACR,IAII,OAkCZK,EAAWC,KAAKC,GAChBA,GAAc,EArCFjB,EAAYgB,KAAKN,GACjBT,EAAeS,EACRL,IAEX,QACIL,EAAYkB,MACZC,IACAlB,EAAeD,EAAYA,EAAYoB,OAAS,MAW5D,OAPAV,EAAOW,GAAKC,IACZZ,EAAOa,eAAiBjB,EAAQiB,aAChCb,EAAOH,WAAY,EACnBG,EAAOC,QAAS,EAChBD,EAAOD,IAAMJ,EACbK,EAAOc,KAAO,GACdd,EAAOJ,QAAUA,EACVI,EA3CQe,CAAqBpB,EAAIC,GAIxC,OAHKA,EAAQoB,MACThB,IAEGA,EAEX,SAASiB,EAAKjB,GACNA,EAAOC,SACP,EAAQD,GACJA,EAAOJ,QAAQsB,QACflB,EAAOJ,QAAQsB,SAEnBlB,EAAOC,QAAS,GAGxB,IAAIW,EAAM,EA8BV,SAAS,EAAQZ,GACb,MAAM,KAAEc,GAASd,EACjB,GAAIc,EAAKJ,OAAQ,CACb,IAAK,IAAIS,EAAI,EAAGA,EAAIL,EAAKJ,OAAQS,IAC7BL,EAAKK,GAAGC,OAAOpB,GAEnBc,EAAKJ,OAAS,GAGtB,IAAIH,GAAc,EAClB,MAAMF,EAAa,GACnB,SAASgB,IACLhB,EAAWC,KAAKC,GAChBA,GAAc,EAMlB,SAASE,IACL,MAAMa,EAAOjB,EAAWG,MACxBD,OAAuBJ,IAATmB,GAA4BA,EAE9C,SAASC,EAAMC,EAAQC,EAAMC,GACzB,IAAKnB,QAAgCJ,IAAjBZ,EAChB,OAEJ,IAAIoC,EAAUvC,EAAUwC,IAAIJ,GACvBG,GACDvC,EAAUyC,IAAIL,EAASG,EAAU,IAAIG,KAEzC,IAAIC,EAAMJ,EAAQC,IAAIF,GACjBK,GACDJ,EAAQE,IAAIH,EAAMK,EAAM,IAAIC,KAE3BD,EAAIE,IAAI1C,KACTwC,EAAIG,IAAI3C,GACRA,EAAauB,KAAKR,KAAKyB,IAW/B,SAASI,EAAQX,EAAQC,EAAMC,EAAKU,EAAUC,EAAUC,GACpD,MAAMX,EAAUvC,EAAUwC,IAAIJ,GAC9B,IAAKG,EAED,OAEJ,MAAMY,EAAU,IAAIP,IACdE,EAAOM,IACLA,GACAA,EAAaC,QAAQzC,KACbA,IAAWT,GAAgBS,EAAOa,eAClC0B,EAAQL,IAAIlC,MAK5B,GAAa,UAATyB,EAGAE,EAAQc,QAAQP,QAEf,GAAY,WAARR,GAAoB,YAAQF,GACjCG,EAAQc,QAAQ,CAACV,EAAKL,MACN,WAARA,GAAoBA,GAAOU,IAC3BF,EAAIH,UAUZ,YAJY,IAARL,GACAQ,EAAIP,EAAQC,IAAIF,IAGZD,GACJ,IAAK,MACI,YAAQD,GAMJ,YAAaE,IAElBQ,EAAIP,EAAQC,IAAI,YAPhBM,EAAIP,EAAQC,IAAIpC,IACZ,YAAMgC,IACNU,EAAIP,EAAQC,IAAIlC,KAOxB,MACJ,IAAK,SACI,YAAQ8B,KACTU,EAAIP,EAAQC,IAAIpC,IACZ,YAAMgC,IACNU,EAAIP,EAAQC,IAAIlC,KAGxB,MACJ,IAAK,MACG,YAAM8B,IACNU,EAAIP,EAAQC,IAAIpC,IAwBhC+C,EAAQE,QAnBKzC,IAYLA,EAAOJ,QAAQM,UACfF,EAAOJ,QAAQM,UAAUF,GAGzBA,MAMZ,MAAM0C,EAAiB,IAAIV,IAAIW,OAAOC,oBAAoBnD,QACrDoD,IAAInB,GAAOjC,OAAOiC,IAClBoB,OAAO,MACN,EAAoBC,IACpBC,EAA2BD,GAAa,GAAO,GAC/CE,EAA4BF,GAAa,GACzCG,EAAmCH,GAAa,GAAM,GACtDI,EAAwB,GA4B9B,SAASJ,EAAaK,GAAa,EAAOC,GAAU,GAChD,OAAO,SAAa7B,EAAQE,EAAK4B,GAC7B,GAAY,mBAAR5B,EACA,OAAQ0B,EAEP,GAAY,mBAAR1B,EACL,OAAO0B,EAEN,GAAY,YAAR1B,GACL4B,KAAcF,EAAaG,GAAcC,IAAa5B,IAAIJ,GAC1D,OAAOA,EAEX,MAAMiC,EAAgB,YAAQjC,GAC9B,GAAIiC,GAAiB,YAAON,EAAuBzB,GAC/C,OAAOgC,QAAQ9B,IAAIuB,EAAuBzB,EAAK4B,GAEnD,MAAMK,EAAMD,QAAQ9B,IAAIJ,EAAQE,EAAK4B,GACrC,GAAI,YAAS5B,GACPgB,EAAeT,IAAIP,GACX,cAARA,GAA+B,cAARA,EACzB,OAAOiC,EAKX,GAHKP,GACD7B,EAAMC,EAAQ,EAAiBE,GAE/B2B,EACA,OAAOM,EAEX,GAAIC,GAAMD,GAAM,CAGZ,OADsBF,IAAkB,YAAa/B,GAC/BiC,EAAIE,MAAQF,EAEtC,OAAI,YAASA,GAIFP,EAAaU,GAASH,GAAOI,GAASJ,GAE1CA,GAlEf,CAAC,WAAY,UAAW,eAAelB,QAAQf,IAC3C,MAAMsC,EAASC,MAAMC,UAAUxC,GAC/ByB,EAAsBzB,GAAO,YAAayC,GACtC,MAAMC,EAAMC,GAAMC,MAClB,IAAK,IAAInD,EAAI,EAAGoD,EAAID,KAAK5D,OAAQS,EAAIoD,EAAGpD,IACpCI,EAAM6C,EAAK,EAAiBjD,EAAI,IAGpC,MAAMwC,EAAMK,EAAOQ,MAAMJ,EAAKD,GAC9B,OAAa,IAATR,IAAsB,IAARA,EAEPK,EAAOQ,MAAMJ,EAAKD,EAAKtB,IAAIwB,KAG3BV,KAInB,CAAC,OAAQ,MAAO,QAAS,UAAW,UAAUlB,QAAQf,IAClD,MAAMsC,EAASC,MAAMC,UAAUxC,GAC/ByB,EAAsBzB,GAAO,YAAayC,GACtC9C,IACA,MAAMsC,EAAMK,EAAOQ,MAAMF,KAAMH,GAE/B,OADA1D,IACOkD,KA6Cf,MAAM,EAAoBc,IACpBC,EAA2BD,GAAa,GAC9C,SAASA,EAAapB,GAAU,GAC5B,OAAO,SAAa7B,EAAQE,EAAKmC,EAAOP,GACpC,MAAMjB,EAAWb,EAAOE,GACxB,IAAK2B,IACDQ,EAAQQ,GAAMR,IACT,YAAQrC,IAAWoC,GAAMvB,KAAcuB,GAAMC,IAE9C,OADAxB,EAASwB,MAAQA,GACV,EAGf,MAAMc,EAAS,YAAQnD,IAAW,YAAaE,GACzCkD,OAAOlD,GAAOF,EAAOd,OACrB,YAAOc,EAAQE,GACfmD,EAASnB,QAAQ7B,IAAIL,EAAQE,EAAKmC,EAAOP,GAU/C,OARI9B,IAAW6C,GAAMf,KACZqB,EAGI,YAAWd,EAAOxB,IACvBF,EAAQX,EAAQ,MAAiBE,EAAKmC,GAHtC1B,EAAQX,EAAQ,MAAiBE,EAAKmC,IAMvCgB,GAuBf,MAAMC,EAAkB,CACpBlD,IAAG,EACHC,IAAG,EACHkD,eAvBJ,SAAwBvD,EAAQE,GAC5B,MAAMiD,EAAS,YAAOnD,EAAQE,GAExBmD,GADWrD,EAAOE,GACTgC,QAAQqB,eAAevD,EAAQE,IAI9C,OAHImD,GAAUF,GACVxC,EAAQX,EAAQ,SAAuBE,OAAKvB,GAEzC0E,GAiBP5C,IAfJ,SAAaT,EAAQE,GACjB,MAAMmD,EAASnB,QAAQzB,IAAIT,EAAQE,GAInC,OAHK,YAASA,IAASgB,EAAeT,IAAIP,IACtCH,EAAMC,EAAQ,EAAiBE,GAE5BmD,GAWPG,QATJ,SAAiBxD,GAEb,OADAD,EAAMC,EAAQ,EAAyBhC,GAChCkE,QAAQsB,QAAQxD,KASrByD,EAAmB,CACrBrD,IAAKqB,EACLpB,IAAG,CAACL,EAAQE,KAID,EAEXqD,eAAc,CAACvD,EAAQE,KAIZ,GAGTwD,EAA0B,YAAO,GAAIJ,EAAiB,CACxDlD,IAAKoB,EACLnB,IAAK6C,IAKHS,EAA0B,YAAO,GAAIF,EAAkB,CACzDrD,IAAKsB,IAGHkC,EAAcvB,GAAU,YAASA,GAASE,GAASF,GAASA,EAC5DwB,EAAcxB,GAAU,YAASA,GAASC,GAASD,GAASA,EAC5DyB,EAAazB,GAAUA,EACvB0B,EAAYC,GAAM9B,QAAQ+B,eAAeD,GAC/C,SAASE,EAAMlE,EAAQE,EAAK0B,GAAa,EAAOuC,GAAY,GAIxD,MAAMC,EAAYvB,GADlB7C,EAASA,EAA0B,SAE7BqE,EAASxB,GAAM3C,GACjBA,IAAQmE,IACPzC,GAAc7B,EAAMqE,EAAW,EAAiBlE,IAEpD0B,GAAc7B,EAAMqE,EAAW,EAAiBC,GACjD,MAAM,IAAE5D,GAAQsD,EAASK,GACnBE,EAAO1C,EAAaiC,EAAaM,EAAYL,EAAYF,EAC/D,OAAInD,EAAI8D,KAAKH,EAAWlE,GACboE,EAAKtE,EAAOI,IAAIF,IAElBO,EAAI8D,KAAKH,EAAWC,GAClBC,EAAKtE,EAAOI,IAAIiE,SADtB,EAIT,SAASG,EAAMtE,EAAK0B,GAAa,GAC7B,MAAM5B,EAAS8C,KAAwB,QACjCsB,EAAYvB,GAAM7C,GAClBqE,EAASxB,GAAM3C,GAKrB,OAJIA,IAAQmE,IACPzC,GAAc7B,EAAMqE,EAAW,EAAiBlE,IAEpD0B,GAAc7B,EAAMqE,EAAW,EAAiBC,GAC1CnE,IAAQmE,EACTrE,EAAOS,IAAIP,GACXF,EAAOS,IAAIP,IAAQF,EAAOS,IAAI4D,GAExC,SAASI,EAAKzE,EAAQ4B,GAAa,GAG/B,OAFA5B,EAASA,EAA0B,SAClC4B,GAAc7B,EAAM8C,GAAM7C,GAAS,EAAyBhC,GACtDkE,QAAQ9B,IAAIJ,EAAQ,OAAQA,GAEvC,SAAS,EAAIqC,GACTA,EAAQQ,GAAMR,GACd,MAAMrC,EAAS6C,GAAMC,MAEfK,EADQY,EAAS/D,GACFS,IAAI8D,KAAKvE,EAAQqC,GAChCgB,EAASrD,EAAOU,IAAI2B,GAI1B,OAHKc,GACDxC,EAAQX,EAAQ,MAAiBqC,EAAOA,GAErCgB,EAEX,SAASqB,EAAMxE,EAAKmC,GAChBA,EAAQQ,GAAMR,GACd,MAAMrC,EAAS6C,GAAMC,OACf,IAAErC,EAAG,IAAEL,GAAQ2D,EAAS/D,GAC9B,IAAImD,EAAS1C,EAAI8D,KAAKvE,EAAQE,GACzBiD,IACDjD,EAAM2C,GAAM3C,GACZiD,EAAS1C,EAAI8D,KAAKvE,EAAQE,IAK9B,MAAMW,EAAWT,EAAImE,KAAKvE,EAAQE,GAC5BmD,EAASrD,EAAOK,IAAIH,EAAKmC,GAO/B,OANKc,EAGI,YAAWd,EAAOxB,IACvBF,EAAQX,EAAQ,MAAiBE,EAAKmC,GAHtC1B,EAAQX,EAAQ,MAAiBE,EAAKmC,GAKnCgB,EAEX,SAASsB,EAAYzE,GACjB,MAAMF,EAAS6C,GAAMC,OACf,IAAErC,EAAG,IAAEL,GAAQ2D,EAAS/D,GAC9B,IAAImD,EAAS1C,EAAI8D,KAAKvE,EAAQE,GACzBiD,IACDjD,EAAM2C,GAAM3C,GACZiD,EAAS1C,EAAI8D,KAAKvE,EAAQE,IAKbE,GAAMA,EAAImE,KAAKvE,EAAQE,GAAxC,MAEMmD,EAASrD,EAAOJ,OAAOM,GAI7B,OAHIiD,GACAxC,EAAQX,EAAQ,SAAuBE,OAAKvB,GAEzC0E,EAEX,SAASuB,IACL,MAAM5E,EAAS6C,GAAMC,MACf+B,EAA2B,IAAhB7E,EAAOyE,KAOlBpB,EAASrD,EAAO4E,QAItB,OAHIC,GACAlE,EAAQX,EAAQ,aAAqBrB,OAAWA,GAE7C0E,EAEX,SAASyB,EAAclD,EAAYuC,GAC/B,OAAO,SAAiBY,EAAUC,GAC9B,MAAMC,EAAWnC,KACX9C,EAASiF,EAA4B,QACrCb,EAAYvB,GAAM7C,GAClBsE,EAAO1C,EAAaiC,EAAaM,EAAYL,EAAYF,EAE/D,OADChC,GAAc7B,EAAMqE,EAAW,EAAyBpG,GAClDgC,EAAOiB,QAAQ,CAACoB,EAAOnC,IAInB6E,EAASR,KAAKS,EAASV,EAAKjC,GAAQiC,EAAKpE,GAAM+E,KAIlE,SAASC,EAAqB1C,EAAQZ,EAAYuC,GAC9C,OAAO,YAAaxB,GAChB,MAAM3C,EAAS8C,KAAwB,QACjCsB,EAAYvB,GAAM7C,GAClBmF,EAAc,YAAMf,GACpBgB,EAAoB,YAAX5C,GAAyBA,IAAWvE,OAAOoH,UAAYF,EAChEG,EAAuB,SAAX9C,GAAqB2C,EACjCI,EAAgBvF,EAAOwC,MAAWG,GAClC2B,EAAO1C,EAAaiC,EAAaM,EAAYL,EAAYF,EAK/D,OAJChC,GACG7B,EAAMqE,EAAW,EAAyBkB,EAAYpH,EAAsBF,GAGzE,CAEH,OACI,MAAM,MAAEqE,EAAK,KAAEmD,GAASD,EAAcE,OACtC,OAAOD,EACD,CAAEnD,QAAOmD,QACT,CACEnD,MAAO+C,EAAS,CAACd,EAAKjC,EAAM,IAAKiC,EAAKjC,EAAM,KAAOiC,EAAKjC,GACxDmD,SAIZ,CAACvH,OAAOoH,YACJ,OAAOvC,QAKvB,SAAS4C,EAAqBzF,GAC1B,OAAO,YAAa0C,GAKhB,MAAgB,WAAT1C,GAAyC6C,MAGxD,MAAM6C,EAA0B,CAC5B,IAAIzF,GACA,OAAOgE,EAAMpB,KAAM5C,IAEvB,WACI,OAAOuE,EAAK3B,OAEhBrC,IAAK+D,EACL9D,IAAG,EACHL,IAAKqE,EACL9E,OAAQ+E,EACRC,QACA3D,QAAS6D,GAAc,GAAO,IAE5Bc,EAA0B,CAC5B,IAAI1F,GACA,OAAOgE,EAAMpB,KAAM5C,GAAK,GAAO,IAEnC,WACI,OAAOuE,EAAK3B,OAEhBrC,IAAK+D,EACL9D,IAAG,EACHL,IAAKqE,EACL9E,OAAQ+E,EACRC,QACA3D,QAAS6D,GAAc,GAAO,IAE5Be,EAA2B,CAC7B,IAAI3F,GACA,OAAOgE,EAAMpB,KAAM5C,GAAK,IAE5B,WACI,OAAOuE,EAAK3B,MAAM,IAEtB,IAAI5C,GACA,OAAOsE,EAAMD,KAAKzB,KAAM5C,GAAK,IAEjCQ,IAAKgF,EAAqB,OAC1BrF,IAAKqF,EAAqB,OAC1B9F,OAAQ8F,EAAqB,UAC7Bd,MAAOc,EAAqB,SAC5BzE,QAAS6D,GAAc,GAAM,IAQjC,SAASgB,EAA4BlE,EAAYC,GAC7C,MAAMkE,EAAmBlE,EACnB+D,EACAhE,EACIiE,EACAF,EACV,MAAO,CAAC3F,EAAQE,EAAK4B,IACL,mBAAR5B,GACQ0B,EAEK,mBAAR1B,EACE0B,EAEM,YAAR1B,EACEF,EAEJkC,QAAQ9B,IAAI,YAAO2F,EAAkB7F,IAAQA,KAAOF,EACrD+F,EACA/F,EAAQE,EAAK4B,GAxBH,CAAC,OAAQ,SAAU,UAAW7D,OAAOoH,UAC7CpE,QAAQuB,IACpBmD,EAAwBnD,GAAU0C,EAAqB1C,GAAQ,GAAO,GACtEqD,EAAyBrD,GAAU0C,EAAqB1C,GAAQ,GAAM,GACtEoD,EAAwBpD,GAAU0C,EAAqB1C,GAAQ,GAAO,KAuB1E,MAAMwD,EAA4B,CAC9B5F,IAAK0F,GAA4B,GAAO,IAEtCG,EAA4B,CAC9B7F,IAAK0F,GAA4B,GAAO,IAEtCI,GAA6B,CAC/B9F,IAAK0F,GAA4B,GAAM,IAc3C,MAAM9D,GAAc,IAAInE,QAClBkE,GAAc,IAAIlE,QAoBxB,SAAS0E,GAASvC,GAEd,OAAIA,GAAUA,EAAyC,eAC5CA,EAEJmG,GAAqBnG,GAAQ,EAAOsD,EAAiB0C,GAKhE,SAASI,GAAgBpG,GACrB,OAAOmG,GAAqBnG,GAAQ,EAAO0D,EAAyBuC,GAExE,SAAS3D,GAAStC,GACd,OAAOmG,GAAqBnG,GAAQ,EAAMyD,EAAkByC,IAMhE,SAASG,GAAgBrG,GACrB,OAAOmG,GAAqBnG,GAAQ,EAAM2D,EAAyBuC,IAEvE,SAASC,GAAqBnG,EAAQ4B,EAAY0E,EAAcC,GAC5D,IAAK,YAASvG,GAIV,OAAOA,EAIX,GAAIA,EAA0B,WACxB4B,IAAc5B,EAAyC,gBACzD,OAAOA,EAGX,MAAMwG,EAAW5E,EAAaG,GAAcC,GACtCyE,EAAgBD,EAASpG,IAAIJ,GACnC,GAAIyG,EACA,OAAOA,EAGX,MAAMC,GAhDarE,EAgDcrC,GA/CC,WAAMmB,OAAOwF,aAAatE,GACtD,EAhBV,SAAuBuE,GACnB,OAAQA,GACJ,IAAK,SACL,IAAK,QACD,OAAO,EACX,IAAK,MACL,IAAK,MACL,IAAK,UACL,IAAK,UACD,OAAO,EACX,QACI,OAAO,GAMTC,CAAc,YAAUxE,IAHlC,IAAuBA,EAiDnB,GAAmB,IAAfqE,EACA,OAAO1G,EAEX,MAAM8G,EAAQ,IAAIC,MAAM/G,EAAuB,IAAf0G,EAAoCH,EAAqBD,GAEzF,OADAE,EAASnG,IAAIL,EAAQ8G,GACdA,EAEX,SAASE,GAAW3E,GAChB,OAAI,GAAWA,GACJ2E,GAAW3E,EAAyB,YAErCA,IAASA,EAAwC,gBAE/D,SAAS,GAAWA,GAChB,SAAUA,IAASA,EAAwC,gBAE/D,SAAS4E,GAAQ5E,GACb,OAAO2E,GAAW3E,IAAU,GAAWA,GAE3C,SAASQ,GAAMoC,GACX,OAASA,GAAYpC,GAAMoC,EAA4B,UAAOA,EAElE,SAASiC,GAAQ7E,GAEb,OADA,YAAIA,EAAO,YAAuB,GAC3BA,EAGX,MAAM8E,GAAWC,GAAQ,YAASA,GAAO7E,GAAS6E,GAAOA,EACzD,SAAShF,GAAMiF,GACX,OAAOC,QAAQD,IAAqB,IAAhBA,EAAEE,WAE1B,SAAS,GAAIlF,GACT,OAAOmF,GAAUnF,GAErB,SAASoF,GAAWpF,GAChB,OAAOmF,GAAUnF,GAAO,GAE5B,MAAM,GACF,YAAYqF,EAAWC,GAAW,GAC9B7E,KAAK4E,UAAYA,EACjB5E,KAAK6E,SAAWA,EAChB7E,KAAKyE,WAAY,EACjBzE,KAAK8E,OAASD,EAAWD,EAAYP,GAAQO,GAEjD,YAEI,OADA3H,EAAM8C,GAAMC,MAAO,EAAiB,SAC7BA,KAAK8E,OAEhB,UAAUC,GACF,YAAWhF,GAAMgF,GAAS/E,KAAK4E,aAC/B5E,KAAK4E,UAAYG,EACjB/E,KAAK8E,OAAS9E,KAAK6E,SAAWE,EAASV,GAAQU,GAC/ClH,EAAQkC,GAAMC,MAAO,MAAiB,QAAS+E,KAI3D,SAASL,GAAUM,EAAUjG,GAAU,GACnC,OAAIO,GAAM0F,GACCA,EAEJ,IAAI,GAAQA,EAAUjG,GAEjC,SAASkG,GAAWC,GAChBrH,EAAQkC,GAAMmF,GAAM,MAAiB,aAA+D,GAExG,SAASC,GAAMD,GACX,OAAO5F,GAAM4F,GAAOA,EAAI3F,MAAQ2F,EAEpC,MAAME,GAAwB,CAC1B9H,IAAK,CAACJ,EAAQE,EAAK4B,IAAamG,GAAM/F,QAAQ9B,IAAIJ,EAAQE,EAAK4B,IAC/DzB,IAAK,CAACL,EAAQE,EAAKmC,EAAOP,KACtB,MAAMjB,EAAWb,EAAOE,GACxB,OAAIkC,GAAMvB,KAAcuB,GAAMC,IAC1BxB,EAASwB,MAAQA,GACV,GAGAH,QAAQ7B,IAAIL,EAAQE,EAAKmC,EAAOP,KAInD,SAASqG,GAAUC,GACf,OAAOpB,GAAWoB,GACZA,EACA,IAAIrB,MAAMqB,EAAgBF,IAEpC,MAAMG,GACF,YAAYC,GACRxF,KAAKyE,WAAY,EACjB,MAAM,IAAEnH,EAAG,IAAEC,GAAQiI,EAAQ,IAAMvI,EAAM+C,KAAM,EAAiB,SAAU,IAAMnC,EAAQmC,KAAM,MAAiB,UAC/GA,KAAKyF,KAAOnI,EACZ0C,KAAK0F,KAAOnI,EAEhB,YACI,OAAOyC,KAAKyF,OAEhB,UAAUV,GACN/E,KAAK0F,KAAKX,IAGlB,SAASY,GAAUH,GACf,OAAO,IAAID,GAAcC,GAE7B,SAASI,GAAOC,GAIZ,MAAMC,EAAM,YAAQD,GAAU,IAAIlG,MAAMkG,EAAOzJ,QAAU,GACzD,IAAK,MAAMgB,KAAOyI,EACdC,EAAI1I,GAAO2I,GAAMF,EAAQzI,GAE7B,OAAO0I,EAEX,MAAME,GACF,YAAYC,EAASC,GACjBlG,KAAKiG,QAAUA,EACfjG,KAAKkG,KAAOA,EACZlG,KAAKyE,WAAY,EAErB,YACI,OAAOzE,KAAKiG,QAAQjG,KAAKkG,MAE7B,UAAUnB,GACN/E,KAAKiG,QAAQjG,KAAKkG,MAAQnB,GAGlC,SAASgB,GAAMF,EAAQzI,GACnB,OAAOkC,GAAMuG,EAAOzI,IACdyI,EAAOzI,GACP,IAAI4I,GAAcH,EAAQzI,GAGpC,MAAM+I,GACF,YAAYC,EAAQC,EAASvH,GACzBkB,KAAKqG,QAAUA,EACfrG,KAAKsG,QAAS,EACdtG,KAAKyE,WAAY,EACjBzE,KAAKtE,OAAS,EAAO0K,EAAQ,CACzB1J,MAAM,EACNd,UAAW,KACFoE,KAAKsG,SACNtG,KAAKsG,QAAS,EACdzI,EAAQkC,GAAMC,MAAO,MAAiB,aAIlDA,KAAuC,eAAIlB,EAE/C,YAMI,OALIkB,KAAKsG,SACLtG,KAAK8E,OAAS9E,KAAKtE,SACnBsE,KAAKsG,QAAS,GAElBrJ,EAAM8C,GAAMC,MAAO,EAAiB,SAC7BA,KAAK8E,OAEhB,UAAUhH,GACNkC,KAAKqG,QAAQvI,ICpzBrB,MAAMyI,GAAQ,GAOd,SAASC,GAAKC,KAAQ5G,GAGlB9C,IACA,MAAM2J,EAAWH,GAAMnK,OAASmK,GAAMA,GAAMnK,OAAS,GAAGuK,UAAY,KAC9DC,EAAiBF,GAAYA,EAASG,WAAWC,OAAOC,YACxDC,EAuBV,WACI,IAAIC,EAAeV,GAAMA,GAAMnK,OAAS,GACxC,IAAK6K,EACD,MAAO,GAKX,MAAMC,EAAkB,GACxB,KAAOD,GAAc,CACjB,MAAMjK,EAAOkK,EAAgB,GACzBlK,GAAQA,EAAKmK,QAAUF,EACvBjK,EAAKoK,eAGLF,EAAgBlL,KAAK,CACjBmL,MAAOF,EACPG,aAAc,IAGtB,MAAMC,EAAiBJ,EAAaN,WAAaM,EAAaN,UAAUW,OACxEL,EAAeI,GAAkBA,EAAeF,MAEpD,OAAOD,EA9COK,GACd,GAAIX,EACAY,GAAsBZ,EAAgBF,EAAU,GAA2B,CACvED,EAAM5G,EAAK4H,KAAK,IAChBf,GAAYA,EAAS1C,MACrBgD,EACKzI,IAAI,EAAG4I,WAAY,OAAOO,GAAoBhB,EAAUS,EAAMhK,UAC9DsK,KAAK,MACVT,QAGH,CACD,MAAMW,EAAW,CAAC,eAAelB,KAAU5G,GAEvCmH,EAAM5K,QAGNuL,EAAS3L,KAAK,QAgC1B,SAAqBgL,GACjB,MAAMY,EAAO,GAIb,OAHAZ,EAAM7I,QAAQ,CAAC0J,EAAOhL,KAClB+K,EAAK5L,QAAe,IAANa,EAAU,GAAK,CAAC,SAItC,UAA0B,MAAEsK,EAAK,aAAEC,IAC/B,MAAMU,EAAUV,EAAe,EAAI,QAAQA,qBAAkC,GACvEW,IAASZ,EAAMR,WAAsC,MAA1BQ,EAAMR,UAAUW,OAC3CU,EAAO,QAAQN,GAAoBP,EAAMR,UAAWQ,EAAMhK,KAAM4K,GAChEE,EAAQ,IAAMH,EACpB,OAAOX,EAAMe,MACP,CAACF,KAASG,GAAYhB,EAAMe,OAAQD,GACpC,CAACD,EAAOC,GAX+BG,CAAiBP,MAEvDD,EArCwBS,CAAYrB,IAEvCsB,QAAQ9B,QAAQmB,GAEpBxL,IA6CJ,SAASgM,GAAYD,GACjB,MAAM7I,EAAM,GACNkJ,EAAOlK,OAAOkK,KAAKL,GAOzB,OANAK,EAAKC,MAAM,EAAG,GAAGrK,QAAQf,IACrBiC,EAAIrD,QAQZ,SAASyM,EAAWrL,EAAKmC,EAAO9D,GAC5B,OAAI,YAAS8D,IACTA,EAAQmJ,KAAKC,UAAUpJ,GAChB9D,EAAM8D,EAAQ,CAAC,GAAGnC,KAAOmC,MAEV,iBAAVA,GACK,kBAAVA,GACE,MAATA,EACO9D,EAAM8D,EAAQ,CAAC,GAAGnC,KAAOmC,KAE3BD,GAAMC,IACXA,EAAQkJ,EAAWrL,EAAK2C,GAAMR,EAAMA,QAAQ,GACrC9D,EAAM8D,EAAQ,CAAInC,EAAH,QAAemC,EAAO,MAEvC,YAAWA,GACT,CAAC,GAAGnC,OAASmC,EAAMqJ,KAAO,IAAIrJ,EAAMqJ,QAAU,OAGrDrJ,EAAQQ,GAAMR,GACP9D,EAAM8D,EAAQ,CAAInC,EAAH,IAAWmC,IA3BrBkJ,CAAWrL,EAAK8K,EAAM9K,OAElCmL,EAAKnM,OAAS,GACdiD,EAAIrD,KAAK,QAENqD,EAyDX,SAASmI,GAAsBnM,EAAIqL,EAAUvJ,EAAM0C,GAC/C,IAAIR,EACJ,IACIA,EAAMQ,EAAOxE,KAAMwE,GAAQxE,IAE/B,MAAOwN,GACHC,GAAYD,EAAKnC,EAAUvJ,GAE/B,OAAOkC,EAEX,SAAS0J,GAA2B1N,EAAIqL,EAAUvJ,EAAM0C,GACpD,GAAI,YAAWxE,GAAK,CAChB,MAAMgE,EAAMmI,GAAsBnM,EAAIqL,EAAUvJ,EAAM0C,GAMtD,OALIR,GAAO,YAAUA,IACjBA,EAAI2J,MAAMH,IACNC,GAAYD,EAAKnC,EAAUvJ,KAG5BkC,EAEX,MAAM4J,EAAS,GACf,IAAK,IAAIpM,EAAI,EAAGA,EAAIxB,EAAGe,OAAQS,IAC3BoM,EAAOjN,KAAK+M,GAA2B1N,EAAGwB,GAAI6J,EAAUvJ,EAAM0C,IAElE,OAAOoJ,EAEX,SAASH,GAAYD,EAAKnC,EAAUvJ,EAAM+L,GAAa,GAC9BxC,GAAWA,EAASS,MACzC,GAAIT,EAAU,CACV,IAAIyC,EAAMzC,EAASY,OAEnB,MAAM8B,EAAkB1C,EAAS1C,MAE3BqF,EAA+ElM,EACrF,KAAOgM,GAAK,CACR,MAAMG,EAAqBH,EAAII,GAC/B,GAAID,EACA,IAAK,IAAIzM,EAAI,EAAGA,EAAIyM,EAAmBlN,OAAQS,IAC3C,IAA+D,IAA3DyM,EAAmBzM,GAAGgM,EAAKO,EAAiBC,GAC5C,OAIZF,EAAMA,EAAI7B,OAGd,MAAMkC,EAAkB9C,EAASG,WAAWC,OAAO2C,aACnD,GAAID,EAEA,YADAhC,GAAsBgC,EAAiB,KAAM,GAA4B,CAACX,EAAKO,EAAiBC,KAM5G,SAAkBR,EAAK1L,EAAMuM,EAAcR,GAAa,GAoBhDZ,QAAQqB,MAAMd,GAtBlBe,CAASf,EAAK1L,EAAMuM,EAAcR,GA0BtC,IAAIW,IAAa,EACbC,IAAiB,EACrB,MAAMC,GAAQ,GACd,IAAIC,GAAa,EACjB,MAAMC,GAAqB,GAC3B,IAAIC,GAAoB,KACpBC,GAAgB,EACpB,MAAMC,GAAsB,GAC5B,IAAIC,GAAqB,KACrBC,GAAiB,EACrB,MAAMC,GAAkBC,QAAQC,UAChC,IAAIC,GAAsB,KACtBC,GAA2B,KAE/B,SAASC,GAASvP,GACd,MAAMwP,EAAIH,IAAuBH,GACjC,OAAOlP,EAAKwP,EAAEC,KAAK9K,KAAO3E,EAAG0P,KAAK/K,MAAQ3E,GAAMwP,EAEpD,SAASG,GAASC,GAORlB,GAAM3N,QACP2N,GAAMjO,SAASmP,EAAKpB,IAAcoB,EAAI1O,aAAeyN,GAAa,EAAIA,KACvEiB,IAAQN,KACRZ,GAAM/N,KAAKiP,GACXC,MAGR,SAASA,KACArB,IAAeC,KAChBA,IAAiB,EACjBY,GAAsBH,GAAgBO,KAAKK,KASnD,SAASC,GAAQC,EAAIC,EAAaC,EAAcC,GACvC,YAAQH,GAUTE,EAAavP,QAAQqP,GAThBC,GACAA,EAAYxP,SAASuP,EAAIA,EAAG9O,aAAeiP,EAAQ,EAAIA,IACxDD,EAAavP,KAAKqP,GAS1BH,KAKJ,SAASO,GAAiBJ,GACtBD,GAAQC,EAAIhB,GAAoBD,GAAqBE,IAEzD,SAASoB,GAAiBC,EAAMC,EAAY,MACxC,GAAI3B,GAAmB7N,OAAQ,CAO3B,IANAuO,GAA2BiB,EAC3B1B,GAAoB,IAAI,IAAIxM,IAAIuM,KAChCA,GAAmB7N,OAAS,EAIvB+N,GAAgB,EAAGA,GAAgBD,GAAkB9N,OAAQ+N,KAI9DD,GAAkBC,MAEtBD,GAAoB,KACpBC,GAAgB,EAChBQ,GAA2B,KAE3Be,GAAiBC,EAAMC,IAG/B,SAASC,GAAkBF,GACvB,GAAIvB,GAAoBhO,OAAQ,CAC5B,MAAM0P,EAAU,IAAI,IAAIpO,IAAI0M,KAG5B,GAFAA,GAAoBhO,OAAS,EAEzBiO,GAEA,YADAA,GAAmBrO,QAAQ8P,GAQ/B,IALAzB,GAAqByB,EAIrBzB,GAAmB0B,KAAK,CAACC,EAAGC,IAAMC,GAAMF,GAAKE,GAAMD,IAC9C3B,GAAiB,EAAGA,GAAiBD,GAAmBjO,OAAQkO,KAIjED,GAAmBC,MAEvBD,GAAqB,KACrBC,GAAiB,GAGzB,MAAM4B,GAASjB,GAAkB,MAAVA,EAAI5O,GAAa8P,IAAWlB,EAAI5O,GACvD,SAAS8O,GAAUQ,GACf7B,IAAiB,EACjBD,IAAa,EAIb6B,GAAiBC,GAUjB5B,GAAMgC,KAAK,CAACC,EAAGC,IAAMC,GAAMF,GAAKE,GAAMD,IACtC,IACI,IAAKjC,GAAa,EAAGA,GAAaD,GAAM3N,OAAQ4N,KAAc,CAC1D,MAAMiB,EAAMlB,GAAMC,IACdiB,GAIAzD,GAAsByD,EAAK,KAAM,KAI7C,QACIjB,GAAa,EACbD,GAAM3N,OAAS,EACfyP,KACAhC,IAAa,EACba,GAAsB,MAGlBX,GAAM3N,QAAUgO,GAAoBhO,SACpC+O,GAAUQ,IAyBK,IAAIjO,IAoBnB,IAAIF,IA8FhB,IAAI4O,GACJ,SAASC,GAAgBC,GACrBF,GAAWE,EAkCf,SAAS,GAAK5F,EAAU6F,KAAU1M,GAC9B,MAAMqI,EAAQxB,EAASS,MAAMe,OAAS,IAmCtC,IAAIsE,EAAc,KAAK,YAAW,YAASD,IACvCE,EAAUvE,EAAMsE,GAOpB,IAJKC,GAAWF,EAAMG,WAAW,aAC7BF,EAAc,KAAK,YAAW,YAAUD,IACxCE,EAAUvE,EAAMsE,KAEfC,EAED,GADAA,EAAUvE,EAAMsE,EAAc,QACzB9F,EAASiG,SAGT,GAAIjG,EAASiG,QAAQH,GACtB,YAHC9F,EAASiG,QAAU,IAAIH,IAAe,EAM3CC,GACA1D,GAA2B0D,EAAS/F,EAAU,EAAiC7G,GAGvF,SAAS+M,GAAsBC,EAAMhG,EAAYiG,GAAU,GACvD,IAAKjG,EAAWkG,YAA0BlR,IAAjBgR,EAAKG,QAC1B,OAAOH,EAAKG,QAEhB,MAAMvR,EAAMoR,EAAKI,MACjB,IAAIC,EAAa,GAEbC,GAAa,EACjB,IAA4B,YAAWN,GAAO,CAC1C,MAAMO,EAAe3R,IACjB0R,GAAa,EACb,YAAOD,EAAYN,GAAsBnR,EAAKoL,GAAY,MAEzDiG,GAAWjG,EAAWwG,OAAOjR,QAC9ByK,EAAWwG,OAAOlP,QAAQiP,GAE1BP,EAAKS,SACLF,EAAYP,EAAKS,SAEjBT,EAAKQ,QACLR,EAAKQ,OAAOlP,QAAQiP,GAG5B,OAAK3R,GAAQ0R,GAGT,YAAQ1R,GACRA,EAAI0C,QAAQf,GAAQ8P,EAAW9P,GAAO,MAGtC,YAAO8P,EAAYzR,GAEfoR,EAAKG,QAAUE,GARXL,EAAKG,QAAU,KAa/B,SAASO,GAAejS,EAAS8B,GAC7B,SAAK9B,IAAY,YAAK8B,MAGtBA,EAAMA,EAAIoQ,QAAQ,QAAS,IACnB,YAAOlS,EAAS8B,EAAI,GAAGqQ,cAAgBrQ,EAAIoL,MAAM,KACrD,YAAOlN,EAAS8B,EAAIoL,MAAM,KAKlC,IAAIkF,GAA2B,KAC/B,SAASC,GAA4BjH,GACjCgH,GAA2BhH,EAS/B,SAASkH,GAAoBlH,GACzB,MAAQvJ,KAAM0Q,EAAS,MAAE1G,EAAK,MAAEnD,EAAK,UAAE8J,EAAS,MAAE5F,EAAO6F,cAAeA,GAAa,MAAEC,EAAK,MAAEC,EAAK,KAAEC,EAAI,OAAEC,EAAM,YAAEC,EAAW,KAAEC,EAAI,WAAEC,EAAU,IAAEC,GAAQ7H,EAC1J,IAAInG,EACJmN,GAA2BhH,EAI3B,IACI,IAAI8H,EACJ,GAAsB,EAAlBrH,EAAMsH,UAAwC,CAG9C,MAAMC,EAAaZ,GAAa9J,EAChCzD,EAASoO,GAAeR,EAAO1M,KAAKiN,EAAYA,EAAYN,EAAalG,EAAOoG,EAAYD,EAAME,IAClGC,EAAmBP,MAElB,CAED,MAAME,EAASN,EAEX,EAGJtN,EAASoO,GAAeR,EAAO/R,OAAS,EAClC+R,EAAOjG,EASH,CAAE+F,QAAOD,QAAOE,SACpBC,EAAOjG,EAAO,OACpBsG,EAAmBX,EAAU3F,MACvB+F,EACAW,GAAyBX,GAKnC,IAAIY,EAAOtO,EAMX,IAA+B,IAA3BsN,EAAUiB,cAA0BN,EAAkB,CACtD,MAAMjG,EAAOlK,OAAOkK,KAAKiG,IACnB,UAAEC,GAAcI,EAClBtG,EAAKnM,SACW,EAAZqS,GACY,EAAZA,KACIV,GAAgBxF,EAAKwG,KAAK,OAK1BP,EAAmBQ,GAAqBR,EAAkBT,IAE9Dc,EAAOI,GAAWJ,EAAML,IAsChCrH,EAAM+H,OAKNL,EAAKK,KAAOL,EAAKK,KAAOL,EAAKK,KAAKC,OAAOhI,EAAM+H,MAAQ/H,EAAM+H,MAG7D/H,EAAMiI,aAKNP,EAAKO,WAAajI,EAAMiI,YAMxB7O,EAASsO,EAGjB,MAAOhG,GACHC,GAAYD,EAAKnC,EAAU,GAC3BnG,EAAS8O,GAAYC,IAGzB,OADA5B,GAA2B,KACpBnN,EAkCX,SAASgP,GAAiBC,GACtB,MAAMC,EAAWD,EAAShR,OAAOkR,KACpBC,GAAQD,IACbA,EAAMvS,OAASmS,IACI,SAAnBI,EAAMF,WAEd,OAA2B,IAApBC,EAASrT,QAAgBuT,GAAQF,EAAS,IAAMA,EAAS,GAAK,KAEzE,MAAMb,GAA4BX,IAC9B,IAAI5O,EACJ,IAAK,MAAMjC,KAAO6Q,GACF,UAAR7Q,GAA2B,UAARA,GAAmB,YAAKA,OAC1CiC,IAAQA,EAAM,KAAKjC,GAAO6Q,EAAM7Q,IAGzC,OAAOiC,GAEL2P,GAAuB,CAACf,EAAO/F,KACjC,MAAM7I,EAAM,GACZ,IAAK,MAAMjC,KAAO6Q,EACT,YAAgB7Q,IAAUA,EAAIoL,MAAM,KAAMN,IAC3C7I,EAAIjC,GAAO6Q,EAAM7Q,IAGzB,OAAOiC,GAmEX,SAASuQ,GAAgBC,EAAWC,EAAWC,GAC3C,MAAMC,EAAW3R,OAAOkK,KAAKuH,GAC7B,GAAIE,EAAS5T,SAAWiC,OAAOkK,KAAKsH,GAAWzT,OAC3C,OAAO,EAEX,IAAK,IAAIS,EAAI,EAAGA,EAAImT,EAAS5T,OAAQS,IAAK,CACtC,MAAMO,EAAM4S,EAASnT,GACrB,GAAIiT,EAAU1S,KAASyS,EAAUzS,KAC5BmQ,GAAewC,EAAc3S,GAC9B,OAAO,EAGf,OAAO,EAEX,SAAS6S,IAAgB,MAAE9I,EAAK,OAAEG,GAAU4I,GAExC,KAAO5I,GAAUA,EAAO6I,UAAYhJ,IAC/BA,EAAQG,EAAOH,OAAO+I,GAAKA,EAC5B5I,EAASA,EAAOA,OAIxB,MAwBM8I,GApBe,CAKjBC,cAAc,EACd,QAAQC,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,EAE3EC,GACc,MAANR,EAaZ,SAAuBnJ,EAAOqJ,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,EAAWC,GAChG,MAAQjG,EAAGkG,EAAOC,GAAG,cAAEC,IAAoBH,EACrCI,EAAkBD,EAAc,OAChCE,EAAYhK,EAAMgK,SAAWC,GAAuBjK,EAAOwJ,EAAgBD,EAAiBF,EAAWU,EAAiBT,EAAQG,EAAOC,EAAWC,GAExJC,EAAM,KAAOI,EAASE,cAAgBlK,EAAMmK,UAAYJ,EAAiB,KAAMR,EAAiBS,EAAUP,EAAOC,GAE7GM,EAAS3U,KAAO,GAGhBuU,EAAM,KAAM5J,EAAMoK,WAAYf,EAAWC,EAAQC,EAAiB,KAClEE,EAAOC,GACPW,GAAgBL,EAAUhK,EAAMoK,aAIhCJ,EAAS1G,UA5BLgH,CAAclB,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,EAAWC,GA+BpG,SAAuBR,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBE,EAAOC,GAAahG,EAAGkG,EAAOW,GAAIC,EAASX,GAAG,cAAEC,KAC/G,MAAME,EAAYZ,EAAGY,SAAWb,EAAGa,SACnCA,EAAShK,MAAQoJ,EACjBA,EAAGL,GAAKI,EAAGJ,GACX,MAAM0B,EAAYrB,EAAGe,UACfO,EAActB,EAAGgB,YACjB,aAAEO,EAAY,cAAET,EAAa,aAAEU,EAAY,YAAEC,GAAgBb,EACnE,GAAIE,EACAF,EAASE,cAAgBO,EACrBK,GAAgBL,EAAWP,IAE3BN,EAAMM,EAAeO,EAAWT,EAASD,gBAAiB,KAAMR,EAAiBS,EAAUP,EAAOC,GAC9FM,EAAS3U,MAAQ,EACjB2U,EAAS1G,UAEJsH,IACLhB,EAAMe,EAAcD,EAAarB,EAAWC,EAAQC,EAAiB,KACrEE,EAAOC,GACPW,GAAgBL,EAAUU,MAK9BV,EAASe,YACLF,GAIAb,EAASa,aAAc,EACvBb,EAASW,aAAeT,GAGxBM,EAAQN,EAAeX,EAAiBS,GAI5CA,EAAS3U,KAAO,EAEhB2U,EAASlT,QAAQ7B,OAAS,EAE1B+U,EAASD,gBAAkBD,EAAc,OACrCc,GAEAhB,EAAM,KAAMa,EAAWT,EAASD,gBAAiB,KAAMR,EAAiBS,EAAUP,EAAOC,GACrFM,EAAS3U,MAAQ,EACjB2U,EAAS1G,WAGTsG,EAAMe,EAAcD,EAAarB,EAAWC,EAAQC,EAAiB,KACrEE,EAAOC,GACPW,GAAgBL,EAAUU,KAGzBC,GAAgBG,GAAgBL,EAAWE,IAEhDf,EAAMe,EAAcF,EAAWpB,EAAWC,EAAQC,EAAiBS,EAAUP,EAAOC,GAEpFM,EAAS1G,SAAQ,KAIjBsG,EAAM,KAAMa,EAAWT,EAASD,gBAAiB,KAAMR,EAAiBS,EAAUP,EAAOC,GACrFM,EAAS3U,MAAQ,GACjB2U,EAAS1G,iBAMrB,GAAIqH,GAAgBG,GAAgBL,EAAWE,GAE3Cf,EAAMe,EAAcF,EAAWpB,EAAWC,EAAQC,EAAiBS,EAAUP,EAAOC,GACpFW,GAAgBL,EAAUS,OAEzB,CAGD,MAAMO,EAAY5B,EAAGrI,OAASqI,EAAGrI,MAAMiK,UAQvC,GAPI,YAAWA,IACXA,IAGJhB,EAASE,cAAgBO,EACzBT,EAASe,YACTnB,EAAM,KAAMa,EAAWT,EAASD,gBAAiB,KAAMR,EAAiBS,EAAUP,EAAOC,GACrFM,EAAS3U,MAAQ,EAEjB2U,EAAS1G,cAER,CACD,MAAM,QAAE2H,EAAO,UAAEF,GAAcf,EAC3BiB,EAAU,EACVC,WAAW,KACHlB,EAASe,YAAcA,GACvBf,EAASmB,SAAST,IAEvBO,GAEc,IAAZA,GACLjB,EAASmB,SAAST,KA/H1BU,CAAcjC,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBE,EAAOC,EAAWC,IAGpF0B,QAyUJ,SAAyBC,EAAMtL,EAAOuJ,EAAiBC,EAAgBC,EAAOC,EAAWC,EAAmB4B,GAExG,MAAMvB,EAAYhK,EAAMgK,SAAWC,GAAuBjK,EAAOwJ,EAAgBD,EAAiB+B,EAAKE,WAAYC,SAAS3B,cAAc,OAAQ,KAAML,EAAOC,EAAWC,GAAmB,GAOvLvQ,EAASmS,EAAYD,EAAOtB,EAASE,cAAgBlK,EAAMmK,UAAYZ,EAAiBS,EAAUN,GAClF,IAAlBM,EAAS3U,MACT2U,EAAS1G,UAEb,OAAOlK,GArVPsS,OAAQzB,IAkIZ,SAASA,GAAuBjK,EAAOG,EAAQoJ,EAAiBF,EAAWU,EAAiBT,EAAQG,EAAOC,EAAWC,EAAmBkB,GAAc,GAOnJ,MAAQnH,EAAGkG,EAAO+B,EAAGC,EAAMrB,GAAIC,EAASqB,EAAGrQ,EAAMqO,GAAG,WAAE2B,EAAU,OAAEM,IAAanC,EACzEsB,EAAU,YAASjL,EAAMe,OAASf,EAAMe,MAAMkK,SAC9CjB,EAAW,CACbhK,QACAG,SACAoJ,kBACAE,QACAC,YACAL,YACAU,kBACAT,SACAjU,KAAM,EACN0V,UAAW,EACXE,QAA4B,iBAAZA,EAAuBA,GAAW,EAClDN,aAAc,KACdT,cAAe,KACfU,cAAc,EACdC,cACAkB,aAAa,EACbjV,QAAS,GACT,QAAQkV,GAAS,GASb,MAAM,MAAEhM,EAAK,aAAE2K,EAAY,cAAET,EAAa,UAAEa,EAAS,QAAEjU,EAAO,gBAAEyS,EAAe,UAAEF,GAAcW,EAC/F,GAAIA,EAASa,YACTb,EAASa,aAAc,OAEtB,IAAKmB,EAAQ,CACd,MAAMC,EAAatB,GACfT,EAAcjC,YACoB,WAAlCiC,EAAcjC,WAAWiE,KACzBD,IACAtB,EAAa1C,WAAWkE,WAAa,KAC7BpB,IAAcf,EAASe,WACvBa,EAAK1B,EAAeb,EAAWC,EAAQ,KAKnD,IAAI,OAAEA,GAAWU,EAEbW,IAGArB,EAAS9N,EAAKmP,GACdH,EAAQG,EAAcpB,EAAiBS,GAAU,IAEhDiC,GAEDL,EAAK1B,EAAeb,EAAWC,EAAQ,GAG/Ce,GAAgBL,EAAUE,GAC1BF,EAASE,cAAgB,KACzBF,EAASY,cAAe,EAGxB,IAAIzK,EAAS6J,EAAS7J,OAClBiM,GAAwB,EAC5B,KAAOjM,GAAQ,CACX,GAAIA,EAAO+J,cAAe,CAGtB/J,EAAOrJ,QAAQjC,QAAQiC,GACvBsV,GAAwB,EACxB,MAEJjM,EAASA,EAAOA,OAGfiM,GACD9H,GAAiBxN,GAErBkT,EAASlT,QAAU,GAEnB,MAAMuV,EAAYrM,EAAMe,OAASf,EAAMe,MAAMsL,UACzC,YAAWA,IACXA,KAGR,SAASC,GACL,IAAKtC,EAASE,cACV,OAEJ,MAAM,MAAElK,EAAK,aAAE2K,EAAY,gBAAEpB,EAAe,UAAEF,EAAS,MAAEI,EAAK,UAAEC,GAAcM,EAExEuC,EAAavM,EAAMe,OAASf,EAAMe,MAAMwL,WAC1C,YAAWA,IACXA,IAEJ,MAAMjD,EAAS9N,EAAKmP,GACd6B,EAAgB,KACbxC,EAASY,eAIdhB,EAAM,KAAM0C,EAAejD,EAAWC,EAAQC,EAAiB,KAC/DE,EAAOC,GACPW,GAAgBL,EAAUsC,KAExBL,EAAaK,EAAcrE,YAAgD,WAAlCqE,EAAcrE,WAAWiE,KACpED,IACAtB,EAAa1C,WAAWkE,WAAaK,GAGzChC,EAAQG,EAAcpB,EAAiB,MACvC,GAEAS,EAASY,cAAe,EACnBqB,GACDO,KAGR,KAAKnD,EAAWC,EAAQtT,GACpBgU,EAASW,cACLiB,EAAK5B,EAASW,aAActB,EAAWC,EAAQtT,GACnDgU,EAASX,UAAYA,GAEzB7N,KAAI,IACOwO,EAASW,cAAgBnP,EAAKwO,EAASW,cAElD,YAAYpL,EAAUkN,GAClB,IAAKzC,EAASE,cACV,OAEJ,MAAMwC,EAAanN,EAASS,MAAM+I,GAClCiB,EAAS3U,OACTkK,EACKoN,SAAS9K,MAAMH,IAChBC,GAAYD,EAAKnC,EAAU,KAE1BoE,KAAKiJ,IAGN,GAAIrN,EAASwM,aACT/B,EAAS+B,aACT/B,EAASe,YAAcxL,EAASsN,WAChC,OAEJ7C,EAAS3U,OAETkK,EAASuN,eAAgB,EACzB,MAAM,MAAE9M,GAAUT,EAIlBwN,GAAkBxN,EAAUqN,GACxBF,IAGA1M,EAAM+I,GAAK2D,GAEf,MAAMM,GAAeN,GAAcnN,EAASyJ,QAAQD,GACpD0D,EAAkBlN,EAAUS,EAI5BwL,EAAWkB,GAAcnN,EAASyJ,QAAQD,IAG1C2D,EAAa,KAAOlR,EAAK+D,EAASyJ,SAAUgB,EAAUP,EAAOC,GACzDsD,GACAlB,EAAOkB,GAEXlE,GAAgBvJ,EAAUS,EAAM+I,IAIV,IAAlBiB,EAAS3U,MACT2U,EAAS1G,aAIrB,QAAQkG,EAAgByD,GACpBjD,EAAS+B,aAAc,EACnB/B,EAASW,cACTH,EAAQR,EAASW,aAAcpB,EAAiBC,EAAgByD,GAEhEjD,EAASE,eACTM,EAAQR,EAASE,cAAeX,EAAiBC,EAAgByD,KAI7E,OAAOjD,EAmCX,SAASkD,GAAsBC,GAI3B,GAHI,YAAWA,KACXA,EAAIA,KAEJ,YAAQA,GAAI,CAER,EAGJA,EAJoB/E,GAAiB+E,GAMzC,OAAO3F,GAAe2F,GAE1B,SAASC,GAAwBlZ,EAAI8V,GAC7BA,GAAYA,EAASE,cACjB,YAAQhW,GACR8V,EAASlT,QAAQjC,QAAQX,GAGzB8V,EAASlT,QAAQjC,KAAKX,GAI1BoQ,GAAiBpQ,GAGzB,SAASmW,GAAgBL,EAAUqD,GAC/BrD,EAASW,aAAe0C,EACxB,MAAM,MAAErN,EAAK,gBAAEuJ,GAAoBS,EAC7BjB,EAAM/I,EAAM+I,GAAKsE,EAAOtE,GAG1BQ,GAAmBA,EAAgBP,UAAYhJ,IAC/CuJ,EAAgBvJ,MAAM+I,GAAKA,EAC3BD,GAAgBS,EAAiBR,IAIzC,IAAIuE,GAA0B,EAC9B,MAAMC,GAA4B1B,GAAOyB,IAA2BzB,EAKpE,SAAS2B,GAAW3G,EAAOpF,EAAMV,EAAQ,GAGzCoK,GACI,IAAIsC,EAAO5G,EAAMpF,GAWjB6L,KACA,MAAMI,GAAYC,KACdC,GAAYC,GAAU,CAAE5X,IAAK8K,EAAM9K,KAAOwX,EAAOA,EAAK1M,GAASoK,EAAWA,IAAa,GAAgB,IAAZtE,EAAMiH,EAC3F,IACC,IAEX,OADAR,KACOI,EAOX,SAASK,GAAQ7Z,EAAIkT,EAAMb,IACvB,IAAKa,EACD,OAAOlT,EACX,MAAM8Z,EAAsB,IAAItV,KAIvB4U,IACDK,IAAU,GAEd,MAAMM,EAAQ1H,GACdC,GAA4BY,GAC5B,MAAMlP,EAAMhE,KAAMwE,GAKlB,OAJA8N,GAA4ByH,GACvBX,IACDY,KAEGhW,GAGX,OADA8V,EAAoBG,IAAK,EAClBH,EAIX,IAAII,GAAiB,KACrB,MAAMC,GAAe,GAIrB,SAASC,GAAYpZ,GACjBmZ,GAAaxZ,KAAMuZ,GAAiBlZ,GAKxC,SAASqZ,KACLF,GAAatZ,MACbqZ,GAAiBC,GAAaA,GAAapZ,OAAS,IAAM,KAK9D,SAASuZ,GAAYtZ,GACjB,OAAShB,GAAO6Z,IAAQ,WACpBO,GAAYpZ,GACZ,MAAMgD,EAAMhE,EAAG6E,MAAMF,KAAM4V,WAE3B,OADAF,KACOrW,KA+Gf,SAASwW,GAAanP,EAAUoP,EAAU5N,EAAO+F,GAC7C,MAAO3S,EAASya,GAAgBrP,EAASqH,aACzC,GAAI+H,EACA,IAAK,MAAM1Y,KAAO0Y,EAAU,CACxB,MAAMvW,EAAQuW,EAAS1Y,GAEvB,GAAI,YAAeA,GACf,SAIJ,IAAI4Y,EACA1a,GAAW,YAAOA,EAAU0a,EAAW,YAAS5Y,IAChD8K,EAAM8N,GAAYzW,EAEZgO,GAAe7G,EAASqJ,aAAc3S,KAI5C6Q,EAAM7Q,GAAOmC,GAIzB,GAAIwW,EAAc,CACd,MAAME,EAAkBlW,GAAMmI,GAC9B,IAAK,IAAIrL,EAAI,EAAGA,EAAIkZ,EAAa3Z,OAAQS,IAAK,CAC1C,MAAMO,EAAM2Y,EAAalZ,GACzBqL,EAAM9K,GAAO8Y,GAAiB5a,EAAS2a,EAAiB7Y,EAAK6Y,EAAgB7Y,GAAMsJ,KAI/F,SAASwP,GAAiB5a,EAAS4M,EAAO9K,EAAKmC,EAAOmH,GAClD,MAAMyP,EAAM7a,EAAQ8B,GACpB,GAAW,MAAP+Y,EAAa,CACb,MAAMC,EAAa,YAAOD,EAAK,WAE/B,GAAIC,QAAwBva,IAAV0D,EAAqB,CACnC,MAAM8W,EAAeF,EAAIG,QACrBH,EAAIhZ,OAASoZ,UAAY,YAAWF,IACpCG,GAAmB9P,GACnBnH,EAAQ8W,EAAanO,GACrBsO,GAAmB,OAGnBjX,EAAQ8W,EAIZF,EAAI,KACC,YAAOjO,EAAO9K,IAASgZ,GAGnBD,EAAI,IACE,KAAV5W,GAAgBA,IAAU,YAAUnC,KACrCmC,GAAQ,GAJRA,GAAQ,GAQpB,OAAOA,EAEX,SAASkX,GAAsB5J,EAAMhG,EAAYiG,GAAU,GACvD,IAAKjG,EAAWkG,OAASF,EAAK6J,QAC1B,OAAO7J,EAAK6J,QAEhB,MAAMjb,EAAMoR,EAAK3E,MACXgF,EAAa,GACb6I,EAAe,GAErB,IAAI5I,GAAa,EACjB,IAA4B,YAAWN,GAAO,CAC1C,MAAM8J,EAAelb,IACjB0R,GAAa,EACb,MAAOjF,EAAOK,GAAQkO,GAAsBhb,EAAKoL,GAAY,GAC7D,YAAOqG,EAAYhF,GACfK,GACAwN,EAAa/Z,QAAQuM,KAExBuE,GAAWjG,EAAWwG,OAAOjR,QAC9ByK,EAAWwG,OAAOlP,QAAQwY,GAE1B9J,EAAKS,SACLqJ,EAAY9J,EAAKS,SAEjBT,EAAKQ,QACLR,EAAKQ,OAAOlP,QAAQwY,GAG5B,IAAKlb,IAAQ0R,EACT,OAAQN,EAAK6J,QAAU,IAE3B,GAAI,YAAQjb,GACR,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAIW,OAAQS,IAAK,CAC7B,EAGJ,MAAM+Z,EAAgB,YAASnb,EAAIoB,IAC/Bga,GAAiBD,KACjB1J,EAAW0J,GAAiB,UAInC,GAAInb,EAAK,CACN,EAGJ,IAAK,MAAM2B,KAAO3B,EAAK,CACnB,MAAMmb,EAAgB,YAASxZ,GAC/B,GAAIyZ,GAAiBD,GAAgB,CACjC,MAAMT,EAAM1a,EAAI2B,GACV0Z,EAAQ5J,EAAW0J,GACrB,YAAQT,IAAQ,YAAWA,GAAO,CAAEhZ,KAAMgZ,GAAQA,EACtD,GAAIW,EAAM,CACN,MAAMC,EAAeC,GAAaxS,QAASsS,EAAK3Z,MAC1C8Z,EAAcD,GAAaE,OAAQJ,EAAK3Z,MAC9C2Z,EAAK,GAAsBC,GAAgB,EAC3CD,EAAK,GACDG,EAAc,GAAKF,EAAeE,GAElCF,GAAgB,GAAK,YAAOD,EAAM,aAClCf,EAAa/Z,KAAK4a,MAMtC,OAAQ/J,EAAK6J,QAAU,CAACxJ,EAAY6I,GAExC,SAASc,GAAiBzZ,GACtB,MAAe,MAAXA,EAAI,GAUZ,SAAS+Z,GAAQC,GACb,MAAMC,EAAQD,GAAQA,EAAKE,WAAWD,MAAM,sBAC5C,OAAOA,EAAQA,EAAM,GAAK,GAE9B,SAASE,GAAWvL,EAAGC,GACnB,OAAOkL,GAAQnL,KAAOmL,GAAQlL,GAElC,SAAS+K,GAAa7Z,EAAMqa,GACxB,GAAI,YAAQA,IACR,IAAK,IAAI3a,EAAI,EAAG4a,EAAMD,EAAcpb,OAAQS,EAAI4a,EAAK5a,IACjD,GAAI0a,GAAWC,EAAc3a,GAAIM,GAC7B,OAAON,OAId,GAAI,YAAW2a,GAChB,OAAOD,GAAWC,EAAera,GAAQ,GAAK,EAElD,OAAQ,EAkIZ,SAASua,GAAWva,EAAMmP,EAAMpP,EAASya,GAAiBC,GAAU,GAChE,GAAI1a,EAAQ,CACR,MAAM2a,EAAQ3a,EAAOC,KAAUD,EAAOC,GAAQ,IAIxC2a,EAAcxL,EAAKyL,QACpBzL,EAAKyL,MAAQ,IAAIlY,KACd,GAAI3C,EAAOgW,YACP,OAIJnW,IAIAyZ,GAAmBtZ,GACnB,MAAMmC,EAAM0J,GAA2BuD,EAAMpP,EAAQC,EAAM0C,GAG3D,OAFA2W,GAAmB,MACnBra,IACOkD,IAQf,OANIuY,EACAC,EAAMG,QAAQF,GAGdD,EAAM7b,KAAK8b,GAERA,GAYf,MAAMG,GAAcC,GAAc,CAAC5L,EAAMpP,EAASya,MAEjDQ,IAAyBT,GAAWQ,EAAW5L,EAAMpP,GAChDkb,GAAgBH,GAAW,MAC3BI,GAAYJ,GAAW,KACvBK,GAAiBL,GAAW,MAC5BM,GAAYN,GAAW,KACvBO,GAAkBP,GAAW,OAC7BQ,GAAcR,GAAW,MACzBS,GAAoBT,GAAW,OAC/BU,GAAkBV,GAAW,OAC7BW,GAAkB,CAACtM,EAAMpP,EAASya,MACpCD,GAAW,KAA2BpL,EAAMpP,IAIhD,SAAS2b,GAAYnd,EAAQJ,GACzB,OAAOwd,GAAQpd,EAAQ,KAAMJ,GAGjC,MAAMyd,GAAwB,GAE9B,SAASC,GAAMC,EAAQ5N,EAAI/P,GAMvB,OAAOwd,GAAQG,EAAQ5N,EAAI/P,GAE/B,SAASwd,GAAQG,EAAQ5N,GAAI,UAAE6N,EAAS,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,UAAEC,GAAc,IAAW5S,EAAWiR,IAehG,IAAIvR,EAoDAmT,EAnDAC,GAAe,EA+CnB,GA9CIla,GAAM2Z,IACN7S,EAAS,IAAM6S,EAAO1Z,MACtBia,IAAiBP,EAAOpU,UAEnBX,GAAW+U,IAChB7S,EAAS,IAAM6S,EACfE,GAAO,GAGP/S,EADK,YAAQ6S,GACJ,IAAMA,EAAO1a,IAAI+V,GAClBhV,GAAMgV,GACCA,EAAE/U,MAEJ2E,GAAWoQ,GACTmF,GAASnF,GAEX,YAAWA,GACT9M,GAAsB8M,EAAG5N,EAAU,QADzC,GAQJ,YAAWuS,GACZ5N,EAES,IAAM7D,GAAsByR,EAAQvS,EAAU,GAI9C,KACL,IAAIA,IAAYA,EAASwM,YAMzB,OAHIqG,GACAA,IAEG/R,GAAsByR,EAAQvS,EAAU,EAAwB,CAACgT,KAKvE,IAGTrO,GAAM8N,EAAM,CACZ,MAAMQ,EAAavT,EACnBA,EAAS,IAAMqT,GAASE,KAG5B,MAAMD,EAAgBre,IAClBke,EAAUK,EAAOte,QAAQsB,OAAS,KAC9B4K,GAAsBnM,EAAIqL,EAAU,KAG5C,IAAI3I,EAAW,YAAQkb,GAAU,GAAKF,GACtC,MAAM9N,EAAM,KACR,GAAK2O,EAAOje,OAGZ,GAAI0P,EAAI,CAEJ,MAAMvN,EAAW8b,KACbT,GAAQK,GAAgB,YAAW1b,EAAUC,MAEzCwb,GACAA,IAEJxQ,GAA2BsC,EAAI3E,EAAU,EAAwB,CAC7D5I,EAEAC,IAAagb,QAAwBld,EAAYkC,EACjD2b,IAEJ3b,EAAWD,QAKf8b,KAMR,IAAIhe,EADJqP,EAAI1O,eAAiB8O,EAGjBzP,EADU,SAAVwd,EACYnO,EAEG,SAAVmO,EACO,IAAMS,GAAsB5O,EAAKvE,GAAYA,EAASyK,UAItD,MACHzK,GAAYA,EAASoT,UAvsDtC,SAAyBzO,GACrBD,GAAQC,EAAInB,GAAmBD,GAAoBE,IAusDvC4P,CAAgB9O,GAKhBA,KAIZ,MAAM2O,EAAS,EAAOxT,EAAQ,CAC1B1J,MAAM,EACN2c,UACAC,YACA1d,cAkBJ,OAhBAoe,GAA0BJ,GAEtBvO,EACI6N,EACAjO,IAGAlN,EAAW6b,IAGA,SAAVR,EACLS,GAAsBD,EAAQlT,GAAYA,EAASyK,UAGnDyI,IAEG,KACHjd,EAAKid,GACDlT,GACA,YAAOA,EAASzI,QAAS2b,IAKrC,SAASK,GAAchB,EAAQ5N,EAAI/P,GAC/B,MAAM4e,EAAala,KAAKgE,MAIxB,OAAO8U,GAHQ,YAASG,GAClB,IAAMiB,EAAWjB,GACjBA,EAAOlO,KAAKmP,GACK7O,EAAGN,KAAKmP,GAAa5e,EAAS0E,MAEzD,SAASyZ,GAASla,EAAOoM,EAAO,IAAIjO,KAChC,IAAK,YAAS6B,IAAUoM,EAAKhO,IAAI4B,GAC7B,OAAOA,EAGX,GADAoM,EAAK/N,IAAI2B,GACLD,GAAMC,GACNka,GAASla,EAAMA,MAAOoM,QAErB,GAAI,YAAQpM,GACb,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAMnD,OAAQS,IAC9B4c,GAASla,EAAM1C,GAAI8O,QAGtB,GAAI,YAAMpM,IAAU,YAAMA,GAC3BA,EAAMpB,QAAS+C,IACXuY,GAASvY,EAAGyK,UAIhB,IAAK,MAAMvO,KAAOmC,EACdka,GAASla,EAAMnC,GAAMuO,GAG7B,OAAOpM,EAGX,SAAS4a,KACL,MAAMC,EAAQ,CACVN,WAAW,EACXO,WAAW,EACXC,cAAc,EACdC,cAAe,IAAI/c,KAQvB,OANA6a,GAAU,KACN+B,EAAMN,WAAY,IAEtBtB,GAAgB,KACZ4B,EAAME,cAAe,IAElBF,EAEX,MAAMI,GAA0B,CAACjE,SAAU5W,OA6GrC8a,GA5GqB,CACvB7R,KAAM,iBACNV,MAAO,CACHmL,KAAM6D,OACNwD,OAAQlW,QACRmW,UAAWnW,QAEXoW,cAAeJ,GACfK,QAASL,GACTM,aAAcN,GACdO,iBAAkBP,GAElBQ,cAAeR,GACfS,QAAST,GACTU,aAAcV,GACdW,iBAAkBX,GAElBY,eAAgBZ,GAChBa,SAAUb,GACVc,cAAed,GACfe,kBAAmBf,IAEvB,MAAMtS,GAAO,MAAE8F,IACX,MAAMtH,EAAW8U,KACXpB,EAAQD,KACd,IAAIsB,EACJ,MAAO,KACH,MAAMjM,EAAWxB,EAAMsI,SAAWoF,GAAyB1N,EAAMsI,WAAW,GAC5E,IAAK9G,IAAaA,EAASpT,OACvB,OASJ,MAAM0Z,EAAW/V,GAAMmI,IACjB,KAAEmL,GAASyC,EAMjB,MAAMpG,EAAQF,EAAS,GACvB,GAAI4K,EAAMC,UACN,OAAOsB,GAAiBjM,GAI5B,MAAMkM,EAAaC,GAAkBnM,GACrC,IAAKkM,EACD,OAAOD,GAAiBjM,GAE5B,MAAMoM,EAAaC,GAAuBH,EAAY9F,EAAUsE,EAAO1T,GACvEsV,GAAmBJ,EAAYE,GAC/B,MAAMG,EAAWvV,EAASyJ,QACpB+L,EAAgBD,GAAYJ,GAAkBI,GACpD,IAAIE,GAAuB,EAC3B,MAAM,iBAAEC,GAAqBR,EAAWze,KACxC,GAAIif,EAAkB,CAClB,MAAMhf,EAAMgf,SACcvgB,IAAtB4f,EACAA,EAAoBre,EAEfA,IAAQqe,IACbA,EAAoBre,EACpB+e,GAAuB,GAI/B,GAAID,GACAA,EAAc/e,OAASmS,MACrB2C,GAAgB2J,EAAYM,IAAkBC,GAAuB,CACvE,MAAME,EAAeN,GAAuBG,EAAepG,EAAUsE,EAAO1T,GAI5E,GAFAsV,GAAmBE,EAAeG,GAErB,WAAThJ,EAOA,OANA+G,EAAMC,WAAY,EAElBgC,EAAa/I,WAAa,KACtB8G,EAAMC,WAAY,EAClB3T,EAAS4V,UAENX,GAAiBjM,GAEV,WAAT2D,IACLgJ,EAAaE,WAAa,CAACrM,EAAIsM,EAAaC,KACbC,GAAuBtC,EAAO8B,GACtChF,OAAOgF,EAAc9e,MAAQ8e,EAEhDhM,EAAGyM,SAAW,KACVH,IACAtM,EAAGyM,cAAW9gB,SACPigB,EAAWW,cAEtBX,EAAWW,aAAeA,IAItC,OAAO/M,KAOnB,SAASgN,GAAuBtC,EAAOjT,GACnC,MAAM,cAAEoT,GAAkBH,EAC1B,IAAIwC,EAAqBrC,EAAcjd,IAAI6J,EAAMhK,MAKjD,OAJKyf,IACDA,EAAqBve,OAAOwU,OAAO,MACnC0H,EAAchd,IAAI4J,EAAMhK,KAAMyf,IAE3BA,EAIX,SAASb,GAAuB5U,EAAOe,EAAOkS,EAAO1T,GACjD,MAAM,OAAEgU,EAAM,KAAErH,EAAI,UAAEsH,GAAY,EAAK,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,eAAEC,EAAc,SAAEC,EAAQ,cAAEC,EAAa,kBAAEC,GAAsBrT,EAClN9K,EAAM8Z,OAAO/P,EAAM/J,KACnBwf,EAAqBF,GAAuBtC,EAAOjT,GACnD0V,EAAW,CAACvQ,EAAMzM,KACpByM,GACIvD,GAA2BuD,EAAM5F,EAAU,EAAyB7G,IAEtEgY,EAAQ,CACVxE,OACAsH,YACA,YAAYzK,GACR,IAAI5D,EAAOsO,EACX,IAAKR,EAAMN,UAAW,CAClB,IAAIY,EAIA,OAHApO,EAAO8O,GAAkBR,EAO7B1K,EAAGyM,UACHzM,EAAGyM,UAAS,GAGhB,MAAMG,EAAeF,EAAmBxf,GACpC0f,GACA7K,GAAgB9K,EAAO2V,IACvBA,EAAa5M,GAAGyM,UAEhBG,EAAa5M,GAAGyM,WAEpBE,EAASvQ,EAAM,CAAC4D,KAEpB,MAAMA,GACF,IAAI5D,EAAOuO,EACPkC,EAAYjC,EACZkC,EAAajC,EACjB,IAAKX,EAAMN,UAAW,CAClB,IAAIY,EAMA,OALApO,EAAO+O,GAAYR,EACnBkC,EAAYzB,GAAiBR,EAC7BkC,EAAazB,GAAqBR,EAM1C,IAAIkC,GAAS,EACb,MAAMva,EAAQwN,EAAGgN,SAAYC,IACrBF,IAEJA,GAAS,EAELJ,EADAM,EACSH,EAGAD,EAHY,CAAC7M,IAKtB2H,EAAM4E,cACN5E,EAAM4E,eAEVvM,EAAGgN,cAAWrhB,IAEdyQ,GACAA,EAAK4D,EAAIxN,GACL4J,EAAKlQ,QAAU,GACfsG,KAIJA,KAGR,MAAMwN,EAAI+C,GACN,MAAM7V,EAAM8Z,OAAO/P,EAAM/J,KAIzB,GAHI8S,EAAGgN,UACHhN,EAAGgN,UAAS,GAEZ9C,EAAME,aACN,OAAOrH,IAEX4J,EAAS7B,EAAe,CAAC9K,IACzB,IAAI+M,GAAS,EACb,MAAMva,EAAQwN,EAAGyM,SAAYQ,IACrBF,IAEJA,GAAS,EACThK,IAEI4J,EADAM,EACShC,EAGAD,EAHkB,CAAChL,IAKhCA,EAAGyM,cAAW9gB,EACV+gB,EAAmBxf,KAAS+J,UACrByV,EAAmBxf,KAGlCwf,EAAmBxf,GAAO+J,EACtB8T,GACAA,EAAQ/K,EAAIxN,GACRuY,EAAQ7e,QAAU,GAClBsG,KAIJA,KAGR0a,MAAMjW,GACK4U,GAAuB5U,EAAOe,EAAOkS,EAAO1T,IAG3D,OAAOmR,EAMX,SAAS8D,GAAiBxU,GACtB,GAAIkW,GAAYlW,GAGZ,OAFAA,EAAQ8H,GAAW9H,IACbqI,SAAW,KACVrI,EAGf,SAAS0U,GAAkB1U,GACvB,OAAOkW,GAAYlW,GACbA,EAAMqI,SACFrI,EAAMqI,SAAS,QACf3T,EACJsL,EAEV,SAAS6U,GAAmB7U,EAAO0Q,GACT,EAAlB1Q,EAAMsH,WAAiCtH,EAAMR,UAC7CqV,GAAmB7U,EAAMR,UAAUwJ,QAAS0H,GAEpB,IAAlB1Q,EAAMsH,WACZtH,EAAMmK,UAAUlC,WAAayI,EAAMuF,MAAMjW,EAAMmK,WAC/CnK,EAAMoK,WAAWnC,WAAayI,EAAMuF,MAAMjW,EAAMoK,aAGhDpK,EAAMiI,WAAayI,EAG3B,SAAS6D,GAAyBlM,EAAU8N,GAAc,GACtD,IAAIxX,EAAM,GACNyX,EAAqB,EACzB,IAAK,IAAI1gB,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IAAK,CACtC,MAAM6S,EAAQF,EAAS3S,GAEnB6S,EAAMvS,OAAS6X,IACO,IAAlBtF,EAAM8N,WACND,IACJzX,EAAMA,EAAIqJ,OAAOuM,GAAyBhM,EAAMF,SAAU8N,MAGrDA,GAAe5N,EAAMvS,OAASmS,KACnCxJ,EAAI9J,KAAK0T,GAOjB,GAAI6N,EAAqB,EACrB,IAAK,IAAI1gB,EAAI,EAAGA,EAAIiJ,EAAI1J,OAAQS,IAC5BiJ,EAAIjJ,GAAG2gB,WAAa,EAG5B,OAAO1X,EAGX,MAAMuX,GAAelW,GAAUA,EAAMhK,KAAKsgB,cA6LpCC,GA5LgB,CAClB9U,KAAM,YAIN6U,eAAe,EACfE,YAAY,EACZzV,MAAO,CACH0V,QAAS,CAAC1G,OAAQ2G,OAAQle,OAC1Bme,QAAS,CAAC5G,OAAQ2G,OAAQle,OAC1Boe,IAAK,CAAC7G,OAAQ5W,SAElB,MAAM4H,GAAO,MAAE8F,IACX,MAAMgQ,EAAQ,IAAIxgB,IACZ+K,EAAO,IAAI7K,IACjB,IAAIugB,EAAU,KACd,MAAMvX,EAAW8U,KACX7K,EAAiBjK,EAASyK,SAM1B+M,EAAgBxX,EAAS6H,KACvB4P,UAAYtT,EAAGkG,EAAO+B,EAAGC,EAAMrB,GAAI0M,EAAUpN,GAAG,cAAEC,KAAsBiN,EAC1EG,EAAmBpN,EAAc,OA+BvC,SAASU,EAAQxK,GAEbmX,GAAenX,GACfiX,EAASjX,EAAOT,EAAUiK,GAE9B,SAAS4N,EAAW/f,GAChBwf,EAAM7f,QAAQ,CAACgJ,EAAO/J,KAClB,MAAMwL,EAAO4V,GAAQrX,EAAMhK,OACvByL,GAAUpK,GAAWA,EAAOoK,IAC5B6V,EAAgBrhB,KAI5B,SAASqhB,EAAgBrhB,GACrB,MAAMshB,EAASV,EAAM1gB,IAAIF,GACpB6gB,GAAWS,EAAOvhB,OAAS8gB,EAAQ9gB,KAG/B8gB,GAGLK,GAAeL,GALftM,EAAQ+M,GAOZV,EAAMlhB,OAAOM,GACbmL,EAAKzL,OAAOM,GAtDhB8gB,EAAcS,SAAW,CAACxX,EAAOqJ,EAAWC,EAAQG,EAAOC,KACvD,MAAMnK,EAAWS,EAAMR,UACvBoM,EAAK5L,EAAOqJ,EAAWC,EAAQ,EAAeE,GAE9CI,EAAMrK,EAASS,MAAOA,EAAOqJ,EAAWC,EAAQ/J,EAAUiK,EAAgBC,EAAOC,GACjFgJ,GAAsB,KAClBnT,EAASkY,eAAgB,EACrBlY,EAASsF,GACT,YAAetF,EAASsF,GAE5B,MAAM6S,EAAY1X,EAAMe,OAASf,EAAMe,MAAM4W,eACzCD,GACAE,GAAgBF,EAAWnY,EAASY,OAAQH,IAEjDwJ,IAEPuN,EAAcc,WAAc7X,IACxB,MAAMT,EAAWS,EAAMR,UACvBoM,EAAK5L,EAAOkX,EAAkB,KAAM,EAAe1N,GACnDkJ,GAAsB,KACdnT,EAASuY,IACT,YAAevY,EAASuY,IAE5B,MAAMJ,EAAY1X,EAAMe,OAASf,EAAMe,MAAMgX,iBACzCL,GACAE,GAAgBF,EAAWnY,EAASY,OAAQH,GAEhDT,EAASkY,eAAgB,GAC1BjO,IA6BPqI,GAAM,IAAM,CAAC9Q,EAAM0V,QAAS1V,EAAM4V,SAAU,EAAEF,EAASE,MACnDF,GAAWW,EAAW3V,GAAQ,GAAQgV,EAAShV,IAC/CkV,GAAWS,EAAW3V,IAAS,GAAQkV,EAASlV,KAGpD,CAAEwQ,MAAO,SAET,IAAI+F,EAAkB,KACtB,MAAMC,EAAe,KAEM,MAAnBD,GACAnB,EAAMzgB,IAAI4hB,EAAiBE,GAAc3Y,EAASyJ,WAoB1D,OAjBAkI,GAAU+G,GACV7G,GAAU6G,GACV5G,GAAgB,KACZwF,EAAM7f,QAAQugB,IACV,MAAM,QAAEvO,EAAO,SAAEgB,GAAazK,EACxBS,EAAQkY,GAAclP,GAC5B,GAAIuO,EAAOvhB,OAASgK,EAAMhK,KAQ1BwU,EAAQ+M,OARR,CAEIJ,GAAenX,GAEf,MAAM8X,EAAK9X,EAAMR,UAAUsY,GAC3BA,GAAMpF,GAAsBoF,EAAI9N,QAMrC,KAEH,GADAgO,EAAkB,MACbnR,EAAMsI,QACP,OAAO,KAEX,MAAM9G,EAAWxB,EAAMsI,UACjBgJ,EAAW9P,EAAS,GAC1B,GAAIA,EAASpT,OAAS,EAKlB,OADA6hB,EAAU,KACHzO,EAEN,KAAKG,GAAQ2P,KACU,EAArBA,EAAS7Q,WACe,IAArB6Q,EAAS7Q,YAEf,OADAwP,EAAU,KACHqB,EAEX,IAAInY,EAAQkY,GAAcC,GAC1B,MAAMzS,EAAO1F,EAAMhK,KACbyL,EAAO4V,GAAQ3R,IACf,QAAE+Q,EAAO,QAAEE,EAAO,IAAEC,GAAQ7V,EAClC,GAAK0V,KAAahV,IAAS,GAAQgV,EAAShV,KACvCkV,GAAWlV,GAAQ,GAAQkV,EAASlV,GAErC,OADAqV,EAAU9W,EACHmY,EAEX,MAAMliB,EAAmB,MAAb+J,EAAM/J,IAAcyP,EAAO1F,EAAM/J,IACvCmiB,EAAcvB,EAAM1gB,IAAIF,GAsC9B,OApCI+J,EAAM+I,KACN/I,EAAQ8H,GAAW9H,GACM,IAArBmY,EAAS7Q,YACT6Q,EAAShO,UAAYnK,IAQ7BgY,EAAkB/hB,EACdmiB,GAEApY,EAAM+I,GAAKqP,EAAYrP,GACvB/I,EAAMR,UAAY4Y,EAAY5Y,UAC1BQ,EAAMiI,YAEN4M,GAAmB7U,EAAOA,EAAMiI,YAGpCjI,EAAMsH,WAAa,IAEnBlG,EAAKzL,OAAOM,GACZmL,EAAK3K,IAAIR,KAGTmL,EAAK3K,IAAIR,GAEL2gB,GAAOxV,EAAK5G,KAAO6d,SAASzB,EAAK,KACjCU,EAAgBlW,EAAKU,SAAStG,OAAOpD,QAI7C4H,EAAMsH,WAAa,IACnBwP,EAAU9W,EACHmY,KAOnB,SAASd,GAAQ3R,GACb,OAAOA,EAAK4S,aAAe5S,EAAKjE,KAEpC,SAAS,GAAQ8W,EAAS9W,GACtB,OAAI,YAAQ8W,GACDA,EAAQ3Q,KAAMlE,GAAM,GAAQA,EAAGjC,IAEjC,YAAS8W,GACPA,EAAQC,MAAM,KAAKC,QAAQhX,IAAS,IAEtC8W,EAAQG,MACNH,EAAQG,KAAKjX,GAK5B,SAASkX,GAAYxT,EAAMpP,GACvB6iB,GAAsBzT,EAAM,IAAqBpP,GAErD,SAAS8iB,GAAc1T,EAAMpP,GACzB6iB,GAAsBzT,EAAM,KAAwBpP,GAExD,SAAS6iB,GAAsBzT,EAAMnP,EAAMD,EAASya,IAIhD,MAAMG,EAAcxL,EAAK2T,QACpB3T,EAAK2T,MAAQ,KAEV,IAAIhC,EAAU/gB,EACd,KAAO+gB,GAAS,CACZ,GAAIA,EAAQW,cACR,OAEJX,EAAUA,EAAQ3W,OAEtBgF,MAQR,GANAoL,GAAWva,EAAM2a,EAAa5a,GAM1BA,EAAQ,CACR,IAAI+gB,EAAU/gB,EAAOoK,OACrB,KAAO2W,GAAWA,EAAQ3W,QAClB+V,GAAYY,EAAQ3W,OAAOH,QAC3B+Y,GAAsBpI,EAAa3a,EAAMD,EAAQ+gB,GAErDA,EAAUA,EAAQ3W,QAI9B,SAAS4Y,GAAsB5T,EAAMnP,EAAMD,EAAQijB,GAG/C,MAAMC,EAAW1I,GAAWva,EAAMmP,EAAM6T,GAAe,GACvD1H,GAAY,KACR,YAAO0H,EAAchjB,GAAOijB,IAC7BljB,GAEP,SAASohB,GAAenX,GACpB,IAAIsH,EAAYtH,EAAMsH,UACN,IAAZA,IACAA,GAAa,KAED,IAAZA,IACAA,GAAa,KAEjBtH,EAAMsH,UAAYA,EAEtB,SAAS4Q,GAAclY,GACnB,OAAyB,IAAlBA,EAAMsH,UAAiCtH,EAAMmK,UAAYnK,EAGpE,MAAMkZ,GAAiBjjB,GAAmB,MAAXA,EAAI,IAAsB,YAARA,EAC3CkjB,GAAsB/gB,GAAU,YAAQA,GACxCA,EAAMhB,IAAIoQ,IACV,CAACA,GAAepP,IAChBghB,GAAgB,CAACnjB,EAAKojB,EAASjS,IAAQ2G,GAAShN,GAM3CoY,GAAmBE,EAAQtY,IACnCqG,GACGkS,GAAuB,CAACC,EAAU1S,KACpC,MAAMO,EAAMmS,EAASC,KACrB,IAAK,MAAMvjB,KAAOsjB,EAAU,CACxB,GAAIL,GAAcjjB,GACd,SACJ,MAAMmC,EAAQmhB,EAAStjB,GACvB,GAAI,YAAWmC,GACXyO,EAAM5Q,GAAOmjB,GAAcnjB,EAAKmC,EAAOgP,QAEtC,GAAa,MAAThP,EAAe,CAChB,EAIJ,MAAM2N,EAAaoT,GAAmB/gB,GACtCyO,EAAM5Q,GAAO,IAAM8P,KAIzB0T,GAAsB,CAACla,EAAU8I,KAKnC,MAAMtC,EAAaoT,GAAmB9Q,GACtC9I,EAASsH,MAAMsI,QAAU,IAAMpJ,GAwFnC,SAAS2T,GAAe1Z,EAAO2Z,GAE3B,GAAyB,OADApT,GAGrB,OAAOvG,EAEX,MAAMT,EALmBgH,GAKS1J,MAC5B+c,EAAW5Z,EAAM+H,OAAS/H,EAAM+H,KAAO,IAC7C,IAAK,IAAIrS,EAAI,EAAGA,EAAIikB,EAAW1kB,OAAQS,IAAK,CACxC,IAAKmkB,EAAKzhB,EAAO0hB,EAAKC,EAAY,KAAaJ,EAAWjkB,GACtD,YAAWmkB,KACXA,EAAM,CACFG,QAASH,EACTI,QAASJ,IAGjBD,EAAS/kB,KAAK,CACVglB,MACAta,WACAnH,QACAxB,cAAU,EACVkjB,MACAC,cAGR,OAAO/Z,EAEX,SAASka,GAAoBla,EAAOma,EAAW5a,EAAUkC,GACrD,MAAMmY,EAAW5Z,EAAM+H,KACjBqS,EAAcD,GAAaA,EAAUpS,KAC3C,IAAK,IAAIrS,EAAI,EAAGA,EAAIkkB,EAAS3kB,OAAQS,IAAK,CACtC,MAAM2kB,EAAUT,EAASlkB,GACrB0kB,IACAC,EAAQzjB,SAAWwjB,EAAY1kB,GAAG0C,OAEtC,MAAM+M,EAAOkV,EAAQR,IAAIpY,GACrB0D,GACAvD,GAA2BuD,EAAM5F,EAAU,EAAwB,CAC/DS,EAAM+I,GACNsR,EACAra,EACAma,KAMhB,SAASG,KACL,MAAO,CACHC,IAAK,KACL5a,OAAQ,CACJ6a,YAAa,IACbC,aAAa,EACbC,iBAAkB,GAClBC,sBAAuB,GACvBC,gBAAiB,IACjBtY,kBAAc5N,EACdkL,iBAAalL,GAEjBwR,OAAQ,GACR2U,WAAY,GACZlB,WAAY,GACZmB,SAAU5jB,OAAOwU,OAAO,OAGhC,IAAI,GAAM,EACV,SAASqP,GAAa/T,EAAQqE,GAC1B,OAAO,SAAmB2P,EAAeC,EAAY,MAChC,MAAbA,GAAsB,YAASA,KAE/BA,EAAY,MAEhB,MAAMC,EAAUZ,KACVa,EAAmB,IAAI5kB,IAC7B,IAAIoc,GAAY,EAChB,MAAM4H,EAAOW,EAAQX,IAAM,CACvBa,KAAM,KACNC,WAAYL,EACZM,OAAQL,EACRM,WAAY,KACZC,SAAUN,EACVO,WACA,aACI,OAAOP,EAAQvb,QAEnB,WAAW5F,GACH,GAIR2hB,IAAG,CAACC,KAAWxnB,KACPgnB,EAAiB3kB,IAAImlB,KAGhBA,GAAU,YAAWA,EAAOC,UACjCT,EAAiB1kB,IAAIklB,GACrBA,EAAOC,QAAQrB,KAAQpmB,IAElB,YAAWwnB,KAChBR,EAAiB1kB,IAAIklB,GACrBA,EAAOpB,KAAQpmB,KAMZomB,GAEXsB,MAAMA,IAEOX,EAAQhV,OAAOvR,SAASknB,KACzBX,EAAQhV,OAAOrR,KAAKgnB,IAGhBA,EAAM9a,OAAS8a,EAAM/V,SACrBoV,EAAQtV,OAAQ,IAWrB2U,GAEX/a,UAAS,CAACiC,EAAMjC,IAIPA,GAML0b,EAAQL,WAAWpZ,GAAQjC,EACpB+a,GANIW,EAAQL,WAAWpZ,GAQlCqa,UAAS,CAACra,EAAMqa,IAIPA,GAMLZ,EAAQvB,WAAWlY,GAAQqa,EACpBvB,GANIW,EAAQvB,WAAWlY,GAQlC,MAAMsa,EAAeC,GACjB,IAAKrJ,EAAW,CACZ,MAAM3S,EAAQkI,GAAY8S,EAAeC,GAsBzC,OAnBAjb,EAAMN,WAAawb,EAOfc,GAAa3Q,EACbA,EAAQrL,EAAO+b,GAGf/U,EAAOhH,EAAO+b,GAElBpJ,GAAY,EACZ4H,EAAIgB,WAAaQ,EACjBA,EAAcE,YAAc1B,EAIrBva,EAAMR,UAAU3C,QAS/B,UACQ8V,GACA3L,EAAO,KAAMuT,EAAIgB,aASzBW,QAAO,CAACjmB,EAAKmC,KAOT8iB,EAAQJ,SAAS7kB,GAAOmC,EACjBmiB,IAGf,OAAOA,GAIf,IAAI4B,IAAc,EAClB,MAAMC,GAAkB/S,GAAc,MAAMqP,KAAKrP,EAAUgT,eAAuC,kBAAtBhT,EAAUiT,QAChFC,GAAajR,GAA2B,IAAlBA,EAAKkR,SAMjC,SAASC,GAAyB9S,GAC9B,MAAQ+S,GAAIC,EAAgBjZ,EAAGkG,EAAOC,GAAG,UAAE+S,EAAS,YAAEC,EAAW,WAAErR,EAAU,OAAEM,EAAM,OAAEgR,EAAM,cAAEC,IAAoBpT,EAgB7G4B,EAAc,CAACD,EAAMtL,EAAOuJ,EAAiBC,EAAgBE,GAAY,KAC3E,MAAMsT,EAAkBT,GAAUjR,IAAuB,MAAdA,EAAKpE,KAC1C+V,EAAa,IAAMC,EAAe5R,EAAMtL,EAAOuJ,EAAiBC,EAAgBwT,IAChF,KAAEhnB,EAAI,IAAE+H,EAAG,UAAEuJ,GAActH,EAC3Bmd,EAAU7R,EAAKkR,SACrBxc,EAAM+I,GAAKuC,EACX,IAAI8R,EAAW,KACf,OAAQpnB,GACJ,KAAKqnB,GACe,IAAZF,EACAC,EAAWH,KAGP3R,EAAKpE,OAASlH,EAAMqI,WACpB8T,IAAc,EAKd7Q,EAAKpE,KAAOlH,EAAMqI,UAEtB+U,EAAWP,EAAYvR,IAE3B,MACJ,KAAKnD,GAEGiV,EADY,IAAZD,GAA+BH,EACpBC,IAGAJ,EAAYvR,GAE3B,MACJ,KAAKgS,GACD,GAAgB,IAAZH,EAGC,CAEDC,EAAW9R,EAGX,MAAMiS,GAAsBvd,EAAMqI,SAASpT,OAC3C,IAAK,IAAIS,EAAI,EAAGA,EAAIsK,EAAMwd,YAAa9nB,IAC/B6nB,IACAvd,EAAMqI,UAAY+U,EAASK,WAC3B/nB,IAAMsK,EAAMwd,YAAc,IAC1Bxd,EAAMsJ,OAAS8T,GAEnBA,EAAWP,EAAYO,GAE3B,OAAOA,EAhBPA,EAAWH,IAkBf,MACJ,KAAKpP,GAKGuP,EAJCJ,EAIUU,EAAgBpS,EAAMtL,EAAOuJ,EAAiBC,EAAgBE,GAH9DuT,IAKf,MACJ,QACI,GAAgB,EAAZ3V,EAGI8V,EAFY,IAAZD,GACAnd,EAAMhK,OAASsV,EAAKgR,QAAQhW,cACjB2W,IAGAU,EAAerS,EAAMtL,EAAOuJ,EAAiBC,EAAgBE,QAG3E,GAAgB,EAAZpC,EAA+B,CAIpC,MAAM+B,EAAYmC,EAAWF,GACvBsS,EAAmB,KACrBjB,EAAe3c,EAAOqJ,EAAW,KAAME,EAAiBC,EAAgB4S,GAAe/S,GAAYK,IAGjGmU,EAAY7d,EAAMhK,KAAK8nB,cACzBD,EACAA,IAAYla,KAAKia,GAGjBA,IAKJR,EAAWJ,EACLe,EAAyBzS,GACzBuR,EAAYvR,QAED,GAAZhE,EAED8V,EADY,IAAZD,EACWF,IAGAjd,EAAMhK,KAAKqV,QAAQC,EAAMtL,EAAOuJ,EAAiBC,EAAgBE,EAAWC,EAAmBqU,GAG5F,IAAZ1W,IACN8V,EAAWpd,EAAMhK,KAAKqV,QAAQC,EAAMtL,EAAOuJ,EAAiBC,EAAgB4S,GAAe5Q,EAAWF,IAAQ5B,EAAWC,EAAmB4B,IASxJ,OAHW,MAAPxN,GAAewL,GACf0U,GAAOlgB,EAAK,KAAMwL,EAAiBC,EAAgBxJ,GAEhDod,GAELO,EAAiB,CAAC5U,EAAI/I,EAAOuJ,EAAiBC,EAAgBE,KAChEA,EAAYA,KAAe1J,EAAMke,gBACjC,MAAM,MAAEnd,EAAK,UAAEsV,EAAS,UAAE/O,EAAS,KAAES,GAAS/H,EAE9C,IAAmB,IAAfqW,EAAgC,CAKhC,GAJItO,GACAmS,GAAoBla,EAAO,KAAMuJ,EAAiB,WAGlDxI,EACA,IAAK2I,GACY,GAAZ2M,GACe,GAAZA,EACJ,IAAK,MAAMpgB,KAAO8K,GACT,YAAe9K,IAAQ,YAAKA,IAC7B2mB,EAAU7T,EAAI9S,EAAK,KAAM8K,EAAM9K,SAIlC8K,EAAMod,SAGXvB,EAAU7T,EAAI,UAAW,KAAMhI,EAAMod,SAI7C,IAAIC,EAcJ,IAbKA,EAAard,GAASA,EAAMsd,qBAC7BzG,GAAgBwG,EAAY7U,EAAiBvJ,GAE7C+H,GACAmS,GAAoBla,EAAO,KAAMuJ,EAAiB,iBAEjD6U,EAAard,GAASA,EAAM4W,iBAAmB5P,IAChDqF,GAAwB,KACpBgR,GAAcxG,GAAgBwG,EAAY7U,EAAiBvJ,GAC3D+H,GAAQmS,GAAoBla,EAAO,KAAMuJ,EAAiB,YAC3DC,GAGS,GAAZlC,KAEEvG,IAAUA,EAAMud,YAAavd,EAAMwd,aAAe,CACpD,IAAI/iB,EAAOwiB,EAAgBjV,EAAGyV,WAAYxe,EAAO+I,EAAIQ,EAAiBC,EAAgBE,GAEtF,KAAOlO,GAAM,CACT2gB,IAAc,EAOd,MAAMna,EAAMxG,EACZA,EAAOA,EAAKqhB,YACZ/Q,EAAO9J,SAGM,EAAZsF,GACDyB,EAAGwV,cAAgBve,EAAMqI,WACzB8T,IAAc,EAKdpT,EAAGwV,YAAcve,EAAMqI,UAInC,OAAOU,EAAG8T,aAERmB,EAAkB,CAAC1S,EAAMmT,EAAapV,EAAWE,EAAiBC,EAAgBE,KACpFA,EAAYA,KAAe+U,EAAYP,gBACvC,MAAM7V,EAAWoW,EAAYpW,SACvBvP,EAAIuP,EAASpT,OAEnB,IAAK,IAAIS,EAAI,EAAGA,EAAIoD,EAAGpD,IAAK,CACxB,MAAMsK,EAAQ0J,EACRrB,EAAS3S,GACR2S,EAAS3S,GAAK8R,GAAea,EAAS3S,IACzC4V,EACAA,EAAOC,EAAYD,EAAMtL,EAAOuJ,EAAiBC,EAAgBE,IAGjEyS,IAAc,EAOdvS,EAAM,KAAM5J,EAAOqJ,EAAW,KAAME,EAAiBC,EAAgB4S,GAAe/S,KAG5F,OAAOiC,GAELoS,EAAkB,CAACpS,EAAMtL,EAAOuJ,EAAiBC,EAAgBE,KACnE,MAAML,EAAYmC,EAAWF,GACvB9P,EAAOwiB,EAAgBnB,EAAYvR,GAAOtL,EAAOqJ,EAAWE,EAAiBC,EAAgBE,GACnG,OAAIlO,GAAQ+gB,GAAU/gB,IAAuB,MAAdA,EAAK0L,KACzB2V,EAAa7c,EAAMsJ,OAAS9N,IAKnC2gB,IAAc,EAEdW,EAAQ9c,EAAMsJ,OAASyT,EAAc,KAAO1T,EAAW7N,GAChDA,IAGT0hB,EAAiB,CAAC5R,EAAMtL,EAAOuJ,EAAiBC,EAAgBkV,KASlE,GARAvC,IAAc,EAOdnc,EAAM+I,GAAK,KACP2V,EAAY,CAEZ,MAAMC,EAAMZ,EAAyBzS,GACrC,OAAa,CACT,MAAM9P,EAAOqhB,EAAYvR,GACzB,IAAI9P,GAAQA,IAASmjB,EAIjB,MAHA7S,EAAOtQ,IAOnB,MAAMA,EAAOqhB,EAAYvR,GACnBjC,EAAYmC,EAAWF,GAG7B,OAFAQ,EAAOR,GACP1B,EAAM,KAAM5J,EAAOqJ,EAAW7N,EAAM+N,EAAiBC,EAAgB4S,GAAe/S,IAC7E7N,GAELuiB,EAA4BzS,IAC9B,IAAI4E,EAAQ,EACZ,KAAO5E,GAEH,IADAA,EAAOuR,EAAYvR,KACPiR,GAAUjR,KACA,MAAdA,EAAKpE,MACLgJ,IACc,MAAd5E,EAAKpE,MAAc,CACnB,GAAc,IAAVgJ,EACA,OAAO2M,EAAYvR,GAGnB4E,IAKhB,OAAO5E,GAEX,MAAO,CA/RS,CAACtL,EAAOqJ,KAOpB8S,IAAc,EACd5Q,EAAYlC,EAAUmV,WAAYxe,EAAO,KAAM,MAC/C0E,KACIyX,IAEAhb,QAAQqB,MAAM,iDAmRL+I,GA6DrB,MAAMqT,GAAoB,CACtBnqB,UAAWoP,GAEXzO,cAAc,GAUlB,MAAMsd,GAAyBtF,GAEzB6Q,GAAS,CAACY,EAAQC,EAAWvV,EAAiBC,EAAgBxJ,KAChE,GAAI,YAAQ6e,GAER,YADAA,EAAO7nB,QAAQ,CAACoG,EAAG1H,IAAMuoB,GAAO7gB,EAAG0hB,IAAc,YAAQA,GAAaA,EAAUppB,GAAKopB,GAAYvV,EAAiBC,EAAgBxJ,IAGtI,IAAI5H,EAMIA,EALH4H,EAIqB,EAAlBA,EAAMsH,UACEtH,EAAMR,UAAU3C,MAGhBmD,EAAM+I,GAPV,KAUZ,MAAQrT,EAAGuY,EAAO7Q,EAAGW,GAAQ8gB,EAM7B,MAAME,EAASD,GAAaA,EAAU1hB,EAChC4hB,EAAO/Q,EAAM+Q,OAAS,IAAa/Q,EAAM+Q,KAAO,GAAM/Q,EAAM+Q,KAC5D7X,EAAa8G,EAAM9G,WAazB,GAXc,MAAV4X,GAAkBA,IAAWhhB,IACzB,YAASghB,IACTC,EAAKD,GAAU,KACX,YAAO5X,EAAY4X,KACnB5X,EAAW4X,GAAU,OAGpB5mB,GAAM4mB,KACXA,EAAO3mB,MAAQ,OAGnB,YAAS2F,GAAM,CACf,MAAMkhB,EAAQ,KACVD,EAAKjhB,GAAO3F,EACR,YAAO+O,EAAYpJ,KACnBoJ,EAAWpJ,GAAO3F,IAMtBA,GACA6mB,EAAM/pB,IAAM,EACZwd,GAAsBuM,EAAOzV,IAG7ByV,SAGH,GAAI9mB,GAAM4F,GAAM,CACjB,MAAMkhB,EAAQ,KACVlhB,EAAI3F,MAAQA,GAEZA,GACA6mB,EAAM/pB,IAAM,EACZwd,GAAsBuM,EAAOzV,IAG7ByV,SAGC,YAAWlhB,IAChBsC,GAAsBtC,EAAKwL,EAAiB,GAAuB,CAC/DnR,EACA4mB,KAsBZ,SAASE,GAAe/qB,GACpB,OAAOgrB,GAAmBhrB,GAK9B,SAASirB,GAAwBjrB,GAC7B,OAAOgrB,GAAmBhrB,EAASsoB,IAGvC,SAAS0C,GAAmBhrB,EAASkrB,GAKjC,MAAQvC,OAAQwC,EAAYxT,OAAQyT,EAAY3C,UAAW4C,EAAeC,eAAgBC,EAAoB5V,cAAe6V,EAAmBC,WAAYC,EAAgB9C,cAAe+C,EAAmBC,QAASC,EAAaC,eAAgBC,EAAoB1U,WAAY2U,EAAgBtD,YAAauD,EAAiBC,WAAYC,EAAiB,IAAMC,UAAWC,EAAeC,oBAAqBC,GAA4BvsB,EAG1ayV,EAAQ,CAACT,EAAIC,EAAIC,EAAWC,EAAS,KAAMC,EAAkB,KAAMC,EAAiB,KAAMC,GAAQ,EAAOC,GAAY,KAEnHP,IAAO2B,GAAgB3B,EAAIC,KAC3BE,EAASqX,EAAgBxX,GACzBqB,EAAQrB,EAAII,EAAiBC,GAAgB,GAC7CL,EAAK,OAEa,IAAlBC,EAAGiN,YACH3M,GAAY,EACZN,EAAG8U,gBAAkB,MAEzB,MAAM,KAAEloB,EAAI,IAAE+H,EAAG,UAAEuJ,GAAc8B,EACjC,OAAQpT,GACJ,KAAKqnB,GACDuD,EAAYzX,EAAIC,EAAIC,EAAWC,GAC/B,MACJ,KAAKnB,GACD0Y,EAAmB1X,EAAIC,EAAIC,EAAWC,GACtC,MACJ,KAAKgU,GACS,MAANnU,GACA2X,EAAgB1X,EAAIC,EAAWC,EAAQG,GAK3C,MACJ,KAAKoE,GACDkT,EAAgB5X,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GACnF,MACJ,QACoB,EAAZpC,EACA0Z,EAAe7X,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GAEjE,EAAZpC,EACL2Z,EAAiB9X,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,IAEnE,GAAZpC,GAGa,IAAZA,IAFNtR,EAAKkrB,QAAQ/X,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,EAAWyX,GAU5F,MAAPpjB,GAAewL,GACf0U,GAAOlgB,EAAKoL,GAAMA,EAAGpL,IAAKwL,EAAiBC,EAAgBJ,IAG7DwX,EAAc,CAACzX,EAAIC,EAAIC,EAAWC,KACpC,GAAU,MAANH,EACAmW,EAAYlW,EAAGL,GAAK8W,EAAezW,EAAGf,UAAYgB,EAAWC,OAE5D,CACD,MAAMP,EAAMK,EAAGL,GAAKI,EAAGJ,GACnBK,EAAGf,WAAac,EAAGd,UACnB2X,EAAYjX,EAAIK,EAAGf,YAIzBwY,EAAqB,CAAC1X,EAAIC,EAAIC,EAAWC,KACjC,MAANH,EACAmW,EAAYlW,EAAGL,GAAK+W,EAAkB1W,EAAGf,UAAY,IAAMgB,EAAWC,GAItEF,EAAGL,GAAKI,EAAGJ,IAGb+X,EAAkB,CAAC1X,EAAIC,EAAWC,EAAQG,MAC3CL,EAAGL,GAAIK,EAAGE,QAAUoX,EAAwBtX,EAAGf,SAAUgB,EAAWC,EAAQG,IA2C3EuX,EAAiB,CAAC7X,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KACvFD,EAAQA,GAAqB,QAAZL,EAAGpT,KACV,MAANmT,EACAiY,EAAahY,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GAG5E2X,EAAalY,EAAIC,EAAIG,EAAiBC,EAAgBC,EAAOC,IAG/D0X,EAAe,CAACphB,EAAOqJ,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KACpF,IAAIX,EACA2O,EACJ,MAAM,KAAE1hB,EAAI,MAAE+K,EAAK,UAAEuG,EAAS,WAAEW,EAAU,QAAEqZ,EAAO,UAAEjL,EAAS,KAAEtO,GAAS/H,EACzE,GACIA,EAAM+I,SACYrU,IAAlB8rB,IACe,IAAfnK,EAKAtN,EAAK/I,EAAM+I,GAAKyX,EAAcxgB,EAAM+I,QAEnC,CAcD,GAbAA,EAAK/I,EAAM+I,GAAK4W,EAAkB3f,EAAMhK,KAAMyT,EAAO1I,GAASA,EAAMwgB,IAGpD,EAAZja,EACA4Y,EAAmBnX,EAAI/I,EAAMqI,UAEZ,GAAZf,GACLka,EAAcxhB,EAAMqI,SAAUU,EAAI,KAAMQ,EAAiBC,EAAgBC,GAAkB,kBAATzT,EAA0B0T,KAAe1J,EAAMke,iBAEjInW,GACAmS,GAAoBla,EAAO,KAAMuJ,EAAiB,WAGlDxI,EAAO,CACP,IAAK,MAAM9K,KAAO8K,EACT,YAAe9K,IAChBupB,EAAczW,EAAI9S,EAAK,KAAM8K,EAAM9K,GAAMwT,EAAOzJ,EAAMqI,SAAUkB,EAAiBC,EAAgBiY,IAGpG/J,EAAY3W,EAAMsd,qBACnBzG,GAAgBF,EAAWnO,EAAiBvJ,GAIpDqgB,EAAWtX,EAAIuY,EAASthB,EAAOuJ,GAY/BxB,GACAmS,GAAoBla,EAAO,KAAMuJ,EAAiB,eAItD,MAAMmY,IAA4BlY,GAAmBA,IAAmBA,EAAeU,gBACnFjC,IACCA,EAAWuL,UACZkO,GACAzZ,EAAW0Z,YAAY5Y,GAE3BuW,EAAWvW,EAAIM,EAAWC,KACrBoO,EAAY3W,GAASA,EAAM4W,iBAC5B+J,GACA3Z,IACA2K,GAAsB,KAClBgF,GAAaE,GAAgBF,EAAWnO,EAAiBvJ,GACzD0hB,GAA2BzZ,EAAW2Z,MAAM7Y,GAC5ChB,GAAQmS,GAAoBla,EAAO,KAAMuJ,EAAiB,YAC3DC,IAGL6W,EAAa,CAACtX,EAAIuY,EAASthB,EAAOuJ,KAIpC,GAHI+X,GACAhB,EAAevX,EAAIuY,GAEnB/X,EAAiB,CACjB,MAAMsY,EAActY,EAAgBvT,KAAK8rB,UAGrCD,GAAeA,IAAgBP,GAC/BhB,EAAevX,EAAI8Y,EAAc,MAGjC,EAIA7hB,IALUuJ,EAAgBP,SAM1BqX,EAAWtX,EAAIQ,EAAgBvJ,MAAMshB,QAAS/X,EAAgBvJ,MAAOuJ,EAAgBpJ,UAI3FqhB,EAAgB,CAACnZ,EAAUgB,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,EAAWqY,EAAQ,KAC3G,IAAK,IAAIrsB,EAAIqsB,EAAOrsB,EAAI2S,EAASpT,OAAQS,IAAK,CAC1C,MAAM6S,EAASF,EAAS3S,GAAKgU,EACvBsY,GAAe3Z,EAAS3S,IACxB8R,GAAea,EAAS3S,IAC9BkU,EAAM,KAAMrB,EAAOc,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KAGhF2X,EAAe,CAAClY,EAAIC,EAAIG,EAAiBC,EAAgBC,EAAOC,KAClE,MAAMX,EAAMK,EAAGL,GAAKI,EAAGJ,GACvB,IAAI,UAAEsN,EAAS,gBAAE6H,EAAe,KAAEnW,GAASqB,EAG3CiN,GAA4B,GAAflN,EAAGkN,UAChB,MAAM4L,EAAW9Y,EAAGpI,OAAS,IACvBmhB,EAAW9Y,EAAGrI,OAAS,IAC7B,IAAI2W,EAaJ,IAZKA,EAAYwK,EAASC,sBACtBvK,GAAgBF,EAAWnO,EAAiBH,EAAID,GAEhDpB,GACAmS,GAAoB9Q,EAAID,EAAII,EAAiB,gBAQ7C8M,EAAY,EAAG,CAKf,GAAgB,GAAZA,EAEA+L,EAAWrZ,EAAIK,EAAI6Y,EAAUC,EAAU3Y,EAAiBC,EAAgBC,QAqBxE,GAhBgB,EAAZ4M,GACI4L,EAASI,QAAUH,EAASG,OAC5B7C,EAAczW,EAAI,QAAS,KAAMmZ,EAASG,MAAO5Y,GAKzC,EAAZ4M,GACAmJ,EAAczW,EAAI,QAASkZ,EAASK,MAAOJ,EAASI,MAAO7Y,GAQ/C,EAAZ4M,EAA2B,CAE3B,MAAMkM,EAAgBnZ,EAAGoZ,aACzB,IAAK,IAAI9sB,EAAI,EAAGA,EAAI6sB,EAActtB,OAAQS,IAAK,CAC3C,MAAMO,EAAMssB,EAAc7sB,GACpB+sB,EAAOR,EAAShsB,GAChBuF,EAAO0mB,EAASjsB,IAClBuF,IAASinB,GACR/C,GAAsBA,EAAmB3W,EAAI9S,KAC9CupB,EAAczW,EAAI9S,EAAKwsB,EAAMjnB,EAAMiO,EAAON,EAAGd,SAAUkB,EAAiBC,EAAgBiY,IAOxF,EAAZpL,GACIlN,EAAGd,WAAae,EAAGf,UACnB6X,EAAmBnX,EAAIK,EAAGf,eAI5BqB,GAAgC,MAAnBwU,GAEnBkE,EAAWrZ,EAAIK,EAAI6Y,EAAUC,EAAU3Y,EAAiBC,EAAgBC,GAE5E,MAAMiZ,EAAiBjZ,GAAqB,kBAAZL,EAAGpT,KAC/BkoB,EACAyE,EAAmBxZ,EAAG+U,gBAAiBA,EAAiBnV,EAAIQ,EAAiBC,EAAgBkZ,GAQvFhZ,GAENkZ,EAAczZ,EAAIC,EAAIL,EAAI,KAAMQ,EAAiBC,EAAgBkZ,KAEhEhL,EAAYwK,EAASW,iBAAmB9a,IACzC2K,GAAsB,KAClBgF,GAAaE,GAAgBF,EAAWnO,EAAiBH,EAAID,GAC7DpB,GAAQmS,GAAoB9Q,EAAID,EAAII,EAAiB,YACtDC,IAILmZ,EAAqB,CAACG,EAAaC,EAAaC,EAAmBzZ,EAAiBC,EAAgBC,KACtG,IAAK,IAAI/T,EAAI,EAAGA,EAAIqtB,EAAY9tB,OAAQS,IAAK,CACzC,MAAMutB,EAAWH,EAAYptB,GACvBwtB,EAAWH,EAAYrtB,GAEvB2T,EAGN4Z,EAASjtB,OAAS6X,KAGb/C,GAAgBmY,EAAUC,IAEN,EAArBD,EAAS3b,WACY,GAArB2b,EAAS3b,UACP6Y,EAAe8C,EAASla,IAGtBia,EACRpZ,EAAMqZ,EAAUC,EAAU7Z,EAAW,KAAME,EAAiBC,EAAgBC,GAAO,KAGrF2Y,EAAa,CAACrZ,EAAI/I,EAAOiiB,EAAUC,EAAU3Y,EAAiBC,EAAgBC,KAChF,GAAIwY,IAAaC,EAAU,CACvB,IAAK,MAAMjsB,KAAOisB,EAAU,CACxB,GAAI,YAAejsB,GACf,SACJ,MAAMuF,EAAO0mB,EAASjsB,GAChBwsB,EAAOR,EAAShsB,IAClBuF,IAASinB,GACR/C,GAAsBA,EAAmB3W,EAAI9S,KAC9CupB,EAAczW,EAAI9S,EAAKwsB,EAAMjnB,EAAMiO,EAAOzJ,EAAMqI,SAAUkB,EAAiBC,EAAgBiY,GAGnG,GAAIQ,IAAa,IACb,IAAK,MAAMhsB,KAAOgsB,EACT,YAAehsB,IAAUA,KAAOisB,GACjC1C,EAAczW,EAAI9S,EAAKgsB,EAAShsB,GAAM,KAAMwT,EAAOzJ,EAAMqI,SAAUkB,EAAiBC,EAAgBiY,KAMlHV,EAAkB,CAAC5X,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KACxF,MAAMyZ,EAAuB/Z,EAAGL,GAAKI,EAAKA,EAAGJ,GAAK8W,EAAe,IAC3DuD,EAAqBha,EAAGE,OAASH,EAAKA,EAAGG,OAASuW,EAAe,IACvE,IAAI,UAAExJ,EAAS,gBAAE6H,GAAoB9U,EACjCiN,EAAY,IACZ3M,GAAY,GAQN,MAANP,GACAmW,EAAW6D,EAAqB9Z,EAAWC,GAC3CgW,EAAW8D,EAAmB/Z,EAAWC,GAIzCkY,EAAcpY,EAAGf,SAAUgB,EAAW+Z,EAAmB7Z,EAAiBC,EAAgBC,EAAOC,IAG7F2M,EAAY,GACA,GAAZA,GACA6H,GAGAyE,EAAmBxZ,EAAG+U,gBAAiBA,EAAiB7U,EAAWE,EAAiBC,EAAgBC,IAS1F,MAAVL,EAAGnT,KACEsT,GAAmBH,IAAOG,EAAgBP,UAC3Cqa,GAAuBla,EAAIC,GAAI,IAQnCwZ,EAAczZ,EAAIC,EAAIC,EAAW+Z,EAAmB7Z,EAAiBC,EAAgBC,EAAOC,IAIlGuX,EAAmB,CAAC9X,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KAC/E,MAANP,EACmB,IAAfC,EAAG9B,UACHiC,EAAgBnC,IAAIoQ,SAASpO,EAAIC,EAAWC,EAAQG,EAAOC,GAG3DiT,EAAevT,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GAIlF4Z,EAAgBna,EAAIC,EAAIM,IAG1BiT,EAAiB,CAAC4G,EAAcla,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KAC7F,MAAMnK,EAAYgkB,EAAa/jB,UAylEvC,SAAiCQ,EAAOG,EAAQ6J,GAC5C,MAAMhU,EAAOgK,EAAMhK,KAEb0J,GAAcS,EAASA,EAAOT,WAAaM,EAAMN,aAAe8jB,GAChEjkB,EAAW,CACbpK,IAAKsuB,KACLzjB,QACAhK,OACAmK,SACAT,aACAgI,KAAM,KACNlM,KAAM,KACNwN,QAAS,KACTmM,OAAQ,KACRnO,OAAQ,KACRnK,MAAO,KACP8J,UAAW,KACX7P,QAAS,KACTgkB,SAAU3a,EAASA,EAAO2a,SAAW5jB,OAAOwU,OAAOhM,EAAWob,UAC9D4I,YAAa,KACbzc,YAAa,GAEb4T,WAAY,KACZlB,WAAY,KAEZ/S,aAAc0I,GAAsBtZ,EAAM0J,GAC1CkJ,aAAcnD,GAAsBzP,EAAM0J,GAE1CqH,KAAM,KACNvB,QAAS,KAET4B,IAAK,IACLF,KAAM,IACNnG,MAAO,IACP+F,MAAO,IACPD,MAAO,IACPmY,KAAM,IACN7X,WAAY,IACZwc,aAAc,KAEd3Z,WACA6C,WAAY7C,EAAWA,EAASe,UAAY,EAC5C4B,SAAU,KACVG,eAAe,EAGf6F,WAAW,EACX5G,aAAa,EACb0L,eAAe,EACfmM,GAAI,KACJC,EAAG,KACHC,GAAI,KACJnY,EAAG,KACHoY,GAAI,KACJC,EAAG,KACHzZ,GAAI,KACJ0Z,IAAK,KACLnM,GAAI,KACJjT,EAAG,KACHqf,IAAK,KACLC,IAAK,KACL/hB,GAAI,MAMJ7C,EAAS6H,IAAM,CAAE0G,EAAGvO,GAExBA,EAASmI,KAAOvH,EAASA,EAAOuH,KAAOnI,EACvCA,EAASwH,KAAO,GAAKnD,KAAK,KAAMrE,IAC5B,EAGJ,OAAOA,EAnqEwC6kB,CAAwBb,EAAcha,EAAiBC,GAsBlG,GAbI0M,GAAYqN,KACZhkB,EAAS6H,IAAI4P,SAAWmK,GAwqEpC,SAAwB5hB,EAAU8kB,GAAQ,GACtCrT,GAAwBqT,EACxB,MAAM,MAAEtjB,EAAK,SAAEsH,EAAQ,UAAEf,GAAc/H,EAASS,MAC1CskB,EAAyB,EAAZhd,GAtmJvB,SAAmB/H,EAAUoP,EAAU2V,EACvCD,GAAQ,GACJ,MAAMtjB,EAAQ,GACR+F,EAAQ,GACd,YAAIA,EAAOyd,GAAmB,GAC9B7V,GAAanP,EAAUoP,EAAU5N,EAAO+F,GAKpCwd,EAEA/kB,EAASwB,MAAQsjB,EAAQtjB,EAAQ5E,GAAgB4E,GAG5CxB,EAASvJ,KAAK+K,MAMfxB,EAASwB,MAAQA,EAJjBxB,EAASwB,MAAQ+F,EAOzBvH,EAASuH,MAAQA,GA+kJjB0d,CAAUjlB,EAAUwB,EAAOujB,EAAYD,GAp3GzB,EAAC9kB,EAAU8I,KACzB,GAA+B,GAA3B9I,EAASS,MAAMsH,UAAqC,CACpD,MAAMtR,EAAOqS,EAASyF,EAClB9X,GACAuJ,EAASsH,MAAQwB,EAEjB,YAAIA,EAAU,IAAKrS,IAGnBsjB,GAAqBjR,EAAW9I,EAASsH,MAAQ,SAIrDtH,EAASsH,MAAQ,GACbwB,GACAoR,GAAoBla,EAAU8I,GAGtC,YAAI9I,EAASsH,MAAO0d,GAAmB,IAm2GvCE,CAAUllB,EAAU8I,GACpB,MAAMqc,EAAcJ,EAMxB,SAAgC/kB,EAAU8kB,GACtC,MAAM3d,EAAYnH,EAASvJ,KACvB,EAkBJuJ,EAASmkB,YAAc,GAGvBnkB,EAAS1C,MAAQ,IAAIC,MAAMyC,EAAS6H,IAAKud,KACrC,EAIJ,MAAM,MAAEC,GAAUle,EAClB,GAAIke,EAAO,CACP,MAAMjB,EAAgBpkB,EAASokB,aAC3BiB,EAAM3vB,OAAS,EAyH3B,SAA4BsK,GAiBpB,MAAO,CACHuH,MAAOvH,EAASuH,MAChBD,MAAOtH,EAASsH,MAChBE,KAAMxH,EAASwH,MA7II8d,CAAmBtlB,GAAY,KACtDiR,GAAkBjR,EAClB3J,IACA,MAAM8uB,EAAcrkB,GAAsBukB,EAAOrlB,EAAU,EAAwB,CAA6EA,EAASwB,MAAO4iB,IAGhL,GAFA3uB,IACAwb,GAAkB,KACd,YAAUkU,GAAc,CACxB,GAAIL,EAEA,OAAOK,EAAY/gB,KAAMmhB,IACrB/X,GAAkBxN,EAAUulB,KAMhCvlB,EAASoN,SAAW+X,OAIxB3X,GAAkBxN,EAAUmlB,QAIhCK,GAAqBxlB,GA5DnBylB,CAAuBzlB,EAAU8kB,QACjC3vB,EACNsc,IAAwB,EA3qEpBiU,CAAe1lB,GAMVA,EAASoN,UAIV,GAHAnD,GAAkBA,EAAe0b,YAAY3lB,EAAUkN,IAGlD8W,EAAaxa,GAAI,CAClB,MAAMiE,EAAezN,EAASyJ,QAAUd,GAAYC,IACpD0Y,EAAmB,KAAM7T,EAAa3D,EAAWC,SAIzDmD,EAAkBlN,EAAUgkB,EAAcla,EAAWC,EAAQE,EAAgBC,EAAOC,IAMlF4Z,EAAkB,CAACna,EAAIC,EAAIM,KAC7B,MAAMnK,EAAY6J,EAAG5J,UAAY2J,EAAG3J,UACpC,GAniGR,SAA+B2a,EAAWgL,EAAWzb,GACjD,MAAQ3I,MAAO2H,EAAWL,SAAU+c,EAAY,UAAE5lB,GAAc2a,GACxDpZ,MAAO4H,EAAWN,SAAUgd,EAAY,UAAEhP,GAAc8O,EAC1Drf,EAAQtG,EAAUoJ,aAQxB,GAAIuc,EAAUpd,MAAQod,EAAUld,WAC5B,OAAO,EAEX,KAAIyB,GAAa2M,EAAY,GA2BzB,SAAI+O,IAAgBC,GACXA,GAAiBA,EAAaC,UAInC5c,IAAcC,IAGbD,GAGAC,GAGEF,GAAgBC,EAAWC,EAAW7C,KALhC6C,GAnCb,GAAgB,KAAZ0N,EAGA,OAAO,EAEX,GAAgB,GAAZA,EACA,OAAK3N,EAIED,GAAgBC,EAAWC,EAAW7C,KAHhC6C,EAKZ,GAAgB,EAAZ0N,EAA2B,CAChC,MAAMmM,EAAe2C,EAAU3C,aAC/B,IAAK,IAAI9sB,EAAI,EAAGA,EAAI8sB,EAAavtB,OAAQS,IAAK,CAC1C,MAAMO,EAAMusB,EAAa9sB,GACzB,GAAIiT,EAAU1S,KAASyS,EAAUzS,KAC5BmQ,GAAeN,EAAO7P,GACvB,OAAO,GAwBvB,OAAO,EA0+FCsvB,CAAsBpc,EAAIC,EAAIM,GAAY,CAC1C,GACInK,EAASoN,WACRpN,EAASuN,cAUV,YAJA0Y,EAAyBjmB,EAAU6J,EAAIM,GAQvCnK,EAAS/D,KAAO4N,EAroHhC,SAAuBtF,GACnB,MAAMpO,EAAIkN,GAAM6V,QAAQ3U,GACpBpO,GAAK,IACLkN,GAAMlN,GAAK,MAqoHH+vB,CAAclmB,EAAS4V,QAEvB5V,EAAS4V,cAKb/L,EAAG5J,UAAY2J,EAAG3J,UAClB4J,EAAGL,GAAKI,EAAGJ,GACXxJ,EAASS,MAAQoJ,GAGnBqD,EAAoB,CAAClN,EAAUgkB,EAAcla,EAAWC,EAAQE,EAAgBC,EAAOC,KAEzFnK,EAAS4V,OAAS,GAAO,WACrB,GAAK5V,EAASoT,UA4DT,CAID,IAEI+E,GAFA,KAAElc,EAAI,GAAEuoB,EAAE,EAAEC,EAAC,OAAE7jB,EAAM,MAAEH,GAAUT,EACjCmmB,EAAalqB,EAEb,EAGAA,GACAA,EAAKuN,GAAK/I,EAAM+I,GAChByc,EAAyBjmB,EAAU/D,EAAMkO,IAGzClO,EAAOwE,EAGP+jB,GACA,YAAeA,IAGdrM,EAAYlc,EAAKuF,OAASvF,EAAKuF,MAAMohB,sBACtCvK,GAAgBF,EAAWvX,EAAQ3E,EAAMwE,GAM7C,MAAM2lB,EAAWlf,GAAoBlH,GACjC,EAGJ,MAAMqmB,EAAWrmB,EAASyJ,QAC1BzJ,EAASyJ,QAAU2c,EAInB/b,EAAMgc,EAAUD,EAEhBxF,EAAeyF,EAAS7c,IAExB4X,EAAgBiF,GAAWrmB,EAAUiK,EAAgBC,GAIrDjO,EAAKuN,GAAK4c,EAAS5c,GACA,OAAf2c,GAIA5c,GAAgBvJ,EAAUomB,EAAS5c,IAGnCib,GACAtR,GAAsBsR,EAAGxa,IAGxBkO,EAAYlc,EAAKuF,OAASvF,EAAKuF,MAAM8hB,iBACtCnQ,GAAsB,KAClBkF,GAAgBF,EAAWvX,EAAQ3E,EAAMwE,IAC1CwJ,OAzHc,CACrB,IAAIkO,EACJ,MAAM,GAAE3O,EAAE,MAAEhI,GAAUwiB,GAChB,GAAEO,EAAE,EAAEnY,EAAC,OAAExL,GAAWZ,EAEtBukB,GACA,YAAeA,IAGdpM,EAAY3W,GAASA,EAAMsd,qBAC5BzG,GAAgBF,EAAWvX,EAAQojB,GAMvC,MAAMva,EAAWzJ,EAASyJ,QAAUvC,GAAoBlH,GACpD,EAGAwJ,GAAMwC,EAKNA,EAAYgY,EAAaxa,GAAIC,EAASzJ,EAAUiK,IAShDI,EAAM,KAAMZ,EAASK,EAAWC,EAAQ/J,EAAUiK,EAAgBC,GAIlE8Z,EAAaxa,GAAKC,EAAQD,IAG1B4C,GACA+G,GAAsB/G,EAAGnC,IAGxBkO,EAAY3W,GAASA,EAAM4W,iBAC5BjF,GAAsB,KAClBkF,GAAgBF,EAAWvX,EAAQojB,IACpC/Z,GAKP,MAAM,EAAE3E,GAAMtF,EACVsF,GACyB,IAAzB0e,EAAajc,WACboL,GAAsB7N,EAAG2E,GAE7BjK,EAASoT,WAAY,KAwEmDiM,KAE9E4G,EAA2B,CAACjmB,EAAU4lB,EAAWzb,KACnDyb,EAAU3lB,UAAYD,EACtB,MAAMmJ,EAAYnJ,EAASS,MAAMe,MACjCxB,EAASS,MAAQmlB,EACjB5lB,EAAS/D,KAAO,KA1mFxB,SAAqB+D,EAAUoP,EAAUkX,EAAcnc,GACnD,MAAM,MAAE3I,EAAK,MAAE+F,EAAO9G,OAAO,UAAEqW,IAAgB9W,EACzCuP,EAAkBlW,GAAMmI,IACvB5M,GAAWoL,EAASqH,aAC3B,KAOK8C,GAAa2M,EAAY,IACZ,GAAZA,EA0BD,CAKD,IAAIyP,EAHJpX,GAAanP,EAAUoP,EAAU5N,EAAO+F,GAIxC,IAAK,MAAM7Q,KAAO6Y,EACTH,IAEC,YAAOA,EAAU1Y,KAGb6vB,EAAW,YAAU7vB,MAAUA,GAAQ,YAAO0Y,EAAUmX,MAC1D3xB,GACI0xB,QAEuBnxB,IAAtBmxB,EAAa5vB,SAEiBvB,IAA3BmxB,EAAaC,KACjB/kB,EAAM9K,GAAO8Y,GAAiB5a,EAASwa,GAAY,IAAW1Y,OAAKvB,EAAW6K,WAI3EwB,EAAM9K,IAMzB,GAAI6Q,IAAUgI,EACV,IAAK,MAAM7Y,KAAO6Q,EACT6H,GAAa,YAAOA,EAAU1Y,WACxB6Q,EAAM7Q,QAzDzB,GAAgB,EAAZogB,EAA2B,CAG3B,MAAMkM,EAAgBhjB,EAASS,MAAMwiB,aACrC,IAAK,IAAI9sB,EAAI,EAAGA,EAAI6sB,EAActtB,OAAQS,IAAK,CAC3C,MAAMO,EAAMssB,EAAc7sB,GAEpB0C,EAAQuW,EAAS1Y,GACvB,GAAI9B,EAGA,GAAI,YAAO2S,EAAO7Q,GACd6Q,EAAM7Q,GAAOmC,MAEZ,CACD,MAAM2tB,EAAe,YAAS9vB,GAC9B8K,EAAMglB,GAAgBhX,GAAiB5a,EAAS2a,EAAiBiX,EAAc3tB,EAAOmH,QAI1FuH,EAAM7Q,GAAOmC,GA2C7B1B,EAAQ6I,EAAU,MAAiB,UA+hF/BymB,CAAYzmB,EAAU4lB,EAAUpkB,MAAO2H,EAAWgB,GA93CtC,EAACnK,EAAU8I,KAC3B,MAAM,MAAErI,EAAK,MAAE6G,GAAUtH,EACzB,IAAI0mB,GAAoB,EACpBC,EAA2B,IAC/B,GAAsB,GAAlBlmB,EAAMsH,UAAqC,CAC3C,MAAMtR,EAAOqS,EAASyF,EAClB9X,EAOkB,IAATA,EAGLiwB,GAAoB,EAKpB,YAAOpf,EAAOwB,IAIlB4d,GAAqB5d,EAASid,QAC9BhM,GAAqBjR,EAAUxB,IAEnCqf,EAA2B7d,OAEtBA,IAELoR,GAAoBla,EAAU8I,GAC9B6d,EAA2B,CAAE/W,QAAS,IAG1C,GAAI8W,EACA,IAAK,MAAMhwB,KAAO4Q,EACTqS,GAAcjjB,IAAUA,KAAOiwB,UACzBrf,EAAM5Q,IAw1CrBkwB,CAAY5mB,EAAU4lB,EAAU9c,UAGhC9D,QAAiB7P,EAAW6K,EAAS4V,SAEnCyN,EAAgB,CAACzZ,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GAAY,KAClG,MAAM0c,EAAKjd,GAAMA,EAAGd,SACdge,EAAgBld,EAAKA,EAAG7B,UAAY,EACpCgf,EAAKld,EAAGf,UACR,UAAEgO,EAAS,UAAE/O,GAAc8B,EAEjC,GAAIiN,EAAY,EAAG,CACf,GAAgB,IAAZA,EAIA,YADAkQ,EAAmBH,EAAIE,EAAIjd,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GAGrF,GAAgB,IAAZ2M,EAGL,YADAmQ,EAAqBJ,EAAIE,EAAIjd,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GAKhF,EAAZpC,GAEoB,GAAhB+e,GACA5E,EAAgB2E,EAAI7c,EAAiBC,GAErC8c,IAAOF,GACPlG,EAAmB7W,EAAWid,IAId,GAAhBD,EAEgB,GAAZ/e,EAEAif,EAAmBH,EAAIE,EAAIjd,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,GAItF+X,EAAgB2E,EAAI7c,EAAiBC,GAAgB,IAMrC,EAAhB6c,GACAnG,EAAmB7W,EAAW,IAGlB,GAAZ/B,GACAka,EAAc8E,EAAIjd,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KAKvF8c,EAAuB,CAACJ,EAAIE,EAAIjd,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,KAC7F0c,EAAKA,GAAM,IACXE,EAAKA,GAAM,IACX,MAAMG,EAAYL,EAAGnxB,OACfyxB,EAAYJ,EAAGrxB,OACf0xB,EAAeC,KAAKC,IAAIJ,EAAWC,GACzC,IAAIhxB,EACJ,IAAKA,EAAI,EAAGA,EAAIixB,EAAcjxB,IAAK,CAC/B,MAAMoxB,EAAaR,EAAG5wB,GAAKgU,EACrBsY,GAAesE,EAAG5wB,IAClB8R,GAAe8e,EAAG5wB,IACxBkU,EAAMwc,EAAG1wB,GAAIoxB,EAAWzd,EAAW,KAAME,EAAiBC,EAAgBC,EAAOC,GAEjF+c,EAAYC,EAEZjF,EAAgB2E,EAAI7c,EAAiBC,GAAgB,GAAM,EAAOmd,GAIlEnF,EAAc8E,EAAIjd,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,EAAWid,IAI1FJ,EAAqB,CAACH,EAAIE,EAAIjd,EAAW0d,EAAcxd,EAAiBC,EAAgBC,EAAOC,KACjG,IAAIhU,EAAI,EACR,MAAMsxB,EAAKV,EAAGrxB,OACd,IAAIgyB,EAAKb,EAAGnxB,OAAS,EACjBiyB,EAAKF,EAAK,EAId,KAAOtxB,GAAKuxB,GAAMvxB,GAAKwxB,GAAI,CACvB,MAAM/d,EAAKid,EAAG1wB,GACR0T,EAAMkd,EAAG5wB,GAAKgU,EACdsY,GAAesE,EAAG5wB,IAClB8R,GAAe8e,EAAG5wB,IACxB,IAAIoV,GAAgB3B,EAAIC,GAIpB,MAHAQ,EAAMT,EAAIC,EAAIC,EAAW,KAAME,EAAiBC,EAAgBC,EAAOC,GAK3EhU,IAKJ,KAAOA,GAAKuxB,GAAMvxB,GAAKwxB,GAAI,CACvB,MAAM/d,EAAKid,EAAGa,GACR7d,EAAMkd,EAAGY,GAAMxd,EACfsY,GAAesE,EAAGY,IAClB1f,GAAe8e,EAAGY,IACxB,IAAIpc,GAAgB3B,EAAIC,GAIpB,MAHAQ,EAAMT,EAAIC,EAAIC,EAAW,KAAME,EAAiBC,EAAgBC,EAAOC,GAK3Eud,IACAC,IASJ,GAAIxxB,EAAIuxB,GACJ,GAAIvxB,GAAKwxB,EAAI,CACT,MAAMC,EAAUD,EAAK,EACf5d,EAAS6d,EAAUH,EAAKV,EAAGa,GAASpe,GAAKge,EAC/C,KAAOrxB,GAAKwxB,GACRtd,EAAM,KAAO0c,EAAG5wB,GAAKgU,EACfsY,GAAesE,EAAG5wB,IAClB8R,GAAe8e,EAAG5wB,IAAM2T,EAAWC,EAAQC,EAAiBC,EAAgBC,GAClF/T,UAWP,GAAIA,EAAIwxB,EACT,KAAOxxB,GAAKuxB,GACRzc,EAAQ4b,EAAG1wB,GAAI6T,EAAiBC,GAAgB,GAChD9T,QAOH,CACD,MAAM0xB,EAAK1xB,EACL2xB,EAAK3xB,EAEL4xB,EAAmB,IAAIjxB,IAC7B,IAAKX,EAAI2xB,EAAI3xB,GAAKwxB,EAAIxxB,IAAK,CACvB,MAAMoxB,EAAaR,EAAG5wB,GAAKgU,EACrBsY,GAAesE,EAAG5wB,IAClB8R,GAAe8e,EAAG5wB,IACH,MAAjBoxB,EAAU7wB,KAIVqxB,EAAiBlxB,IAAI0wB,EAAU7wB,IAAKP,GAK5C,IAAI6xB,EACAC,EAAU,EACd,MAAMC,EAAcP,EAAKG,EAAK,EAC9B,IAAIK,GAAQ,EAERC,EAAmB,EAMvB,MAAMC,EAAwB,IAAIpvB,MAAMivB,GACxC,IAAK/xB,EAAI,EAAGA,EAAI+xB,EAAa/xB,IACzBkyB,EAAsBlyB,GAAK,EAC/B,IAAKA,EAAI0xB,EAAI1xB,GAAKuxB,EAAIvxB,IAAK,CACvB,MAAMmyB,EAAYzB,EAAG1wB,GACrB,GAAI8xB,GAAWC,EAAa,CAExBjd,EAAQqd,EAAWte,EAAiBC,GAAgB,GACpD,SAEJ,IAAIse,EACJ,GAAqB,MAAjBD,EAAU5xB,IACV6xB,EAAWR,EAAiBnxB,IAAI0xB,EAAU5xB,UAI1C,IAAKsxB,EAAIF,EAAIE,GAAKL,EAAIK,IAClB,GAAsC,IAAlCK,EAAsBL,EAAIF,IAC1Bvc,GAAgB+c,EAAWvB,EAAGiB,IAAK,CACnCO,EAAWP,EACX,WAIK7yB,IAAbozB,EACAtd,EAAQqd,EAAWte,EAAiBC,GAAgB,IAGpDoe,EAAsBE,EAAWT,GAAM3xB,EAAI,EACvCoyB,GAAYH,EACZA,EAAmBG,EAGnBJ,GAAQ,EAEZ9d,EAAMie,EAAWvB,EAAGwB,GAAWze,EAAW,KAAME,EAAiBC,EAAgBC,EAAOC,GACxF8d,KAKR,MAAMO,EAA6BL,EA+T/C,SAAqB/uB,GACjB,MAAM+K,EAAI/K,EAAI0I,QACRjI,EAAS,CAAC,GAChB,IAAI1D,EAAG6xB,EAAGvD,EAAGjqB,EAAG8pB,EAChB,MAAMvT,EAAM3X,EAAI1D,OAChB,IAAKS,EAAI,EAAGA,EAAI4a,EAAK5a,IAAK,CACtB,MAAMsyB,EAAOrvB,EAAIjD,GACjB,GAAa,IAATsyB,EAAY,CAEZ,GADAT,EAAInuB,EAAOA,EAAOnE,OAAS,GACvB0D,EAAI4uB,GAAKS,EAAM,CACftkB,EAAEhO,GAAK6xB,EACPnuB,EAAOvE,KAAKa,GACZ,SAIJ,IAFAsuB,EAAI,EACJjqB,EAAIX,EAAOnE,OAAS,EACb+uB,EAAIjqB,GACP8pB,GAAMG,EAAIjqB,GAAK,EAAK,EAChBpB,EAAIS,EAAOyqB,IAAMmE,EACjBhE,EAAIH,EAAI,EAGR9pB,EAAI8pB,EAGRmE,EAAOrvB,EAAIS,EAAO4qB,MACdA,EAAI,IACJtgB,EAAEhO,GAAK0D,EAAO4qB,EAAI,IAEtB5qB,EAAO4qB,GAAKtuB,IAIxBsuB,EAAI5qB,EAAOnE,OACX8E,EAAIX,EAAO4qB,EAAI,GACf,KAAOA,KAAM,GACT5qB,EAAO4qB,GAAKjqB,EACZA,EAAI2J,EAAE3J,GAEV,OAAOX,EArWO6uB,CAAYL,GACZ,IAGN,IAFAL,EAAIQ,EAA2B9yB,OAAS,EAEnCS,EAAI+xB,EAAc,EAAG/xB,GAAK,EAAGA,IAAK,CACnC,MAAMwyB,EAAYb,EAAK3xB,EACjBoxB,EAAYR,EAAG4B,GACf5e,EAAS4e,EAAY,EAAIlB,EAAKV,EAAG4B,EAAY,GAAGnf,GAAKge,EAC1B,IAA7Ba,EAAsBlyB,GAEtBkU,EAAM,KAAMkd,EAAWzd,EAAWC,EAAQC,EAAiBC,EAAgBC,GAEtEie,IAIDH,EAAI,GAAK7xB,IAAMqyB,EAA2BR,GAC1C3b,EAAKkb,EAAWzd,EAAWC,EAAQ,GAGnCie,QAMd3b,EAAO,CAAC5L,EAAOqJ,EAAWC,EAAQ6e,EAAU3e,EAAiB,QAC/D,MAAM,GAAET,EAAE,KAAE/S,EAAI,WAAEiS,EAAU,SAAEI,EAAQ,UAAEf,GAActH,EACtD,GAAgB,EAAZsH,EAEA,YADAsE,EAAK5L,EAAMR,UAAUwJ,QAASK,EAAWC,EAAQ6e,GAGrD,GAAiB,IAAZ7gB,EAED,YADAtH,EAAMgK,SAAS4B,KAAKvC,EAAWC,EAAQ6e,GAG3C,GAAgB,GAAZ7gB,EAEA,YADAtR,EAAK4V,KAAK5L,EAAOqJ,EAAWC,EAAQ6X,GAGxC,GAAInrB,IAAS6X,GAAU,CACnByR,EAAWvW,EAAIM,EAAWC,GAC1B,IAAK,IAAI5T,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IACjCkW,EAAKvD,EAAS3S,GAAI2T,EAAWC,EAAQ6e,GAGzC,YADA7I,EAAWtf,EAAMsJ,OAAQD,EAAWC,GAYxC,GAHoC,IAAb6e,GACP,EAAZ7gB,GACAW,EAEA,GAAiB,IAAbkgB,EACAlgB,EAAW0Z,YAAY5Y,GACvBuW,EAAWvW,EAAIM,EAAWC,GAC1BoJ,GAAsB,IAAMzK,EAAW2Z,MAAM7Y,GAAKS,OAEjD,CACD,MAAM,MAAE4e,EAAK,WAAEhT,EAAU,WAAEjJ,GAAelE,EACpC6D,EAAS,IAAMwT,EAAWvW,EAAIM,EAAWC,GACzC+e,EAAe,KACjBD,EAAMrf,EAAI,KACN+C,IACAK,GAAcA,OAGlBiJ,EACAA,EAAWrM,EAAI+C,EAAQuc,GAGvBA,SAKR/I,EAAWvW,EAAIM,EAAWC,IAG5BkB,EAAU,CAACxK,EAAOuJ,EAAiBC,EAAgByD,GAAW,EAAOvD,GAAY,KACnF,MAAM,KAAE1T,EAAI,MAAE+K,EAAK,IAAEhD,EAAG,SAAEsK,EAAQ,gBAAE6V,EAAe,UAAE5W,EAAS,UAAE+O,EAAS,KAAEtO,GAAS/H,EAKpF,GAHW,MAAPjC,GAAewL,GACf0U,GAAOlgB,EAAK,KAAMwL,EAAiBC,EAAgB,MAEvC,IAAZlC,EAEA,YADAiC,EAAgBnC,IAAIyQ,WAAW7X,GAGnC,MAAMsoB,EAA+B,EAAZhhB,GAA+BS,EACxD,IAAI2P,EAIJ,IAHKA,EAAY3W,GAASA,EAAMwnB,uBAC5B3Q,GAAgBF,EAAWnO,EAAiBvJ,GAEhC,EAAZsH,EACAkhB,EAAiBxoB,EAAMR,UAAWgK,EAAgByD,OAEjD,CACD,GAAiB,IAAZ3F,EAED,YADAtH,EAAMgK,SAASQ,QAAQhB,EAAgByD,GAGvCqb,GACApO,GAAoBla,EAAO,KAAMuJ,EAAiB,iBAElD2U,IAECloB,IAAS6X,IACLwI,EAAY,GAAiB,GAAZA,GAEtBoL,EAAgBvD,EAAiB3U,EAAiBC,GAAgB,GAAO,IAEnEE,GAAyB,GAAZpC,GACnBma,EAAgBpZ,EAAUkB,EAAiBC,GAG/B,GAAZlC,IACC2F,IAAawb,GAAmBzoB,EAAMe,SACvCf,EAAMhK,KAAK8V,OAAO9L,EAAOmhB,GAEzBlU,GACAnB,EAAO9L,KAGV0X,EAAY3W,GAASA,EAAMgX,mBAAqBuQ,IACjD5V,GAAsB,KAClBgF,GAAaE,GAAgBF,EAAWnO,EAAiBvJ,GACzDsoB,GACIpO,GAAoBla,EAAO,KAAMuJ,EAAiB,cACvDC,IAGLsC,EAAS9L,IACX,MAAM,KAAEhK,EAAI,GAAE+S,EAAE,OAAEO,EAAM,WAAErB,GAAejI,EACzC,GAAIhK,IAAS6X,GAET,YADA6a,EAAe3f,EAAIO,GAOvB,MAAMqf,EAAgB,KAClBpJ,EAAWxW,GACPd,IAAeA,EAAWuL,WAAavL,EAAWkE,YAClDlE,EAAWkE,cAGnB,GAAsB,EAAlBnM,EAAMsH,WACNW,IACCA,EAAWuL,UAAW,CACvB,MAAM,MAAE4U,EAAK,WAAEhT,GAAenN,EACxBogB,EAAe,IAAMD,EAAMrf,EAAI4f,GACjCvT,EACAA,EAAWpV,EAAM+I,GAAI4f,EAAeN,GAGpCA,SAIJM,KAGFD,EAAiB,CAAC1mB,EAAK2c,KAGzB,IAAInjB,EACJ,KAAOwG,IAAQ2c,GACXnjB,EAAO4kB,EAAgBpe,GACvBud,EAAWvd,GACXA,EAAMxG,EAEV+jB,EAAWZ,IAET6J,EAAmB,CAACjpB,EAAUiK,EAAgByD,KAIhD,MAAM,IAAEgX,EAAG,QAAEntB,EAAO,OAAEqe,EAAM,QAAEnM,EAAO,GAAEuB,GAAOhL,EAK9C,GAHI0kB,GACA,YAAeA,GAEfntB,EACA,IAAK,IAAIpB,EAAI,EAAGA,EAAIoB,EAAQ7B,OAAQS,IAChCF,EAAKsB,EAAQpB,IAKjByf,IACA3f,EAAK2f,GACL3K,EAAQxB,EAASzJ,EAAUiK,EAAgByD,IAG3C1C,GACAmI,GAAsBnI,EAAIf,GAE9BkJ,GAAsB,KAClBnT,EAASwM,aAAc,GACxBvC,GAKCA,GACAA,EAAeU,gBACdV,EAAeuC,aAChBxM,EAASoN,WACRpN,EAASuN,eACVvN,EAASsN,aAAerD,EAAeuB,YACvCvB,EAAenU,OACa,IAAxBmU,EAAenU,MACfmU,EAAelG,YAOrBme,EAAkB,CAACpZ,EAAUkB,EAAiBC,EAAgByD,GAAW,EAAOvD,GAAY,EAAOqY,EAAQ,KAC7G,IAAK,IAAIrsB,EAAIqsB,EAAOrsB,EAAI2S,EAASpT,OAAQS,IACrC8U,EAAQnC,EAAS3S,GAAI6T,EAAiBC,EAAgByD,EAAUvD,IAGlEiX,EAAkB3gB,GACE,EAAlBA,EAAMsH,UACCqZ,EAAgB3gB,EAAMR,UAAUwJ,SAEpB,IAAlBhJ,EAAMsH,UACAtH,EAAMgK,SAASxO,OAEnB4kB,EAAiBpgB,EAAMsJ,QAAUtJ,EAAM+I,IAE5C/B,EAAS,CAAChH,EAAOqJ,KACN,MAATrJ,EACIqJ,EAAUuf,QACVpe,EAAQnB,EAAUuf,OAAQ,KAAM,MAAM,GAI1Chf,EAAMP,EAAUuf,QAAU,KAAM5oB,EAAOqJ,GAE3C3E,KACA2E,EAAUuf,OAAS5oB,GAEjBmhB,EAAY,CACdzd,EAAGkG,EACHW,GAAIC,EACJmB,EAAGC,EACHxO,EAAG0O,EACH4Q,GAAIC,EACJkM,GAAIrH,EACJsH,GAAIlG,EACJmG,IAAKpG,EACL9W,EAAG8U,EACH9W,EAAG1V,GAEP,IAAIkX,EACAE,EAIJ,OAHI8T,KACChU,EAASE,GAAe8T,EAAmB8B,IAEzC,CACHna,SACAqE,UACA2d,UAAWjO,GAAa/T,EAAQqE,IAGxC,SAASuM,GAAgBzS,EAAM5F,EAAUS,EAAOma,EAAY,MACxDvY,GAA2BuD,EAAM5F,EAAU,EAAoB,CAC3DS,EACAma,IAcR,SAASkJ,GAAuBla,EAAIC,EAAIxR,GAAU,GAC9C,MAAMqxB,EAAM9f,EAAGd,SACT6gB,EAAM9f,EAAGf,SACf,GAAI,YAAQ4gB,IAAQ,YAAQC,GACxB,IAAK,IAAIxzB,EAAI,EAAGA,EAAIuzB,EAAIh0B,OAAQS,IAAK,CAGjC,MAAM0wB,EAAK6C,EAAIvzB,GACf,IAAI4wB,EAAK4C,EAAIxzB,GACM,EAAf4wB,EAAGhf,YAAgCgf,EAAGpI,mBAClCoI,EAAGjQ,WAAa,GAAsB,KAAjBiQ,EAAGjQ,aACxBiQ,EAAK4C,EAAIxzB,GAAKssB,GAAekH,EAAIxzB,IACjC4wB,EAAGvd,GAAKqd,EAAGrd,IAEVnR,GACDyrB,GAAuB+C,EAAIE,KAqD/C,MACMmC,GAAsB1nB,GAAUA,IAAUA,EAAMooB,UAA+B,KAAnBpoB,EAAMooB,UAClEC,GAAgB,CAACroB,EAAOsoB,KAC1B,MAAMC,EAAiBvoB,GAASA,EAAMwoB,GACtC,GAAI,YAASD,GAAiB,CAC1B,GAAKD,EAMA,CACD,MAAMtzB,EAASszB,EAAOC,GAQtB,OAAOvzB,EAXP,OAAO,KAkBX,OAAOuzB,GAmGf,SAASE,GAAaxpB,EAAOqJ,EAAW0d,GAAgBld,GAAG,OAAEiT,GAAUnR,EAAGC,GAAQuc,EAAW,GAExE,IAAbA,GACArL,EAAO9c,EAAMypB,aAAcpgB,EAAW0d,GAE1C,MAAM,GAAEhe,EAAE,OAAEO,EAAM,UAAEhC,EAAS,SAAEe,EAAQ,MAAEtH,GAAUf,EAC7C0pB,EAAyB,IAAbvB,EAQlB,GANIuB,GACA5M,EAAO/T,EAAIM,EAAW0d,KAKrB2C,GAAajB,GAAmB1nB,KAEjB,GAAZuG,EACA,IAAK,IAAI5R,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IACjCkW,EAAKvD,EAAS3S,GAAI2T,EAAW0d,EAAc,GAKnD2C,GACA5M,EAAOxT,EAAQD,EAAW0d,GAyBlC,MAAM4C,GAjJe,CACjBC,cAAc,EACd,QAAQzgB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,EAAWyX,GAClF,MAAQ0H,GAAIrH,EAAesH,GAAIlG,EAAemG,IAAKpG,EAAoB9Y,GAAG,OAAEiT,EAAM,cAAE+M,EAAa,WAAEjK,EAAU,cAAE7C,IAAoBoE,EAC7HgI,EAAWV,GAAmBrf,EAAGrI,QACjC,UAAEuG,EAAS,SAAEe,GAAae,EAChC,GAAU,MAAND,EAAY,CAEZ,MAAM6D,EAAe5D,EAAGL,GAElB6W,EAAW,IACXkK,EAAc1gB,EAAGE,OAEjBsW,EAAW,IACjB9C,EAAO9P,EAAa3D,EAAWC,GAC/BwT,EAAOgN,EAAYzgB,EAAWC,GAC9B,MAAMvT,EAAUqT,EAAGrT,OAASqzB,GAAchgB,EAAGrI,MAAO8oB,GAC9CJ,EAAgBrgB,EAAGqgB,aAAe7J,EAAW,IAC/C7pB,GACA+mB,EAAO2M,EAAc1zB,GAKzB,MAAMg0B,EAAQ,CAAC1gB,EAAWC,KAGN,GAAZhC,GACAka,EAAcnZ,EAAUgB,EAAWC,EAAQC,EAAiBC,EAAgBC,EAAOC,IAGvFyf,EACAY,EAAM1gB,EAAWygB,GAEZ/zB,GACLg0B,EAAMh0B,EAAQ0zB,OAGjB,CAEDrgB,EAAGL,GAAKI,EAAGJ,GACX,MAAM+gB,EAAc1gB,EAAGE,OAASH,EAAGG,OAC7BvT,EAAUqT,EAAGrT,OAASoT,EAAGpT,OACzB0zB,EAAgBrgB,EAAGqgB,aAAetgB,EAAGsgB,aACrCO,EAAcvB,GAAmBtf,EAAGpI,OACpCkpB,EAAmBD,EAAc3gB,EAAYtT,EAC7Cm0B,EAAgBF,EAAcF,EAAaL,EAYjD,GAXIrgB,EAAG8U,iBAEHyE,EAAmBxZ,EAAG+U,gBAAiB9U,EAAG8U,gBAAiB+L,EAAkB1gB,EAAiBC,EAAgBC,GAI9G4Z,GAAuBla,EAAIC,GAAI,IAEzBM,GACNkZ,EAAczZ,EAAIC,EAAI6gB,EAAkBC,EAAe3gB,EAAiBC,EAAgBC,GAExF0f,EACKa,GAGDR,GAAapgB,EAAIC,EAAWygB,EAAY3I,EAAW,QAKvD,IAAK/X,EAAGrI,OAASqI,EAAGrI,MAAMwoB,OAASpgB,EAAGpI,OAASoI,EAAGpI,MAAMwoB,IAAK,CACzD,MAAMY,EAAc/gB,EAAGrT,OAASqzB,GAAchgB,EAAGrI,MAAO8oB,GACpDM,GACAX,GAAapgB,EAAI+gB,EAAY,KAAMhJ,EAAW,QAM7C6I,GAGLR,GAAapgB,EAAIrT,EAAQ0zB,EAActI,EAAW,KAKlE,OAAOnhB,GAAS5C,EAAG0O,EAAQjC,GAAKiC,OAAQyT,KACpC,MAAM,UAAEjY,EAAS,SAAEe,EAAQ,OAAEiB,GAAWtJ,EAExC,GADAuf,EAAWjW,GACK,GAAZhC,EACA,IAAK,IAAI5R,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IACjCoW,EAAOzD,EAAS3S,KAI5BkW,KAAM4d,GACNne,QA6BJ,SAAyBC,EAAMtL,EAAOuJ,EAAiBC,EAAgBE,GAAaG,GAAG,YAAEgT,EAAW,WAAErR,EAAU,cAAEqe,IAAmB7L,GACjI,MAAMjoB,EAAUiK,EAAMjK,OAASqzB,GAAcppB,EAAMe,MAAO8oB,GAC1D,GAAI9zB,EAAQ,CAGR,MAAMq0B,EAAar0B,EAAOs0B,MAAQt0B,EAAOyoB,WACnB,GAAlBxe,EAAMsH,YACFmhB,GAAmBzoB,EAAMe,QACzBf,EAAMsJ,OAAS0U,EAAgBnB,EAAYvR,GAAOtL,EAAOwL,EAAWF,GAAO/B,EAAiBC,EAAgBE,GAC5G1J,EAAMypB,aAAeW,IAGrBpqB,EAAMsJ,OAASuT,EAAYvR,GAC3BtL,EAAMypB,aAAezL,EAAgBoM,EAAYpqB,EAAOjK,EAAQwT,EAAiBC,EAAgBE,IAErG3T,EAAOs0B,KACHrqB,EAAMypB,cAAgB5M,EAAY7c,EAAMypB,eAGpD,OAAOzpB,EAAMsJ,QAAUuT,EAAY7c,EAAMsJ,UAU7C,SAASghB,GAAiB7oB,GACtB,OAAO8oB,GANQ,aAMiB9oB,IAASA,EAE7C,MAAM+oB,GAAyBx2B,SAI/B,SAASy2B,GAAwBjrB,GAC7B,OAAI,YAASA,GACF+qB,GAdI,aAcqB/qB,GAAW,IAAUA,EAI7CA,GAAagrB,GAM7B,SAASE,GAAiBjpB,GACtB,OAAO8oB,GAxBQ,aAwBiB9oB,GAGpC,SAAS8oB,GAAav0B,EAAMyL,EAAMkpB,GAAc,GAC5C,MAAMprB,EAAWgH,IAA4BiK,GAC7C,GAAIjR,EAAU,CACV,MAAMmH,EAAYnH,EAASvJ,KAE3B,GAjCW,eAiCPA,EAAqB,CACrB,MAAM40B,EAAWlkB,EAAU4R,aAAe5R,EAAUjF,KACpD,GAAImpB,IACCA,IAAanpB,GACVmpB,IAAa,YAASnpB,IACtBmpB,IAAa,YAAW,YAASnpB,KACrC,OAAOiF,EAYf,OANApD,GAAQ/D,EAASvJ,IAAS0Q,EAAU1Q,GAAOyL,IAEvC6B,GAAQ/D,EAASG,WAAW1J,GAAOyL,IAW/C,SAAS6B,GAAQunB,EAAUppB,GACvB,OAAQopB,IACHA,EAASppB,IACNopB,EAAS,YAASppB,KAClBopB,EAAS,YAAW,YAASppB,MAGzC,MAAMoM,GAAW7Z,YAA8DU,GACzE2oB,GAAOrpB,YAA0DU,GACjEyT,GAAUnU,YAA6DU,GACvE4oB,GAAStpB,YAA4DU,GAMrEo2B,GAAa,GACnB,IAAIC,GAAe,KAiBnB,SAASpd,GAAUqd,GAAkB,GACjCF,GAAWj2B,KAAMk2B,GAAeC,EAAkB,KAAO,IAE7D,SAAS9c,KACL4c,GAAW/1B,MACXg2B,GAAeD,GAAWA,GAAW71B,OAAS,IAAM,KAMxD,IAoDIg2B,GApDA,GAAc,EAiBlB,SAASC,GAAiB9yB,GACtB,IAAeA,EASnB,SAASwV,GAAY5X,EAAM+K,EAAOsH,EAAUgO,EAAWmM,GACnD,MAAMxiB,EAAQkI,GAAYlS,EAAM+K,EAAOsH,EAAUgO,EAAWmM,GAAc,GAU1E,OARAxiB,EAAMke,gBAAkB6M,IAAgB,IAExC7c,KAGI,GAAc,GAAK6c,IACnBA,GAAal2B,KAAKmL,GAEfA,EAEX,SAASwI,GAAQpQ,GACb,QAAOA,IAA8B,IAAtBA,EAAM+yB,YAEzB,SAASrgB,GAAgB3B,EAAIC,GAOzB,OAAOD,EAAGnT,OAASoT,EAAGpT,MAAQmT,EAAGlT,MAAQmT,EAAGnT,IAShD,SAASm1B,GAAmBC,GACxBJ,GAAuBI,EAE3B,MAKM9G,GAAoB,cACpB+G,GAAe,EAAGr1B,SAAiB,MAAPA,EAAcA,EAAM,KAChDs1B,GAAe,EAAGxtB,SACL,MAAPA,EACF,YAAQA,GACJA,EACA,CAAErI,EAAG6Q,GAA0BnJ,EAAGW,GACtC,KAEJmK,GAEAsjB,GACN,SAASA,GAAax1B,EAAM+K,EAAQ,KAAMsH,EAAW,KAAMgO,EAAY,EAAGmM,EAAe,KAAMiJ,GAAc,GAOzG,GANKz1B,GAAQA,IAASw0B,KAIlBx0B,EAAOmS,IAEPK,GAAQxS,GAAO,CAIf,MAAM01B,EAAS5jB,GAAW9R,EAAM+K,GAAO,GAIvC,OAHIsH,GACAsjB,GAAkBD,EAAQrjB,GAEvBqjB,EAOX,GAJIE,GAAiB51B,KACjBA,EAAOA,EAAK61B,WAGZ9qB,EAAO,EAEH/D,GAAQ+D,IAAUwjB,MAAqBxjB,KACvCA,EAAQ,YAAO,GAAIA,IAEvB,IAAMshB,MAAOyJ,EAAK,MAAExJ,GAAUvhB,EAC1B+qB,IAAU,YAASA,KACnB/qB,EAAMshB,MAAQ,YAAeyJ,IAE7B,YAASxJ,KAGLtlB,GAAQslB,KAAW,YAAQA,KAC3BA,EAAQ,YAAO,GAAIA,IAEvBvhB,EAAMuhB,MAAQ,YAAeA,IAIrC,MAAMhb,EAAY,YAAStR,GACrB,EA3lIS,CAACA,GAASA,EAAKkT,aA4lIvB6iB,CAAW/1B,GACR,IAnZK,CAACA,GAASA,EAAK4zB,aAoZpBoC,CAAWh2B,GACP,GACA,YAASA,GACL,EACA,YAAWA,GACP,EACA,EAQtB,MAAMgK,EAAQ,CACVmrB,aAAa,EACb,UAAyB,EACzBn1B,OACA+K,QACA9K,IAAK8K,GAASuqB,GAAavqB,GAC3BhD,IAAKgD,GAASwqB,GAAaxqB,GAC3BugB,QAASlT,GACT/F,SAAU,KACV7I,UAAW,KACXwK,SAAU,KACVG,UAAW,KACXC,WAAY,KACZrC,KAAM,KACNE,WAAY,KACZc,GAAI,KACJO,OAAQ,KACRvT,OAAQ,KACR0zB,aAAc,KACdjM,YAAa,EACblW,YACA+O,YACAmM,eACAtE,gBAAiB,KACjBxe,WAAY,MAQhB,GAFAisB,GAAkB3rB,EAAOqI,GAER,IAAZf,EAAgC,CACjC,MAAM,QAAE2kB,EAAO,SAAE9gB,GAhyHzB,SAAmCnL,GAC/B,MAAM,UAAEsH,EAAS,SAAEe,GAAarI,EAChC,IAAIisB,EACA9gB,EASJ,OARgB,GAAZ7D,GACA2kB,EAAU/e,GAAsB7E,EAAS8G,SACzChE,EAAW+B,GAAsB7E,EAAS8C,YAG1C8gB,EAAU/e,GAAsB7E,GAChC8C,EAAW3D,GAAe,OAEvB,CACHykB,UACA9gB,YAkxH8B+gB,CAA0BlsB,GACxDA,EAAMmK,UAAY8hB,EAClBjsB,EAAMoK,WAAae,EAiBvB,OAfI,GAAc,IAEbsgB,GAEDV,KAKC1U,EAAY,GAAiB,EAAZ/O,IAGJ,KAAd+O,GACA0U,GAAal2B,KAAKmL,GAEfA,EAEX,SAAS8H,GAAW9H,EAAOmsB,EAAYC,GAAW,GAG9C,MAAM,MAAErrB,EAAK,IAAEhD,EAAG,UAAEsY,GAAcrW,EAC5BqsB,EAAcF,EAAaG,GAAWvrB,GAAS,GAAIorB,GAAcprB,EACvE,MAAO,CACHoqB,aAAa,EACb,UAAyB,EACzBn1B,KAAMgK,EAAMhK,KACZ+K,MAAOsrB,EACPp2B,IAAKo2B,GAAef,GAAae,GACjCtuB,IAAKouB,GAAcA,EAAWpuB,IAItBquB,GAAYruB,EACN,YAAQA,GACJA,EAAIiK,OAAOujB,GAAaY,IACxB,CAACpuB,EAAKwtB,GAAaY,IACvBZ,GAAaY,GACrBpuB,EACNujB,QAASthB,EAAMshB,QACfjZ,SAAUrI,EAAMqI,SAChBtS,OAAQiK,EAAMjK,OACd0zB,aAAczpB,EAAMypB,aACpBjM,YAAaxd,EAAMwd,YACnBlW,UAAWtH,EAAMsH,UAKjB+O,UAAW8V,GAAcnsB,EAAMhK,OAAS6X,IACnB,IAAfwI,EACI,GACY,GAAZA,EACJA,EACNmM,aAAcxiB,EAAMwiB,aACpBtE,gBAAiBle,EAAMke,gBACvBxe,WAAYM,EAAMN,WAClBqI,KAAM/H,EAAM+H,KACZE,WAAYjI,EAAMiI,WAKlBzI,UAAWQ,EAAMR,UACjBwK,SAAUhK,EAAMgK,SAChBG,UAAWnK,EAAMmK,WAAarC,GAAW9H,EAAMmK,WAC/CC,WAAYpK,EAAMoK,YAActC,GAAW9H,EAAMoK,YACjDrB,GAAI/I,EAAM+I,GACVO,OAAQtJ,EAAMsJ,QAMtB,SAASijB,GAAgBC,EAAO,IAAKC,EAAO,GACxC,OAAOvkB,GAAYmV,GAAM,KAAMmP,EAAMC,GAKzC,SAASC,GAAkBT,EAASU,GAGhC,MAAM3sB,EAAQkI,GAAYoV,GAAQ,KAAM2O,GAExC,OADAjsB,EAAMwd,YAAcmP,EACb3sB,EAKX,SAAS4sB,GAAmBJ,EAAO,GAGnCK,GAAU,GACN,OAAOA,GACAlf,KAAaC,GAAYzF,GAAS,KAAMqkB,IACzCtkB,GAAYC,GAAS,KAAMqkB,GAErC,SAAShlB,GAAee,GACpB,OAAa,MAATA,GAAkC,kBAAVA,EAEjBL,GAAYC,IAEd,YAAQI,GAENL,GAAY2F,GAAU,KAAMtF,GAEb,iBAAVA,EAGQ,OAAbA,EAAMQ,GAAcR,EAAQT,GAAWS,GAIvCL,GAAYmV,GAAM,KAAMtN,OAAOxH,IAI9C,SAASyZ,GAAezZ,GACpB,OAAoB,OAAbA,EAAMQ,GAAcR,EAAQT,GAAWS,GAElD,SAASojB,GAAkB3rB,EAAOqI,GAC9B,IAAIrS,EAAO,EACX,MAAM,UAAEsR,GAActH,EACtB,GAAgB,MAAZqI,EACAA,EAAW,UAEV,GAAI,YAAQA,GACbrS,EAAO,QAEN,GAAwB,iBAAbqS,EAAuB,CACnC,GAAgB,EAAZf,GAA2C,GAAZA,EAA+B,CAE9D,MAAMmG,EAAOpF,EAAS8G,QAOtB,YANI1B,IAEAA,EAAKU,IAAMZ,GAAyB,GACpCoe,GAAkB3rB,EAAOyN,KACzBA,EAAKU,IAAMZ,IAA0B,KAIxC,CACDvX,EAAO,GACP,MAAM82B,EAAWzkB,EAASyF,EACrBgf,GAAcvI,MAAqBlc,EAGlB,IAAbykB,GAAkCvmB,KAGQ,KAA3CA,GAAyBvG,MAAMqW,WAC/BhO,EAASyF,EAAI,EACb9N,EAAMqW,WAAa,MAGnBhO,EAASyF,EAAI,GAVjBzF,EAASmR,KAAOjT,SAenB,YAAW8B,IAChBA,EAAW,CAAE8G,QAAS9G,EAAUmR,KAAMjT,IACtCvQ,EAAO,KAGPqS,EAAW0H,OAAO1H,GAEF,GAAZf,GACAtR,EAAO,GACPqS,EAAW,CAACkkB,GAAgBlkB,KAG5BrS,EAAO,GAGfgK,EAAMqI,SAAWA,EACjBrI,EAAMsH,WAAatR,EAEvB,SAASs2B,MAAc5zB,GACnB,MAAMiG,EAAM,YAAO,GAAIjG,EAAK,IAC5B,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAKzD,OAAQS,IAAK,CAClC,MAAMq3B,EAAUr0B,EAAKhD,GACrB,IAAK,MAAMO,KAAO82B,EACd,GAAY,UAAR92B,EACI0I,EAAI0jB,QAAU0K,EAAQ1K,QACtB1jB,EAAI0jB,MAAQ,YAAe,CAAC1jB,EAAI0jB,MAAO0K,EAAQ1K,cAGlD,GAAY,UAARpsB,EACL0I,EAAI2jB,MAAQ,YAAe,CAAC3jB,EAAI2jB,MAAOyK,EAAQzK,aAE9C,GAAI,YAAKrsB,GAAM,CAChB,MAAM+2B,EAAWruB,EAAI1I,GACfg3B,EAAWF,EAAQ92B,GACrB+2B,IAAaC,IACbtuB,EAAI1I,GAAO+2B,EACL,GAAGhlB,OAAOglB,EAAUD,EAAQ92B,IAC5Bg3B,QAIVtuB,EAAI1I,GAAO82B,EAAQ92B,GAI/B,OAAO0I,EAGX,SAASud,GAAQjmB,EAAKmC,GAClB,GAAKoY,GAKA,CACD,IAAIsK,EAAWtK,GAAgBsK,SAM/B,MAAMoS,EAAiB1c,GAAgBrQ,QAAUqQ,GAAgBrQ,OAAO2a,SACpEoS,IAAmBpS,IACnBA,EAAWtK,GAAgBsK,SAAW5jB,OAAOwU,OAAOwhB,IAGxDpS,EAAS7kB,GAAOmC,OAhBZ,EAmBZ,SAAS+0B,GAAOl3B,EAAKiZ,EAAcke,GAAwB,GAGvD,MAAM7tB,EAAWiR,IAAmBjK,GACpC,GAAIhH,EAAU,CACV,MAAMub,EAAWvb,EAASub,SAC1B,GAAI7kB,KAAO6kB,EAEP,OAAOA,EAAS7kB,GAEf,GAAIwY,UAAUxZ,OAAS,EACxB,OAAOm4B,GAAyB,YAAWle,GACrCA,IACAA,OAML,EAgBb,IAAIme,IAAmB,EACvB,SAASC,GAAa/tB,EAAUpL,EAASo5B,EAAe,GAAIC,EAAgB,GAAIC,EAAkB,GAAI9nB,GAAU,GAC5G,MAAM,OAENO,EAAQC,QAASunB,EAEjBxmB,KAAMymB,EAAaC,SAAUC,EAAe,QAAEC,EAASjc,MAAOkc,EAAc7R,QAAS8R,EAAgBb,OAAQc,EAAa,WAE1HpT,EAAU,WAAElB,EAAU,YAEtBuU,EAAW,QAAElU,EAAO,aAAEmU,EAAY,QAAElU,EAAO,UAAEmU,EAAS,YAAEC,EAAW,cAAEC,EAAa,cAAEC,EAAa,UAAEC,EAAS,UAAEC,EAAS,OAAEznB,EAAM,cAAE0nB,EAAa,gBAAEC,EAAe,cAAEC,GAAkBz6B,EAC7K4e,EAAaxT,EAAS1C,MACtBuK,EAAM7H,EAAS6H,IACfynB,EAAetvB,EAASG,WAAWwG,OACrCP,GAAWqB,GAAUzH,EAASyH,SAAW,MACzCzH,EAASyH,OAASA,GAGjBrB,IACD0nB,IAAmB,EACnByB,GAAa,eAAgB,KAA0B36B,EAASoL,EAAUsvB,GAC1ExB,IAAmB,EAEnB0B,GAAYxvB,EAAUsvB,EAActB,EAAcC,EAAeC,IAGjEC,GACAJ,GAAa/tB,EAAUmuB,EAAgBH,EAAcC,EAAeC,GAAiB,GAGrFvnB,GACA6oB,GAAYxvB,EAAU2G,EAAQqnB,EAAcC,EAAeC,GAkB/D,GAAIQ,EACA,GAAI,YAAQA,GACR,IAAK,IAAIv4B,EAAI,EAAGA,EAAIu4B,EAAch5B,OAAQS,IAAK,CAC3C,MAAMO,EAAMg4B,EAAcv4B,GAC1B0R,EAAInR,GAAOk3B,GAAOl3B,QAOtB,IAAK,MAAMA,KAAOg4B,EAAe,CAC7B,MAAMjf,EAAMif,EAAch4B,GACtB,YAAS+Y,GACT5H,EAAInR,GAAOk3B,GAAOne,EAAIggB,MAAQ/4B,EAAK+Y,EAAIG,SAAS,GAGhD/H,EAAInR,GAAOk3B,GAAOne,GAQlC,GAAI8e,EACA,IAAK,MAAM73B,KAAO63B,EAAS,CACvB,MAAMmB,EAAgBnB,EAAQ73B,GAC1B,YAAWg5B,KACX7nB,EAAInR,GAAOg5B,EAAcrrB,KAAKmP,IAqC1C,GA1BKpN,EAuBIgoB,GACLJ,EAAa14B,KAAK84B,IAvBdJ,EAAat4B,QACbs4B,EAAav2B,QAAQk4B,GAAUC,GAAY5vB,EAAU2vB,EAAQnc,IAE7D4a,GACAwB,GAAY5vB,EAAUouB,EAAa5a,IAqBvC8a,EACA,IAAK,MAAM53B,KAAO43B,EAAiB,CAC/B,MAAM7e,EAAM6e,EAAgB53B,GAMxB,EAGJ,MAOM4tB,EAAI,GAAS,CACf1tB,IAhBQ,YAAW6Y,GACjBA,EAAIpL,KAAKmP,EAAYA,GACrB,YAAW/D,EAAI7Y,KACX6Y,EAAI7Y,IAAIyN,KAAKmP,EAAYA,GACzB,IAaN3c,KATS,YAAW4Y,IAAQ,YAAWA,EAAI5Y,KACzC4Y,EAAI5Y,IAAIwN,KAAKmP,GAKT,MAKV7b,OAAOk4B,eAAehoB,EAAKnR,EAAK,CAC5Bo5B,YAAY,EACZC,cAAc,EACdn5B,IAAK,IAAM0tB,EAAEzrB,MACbhC,IAAK2D,GAAM8pB,EAAEzrB,MAAQ2B,IAO7Bg0B,GACAP,EAAc34B,KAAKk5B,IAElBpoB,GAAW6nB,EAAcv4B,QAC1Bu4B,EAAcx2B,QAAQ+2B,IAClB,IAAK,MAAM93B,KAAO83B,EACdwB,GAAcxB,EAAa93B,GAAMmR,EAAK2L,EAAY9c,KAI1D+3B,GACAP,EAAgB54B,KAAKm5B,IAEpBroB,GAAW8nB,EAAgBx4B,QAC5Bw4B,EAAgBz2B,QAAQg3B,IACpB,MAAMlT,EAAW,YAAWkT,GACtBA,EAAe1zB,KAAKyY,GACpBib,EACN,IAAK,MAAM/3B,KAAO6kB,EACdoB,GAAQjmB,EAAK6kB,EAAS7kB,MAO9B0P,IACIkV,GACA,YAAOtb,EAASsb,aACXtb,EAASsb,WAAa,YAAO,GAAItb,EAASvJ,KAAK6kB,aAAcA,GAElElB,GACA,YAAOpa,EAASoa,aACXpa,EAASoa,WAAa,YAAO,GAAIpa,EAASvJ,KAAK2jB,aAAcA,IAIrEhU,GACDmpB,GAAa,UAAW,IAAmB36B,EAASoL,EAAUsvB,GAE9DX,GACAjd,GAAcid,EAAYtqB,KAAKmP,IAE/BiH,GACA9I,GAAU8I,EAAQpW,KAAKmP,IAEvBob,GACAhd,GAAegd,EAAavqB,KAAKmP,IAEjCkH,GACA7I,GAAU6I,EAAQrW,KAAKmP,IAEvBqb,GACAzV,GAAYyV,EAAUxqB,KAAKmP,IAE3Bsb,GACAxV,GAAcwV,EAAYzqB,KAAKmP,IAE/B6b,GACAnd,GAAgBmd,EAAchrB,KAAKmP,IAEnC2b,GACAld,GAAgBkd,EAAc9qB,KAAKmP,IAEnC4b,GACApd,GAAkBod,EAAgB/qB,KAAKmP,IAKvCwb,GACAld,GAAgBkd,EAAc3qB,KAAKmP,IAKnC0b,GACAnd,GAAYmd,EAAU7qB,KAAKmP,IAGnC,SAAS+b,GAAartB,EAAMzL,EAAM7B,EAASoL,EAAUsvB,GACjDW,GAAmB/tB,EAAMzL,EAAM64B,EAActvB,GAC7C,MAAQ4G,QAASspB,EAAI,OAAEvpB,GAAW/R,EAC9Bs7B,GAWR,SAASC,EAAoBjuB,EAAMzL,EAAMy5B,EAAMlwB,GACvCkwB,EAAKtpB,SACLupB,EAAoBjuB,EAAMzL,EAAMy5B,EAAKtpB,QAAS5G,GAElD,MAAMowB,EAAWF,EAAKhuB,GAClBkuB,GACA/tB,GAA2B+tB,EAAS/rB,KAAKrE,EAAS1C,OAAQ0C,EAAUvJ,GAhBpE05B,CAAoBjuB,EAAMzL,EAAMy5B,EAAMlwB,GAEtC2G,GACAspB,GAAmB/tB,EAAMzL,EAAMkQ,EAAQ3G,GAE3C,MAAMqwB,EAAWz7B,EAAQsN,GACrBmuB,GACAhuB,GAA2BguB,EAAShsB,KAAKrE,EAAS1C,OAAQ0C,EAAUvJ,GAY5E,SAASw5B,GAAmB/tB,EAAMzL,EAAMkQ,EAAQ3G,GAC5C,IAAK,IAAI7J,EAAI,EAAGA,EAAIwQ,EAAOjR,OAAQS,IAAK,CACpC,MAAMm6B,EAAgB3pB,EAAOxQ,GAAGwQ,OAC5B2pB,GACAL,GAAmB/tB,EAAMzL,EAAM65B,EAAetwB,GAElD,MAAMrL,EAAKgS,EAAOxQ,GAAG+L,GACjBvN,GACA0N,GAA2B1N,EAAG0P,KAAKrE,EAAS1C,OAAQ0C,EAAUvJ,IAI1E,SAAS+4B,GAAYxvB,EAAU2G,EAAQqnB,EAAcC,EAAeC,GAChE,IAAK,IAAI/3B,EAAI,EAAGA,EAAIwQ,EAAOjR,OAAQS,IAC/B43B,GAAa/tB,EAAU2G,EAAOxQ,GAAI63B,EAAcC,EAAeC,GAAiB,GAGxF,SAAS0B,GAAY5vB,EAAU2vB,EAAQnc,GAKnC,MAAM7L,EAAOgoB,EAAO50B,KAAKyY,EAAYA,GAMhC,YAAS7L,KAGL3H,EAAS2H,OAAS,IACvB3H,EAAS2H,KAAO5O,GAAS4O,GAIzB,YAAO3H,EAAS2H,KAAMA,IAG9B,SAASqoB,GAAcj7B,EAAK8S,EAAK2L,EAAY9c,GACzC,MAAMgJ,EAAShJ,EAAItB,SAAS,KAmChC,SAA0ByS,EAAK0oB,GAC3B,MAAMC,EAAWD,EAAKtX,MAAM,KAC5B,MAAO,KACH,IAAIxW,EAAMoF,EACV,IAAK,IAAI1R,EAAI,EAAGA,EAAIq6B,EAAS96B,QAAU+M,EAAKtM,IACxCsM,EAAMA,EAAI+tB,EAASr6B,IAEvB,OAAOsM,GAzCLguB,CAAiBjd,EAAY9c,GAC7B,IAAM8c,EAAW9c,GACvB,GAAI,YAAS3B,GAAM,CACf,MAAMgR,EAAU8B,EAAI9S,GAChB,YAAWgR,IACXuM,GAAM5S,EAAQqG,QAMjB,GAAI,YAAWhR,GAChBud,GAAM5S,EAAQ3K,EAAIsP,KAAKmP,SAEtB,GAAI,YAASze,GACd,GAAI,YAAQA,GACRA,EAAI0C,QAAQoG,GAAKmyB,GAAcnyB,EAAGgK,EAAK2L,EAAY9c,QAElD,CACD,MAAMqP,EAAU,YAAWhR,EAAIgR,SACzBhR,EAAIgR,QAAQ1B,KAAKmP,GACjB3L,EAAI9S,EAAIgR,SACV,YAAWA,IACXuM,GAAM5S,EAAQqG,EAAShR,QAO1B,EA2Bb,SAAS27B,GAAa1G,EAAIyF,EAAMzvB,GAC5B,MAAM2wB,EAAS3wB,EAASG,WAAWC,OAAOgb,uBACpC,OAAEzU,EAAQC,QAASunB,GAAmBsB,EAC5CtB,GAAkBuC,GAAa1G,EAAImE,EAAgBnuB,GACnD2G,GACIA,EAAOlP,QAAS2U,GAAMskB,GAAa1G,EAAI5d,EAAGpM,IAC9C,IAAK,MAAMtJ,KAAO+4B,EACVkB,GAAU,YAAOA,EAAQj6B,GACzBszB,EAAGtzB,GAAOi6B,EAAOj6B,GAAKszB,EAAGtzB,GAAM+4B,EAAK/4B,GAAMsJ,EAAS1C,MAAO5G,GAG1DszB,EAAGtzB,GAAO+4B,EAAK/4B,GAK3B,MAAMk6B,GAAsB,YAAOj5B,OAAOwU,OAAO,MAAO,CACpD0kB,EAAG16B,GAAKA,EACR26B,IAAK36B,GAAKA,EAAEsK,MAAM+I,GAClBunB,MAAO56B,GAAKA,EAAEwR,KACdqpB,OAAQ76B,GAA2EA,EAAEqL,MACrFyvB,OAAQ96B,GAA2EA,EAAEoR,MACrF2pB,OAAQ/6B,GAA2EA,EAAEmR,MACrF6pB,MAAOh7B,GAA0EA,EAAEspB,KACnF2R,QAASj7B,GAAKA,EAAEyK,QAAUzK,EAAEyK,OAAOtD,MACnC+zB,MAAOl7B,GAAKA,EAAEgS,MAAQhS,EAAEgS,KAAK7K,MAC7Bg0B,MAAOn7B,GAAKA,EAAEqR,KACd+pB,SAAUp7B,GAxCd,SAA8B6J,GAC1B,MAAMjL,EAAMiL,EAASvJ,MACf,SAAE+6B,EAAQ,OAAE7qB,EAAQC,QAASunB,GAAmBp5B,EACtD,GAAIy8B,EACA,OAAOA,EACX,MAAMlC,EAAetvB,EAASG,WAAWwG,OACzC,IAAK2oB,EAAa55B,SAAWiR,IAAWwnB,EACpC,OAAOp5B,EACX,MAAMH,EAAU,GAGhB,OAFA06B,EAAa73B,QAAQ2U,GAAKskB,GAAa97B,EAASwX,EAAGpM,IACnD0wB,GAAa97B,EAASG,EAAKiL,GACnBjL,EAAIy8B,SAAW58B,EA6Be68B,CAAqBt7B,GAC3Du7B,aAAcv7B,GAAK,IAAMmO,GAASnO,EAAEyf,QACpC+b,UAAWx7B,GAAK+N,GAASG,KAAKlO,EAAEmH,OAChCs0B,OAAQz7B,GAA4Bod,GAAclP,KAAKlO,KAErDivB,GAA8B,CAChC,KAAM7W,EAAGvO,GAAYtJ,GACjB,MAAM,IAAEmR,EAAG,WAAED,EAAU,KAAED,EAAI,MAAEnG,EAAK,YAAE2iB,EAAW,KAAE1tB,EAAI,WAAE0J,GAAeH,EAExE,GAAY,aAARtJ,EACA,OAAO,EAYX,IAAIm7B,EACJ,GAAe,MAAXn7B,EAAI,GAAY,CAChB,MAAM4V,EAAI6X,EAAYztB,GACtB,QAAUvB,IAANmX,EACA,OAAQA,GACJ,KAAK,EACD,OAAO1E,EAAWlR,GACtB,KAAK,EACD,OAAOiR,EAAKjR,GAChB,KAAK,EACD,OAAOmR,EAAInR,GACf,KAAK,EACD,OAAO8K,EAAM9K,OAIpB,IAAIkR,IAAe,KAAa,YAAOA,EAAYlR,GAEpD,OADAytB,EAAYztB,GAAO,EACZkR,EAAWlR,GAEjB,GAAIiR,IAAS,KAAa,YAAOA,EAAMjR,GAExC,OADAytB,EAAYztB,GAAO,EACZiR,EAAKjR,GAEX,IAGJm7B,EAAkB7xB,EAASqH,aAAa,KACrC,YAAOwqB,EAAiBn7B,GAExB,OADAytB,EAAYztB,GAAO,EACZ8K,EAAM9K,GAEZ,GAAImR,IAAQ,KAAa,YAAOA,EAAKnR,GAEtC,OADAytB,EAAYztB,GAAO,EACZmR,EAAInR,GAEmBo3B,KAC9B3J,EAAYztB,GAAO,IAG3B,MAAMo7B,EAAelB,GAAoBl6B,GACzC,IAAIq7B,EAAW5W,EAEf,OAAI2W,GACY,WAARp7B,GACAH,EAAMyJ,EAAU,EAAiBtJ,GAG9Bo7B,EAAa9xB,KAIvB+xB,EAAYt7B,EAAKu7B,gBACbD,EAAYA,EAAUr7B,IAChBq7B,EAEFlqB,IAAQ,KAAa,YAAOA,EAAKnR,IAEtCytB,EAAYztB,GAAO,EACZmR,EAAInR,KAIbykB,EAAmBhb,EAAWC,OAAO+a,iBACnC,YAAOA,EAAkBzkB,GAClBykB,EAAiBzkB,QAJvB,IAwBT,KAAM6X,EAAGvO,GAAYtJ,EAAKmC,GACtB,MAAM,KAAE8O,EAAI,WAAEC,EAAU,IAAEC,GAAQ7H,EAClC,GAAI4H,IAAe,KAAa,YAAOA,EAAYlR,GAC/CkR,EAAWlR,GAAOmC,OAEjB,GAAI8O,IAAS,KAAa,YAAOA,EAAMjR,GACxCiR,EAAKjR,GAAOmC,OAEX,GAAInC,KAAOsJ,EAASwB,MAGrB,OAAO,EAEX,OAAe,MAAX9K,EAAI,MAAcA,EAAIoL,MAAM,KAAM9B,MAe9B6H,EAAInR,GAAOmC,GAGZ,IAEX,KAAM0V,GAAG,KAAE5G,EAAI,WAAEC,EAAU,YAAEuc,EAAW,IAAEtc,EAAG,WAAE1H,EAAU,aAAEkH,IAAkB3Q,GACzE,IAAIm7B,EACJ,YAA6B18B,IAArBgvB,EAAYztB,IACfiR,IAAS,KAAa,YAAOA,EAAMjR,IACnCkR,IAAe,KAAa,YAAOA,EAAYlR,KAC9Cm7B,EAAkBxqB,EAAa,KAAO,YAAOwqB,EAAiBn7B,IAChE,YAAOmR,EAAKnR,IACZ,YAAOk6B,GAAqBl6B,IAC5B,YAAOyJ,EAAWC,OAAO+a,iBAAkBzkB,KAUvD,MAAMu7B,GAA6C,YAAO,GAAI7M,GAA6B,CACvF,IAAI5uB,EAAQE,GAER,GAAIA,IAAQjC,OAAOy9B,YAGnB,OAAO9M,GAA4BxuB,IAAIJ,EAAQE,EAAKF,IAExDS,IAAG,CAACsX,EAAG7X,IACoB,MAAXA,EAAI,KAAe,YAAsBA,KAyE7D,MAAMutB,GAAkBlJ,KACxB,IAAImJ,GAAQ,EA6EZ,IAAIjT,GAAkB,KACtB,MAAM6D,GAAqB,IAAM7D,IAAmBjK,GAC9C8I,GAAsB9P,IACxBiR,GAAkBjR,GAStB,IAgGImyB,GAhGA1gB,IAAwB,EAuE5B,SAASjE,GAAkBxN,EAAUmlB,EAAaL,GAC1C,YAAWK,GAEXnlB,EAASyH,OAAS0d,EAEb,YAASA,KAUdnlB,EAAS4H,WAAajJ,GAAUwmB,IAQpCK,GAAqBxlB,GAOzB,SAASoyB,GAAwBC,GAC7BF,GAAUE,EAEd,SAAS7M,GAAqBxlB,EAAU8kB,GACpC,MAAM3d,EAAYnH,EAASvJ,KAEtBuJ,EAASyH,SAEN0qB,IAAWhrB,EAAUmrB,WAAanrB,EAAUM,SAI5CN,EAAUM,OAAS0qB,GAAQhrB,EAAUmrB,SAAU,CAC3CjX,gBAAiBrb,EAASG,WAAWC,OAAOib,gBAC5CkX,WAAYprB,EAAUorB,cAM9BvyB,EAASyH,OAAUN,EAAUM,QAAU,IAInCzH,EAASyH,OAAO+qB,MAChBxyB,EAASoH,UAAY,IAAI7J,MAAMyC,EAAS6H,IAAKoqB,MAKjDhhB,GAAkBjR,EAClB+tB,GAAa/tB,EAAUmH,GACvB8J,GAAkB,KA0D1B,SAASqC,GAA0Bte,GAC3Bic,KACCA,GAAgB1Z,UAAY0Z,GAAgB1Z,QAAU,KAAKjC,KAAKN,GAGzE,MAAMy9B,GAAa,kBAGnB,SAASzxB,GAAoBhB,EAAUmH,EAAW9F,GAAS,GACvD,IAAIa,EAAO,YAAWiF,IAChBA,EAAU4R,aACV5R,EAAUjF,KAChB,IAAKA,GAAQiF,EAAUurB,OAAQ,CAC3B,MAAM/hB,EAAQxJ,EAAUurB,OAAO/hB,MAAM,mBACjCA,IACAzO,EAAOyO,EAAM,IAGrB,IAAKzO,GAAQlC,GAAYA,EAASY,OAAQ,CAEtC,MAAM+xB,EAAqBrH,IACvB,IAAK,MAAM50B,KAAO40B,EACd,GAAIA,EAAS50B,KAASyQ,EAClB,OAAOzQ,GAInBwL,EACIywB,EAAkB3yB,EAASsb,YACvBtb,EAASY,OAAOnK,KAAK6kB,aAAeqX,EAAkB3yB,EAASG,WAAWmb,YAEtF,OAAOpZ,EAAgBA,EAzBG4E,QAAQ2rB,GAAYnO,GAAKA,EAAEsO,eAAe9rB,QAAQ,QAAS,IAyBtDzF,EAAS,MAAQ,YAEpD,SAASgrB,GAAiBxzB,GACtB,OAAO,YAAWA,IAAU,cAAeA,EAG/C,SAAS,GAASg6B,GACd,MAAMvO,EDh7KV,SAAkBuO,GACd,IAAInzB,EACAozB,EAaJ,OAZI,YAAWD,IACXnzB,EAASmzB,EACTC,EAIM,MAGNpzB,EAASmzB,EAAgBj8B,IACzBk8B,EAASD,EAAgBh8B,KAEtB,IAAI4I,GAAgBC,EAAQozB,EAAQ,YAAWD,KAAqBA,EAAgBh8B,KCi6KjF,CAAWg8B,GAErB,OADAvf,GAA0BgR,EAAEtvB,QACrBsvB,EAIX,SAASyO,GAAgBn+B,GACrB,OAAO,YAAWA,GAAW,CAAEywB,MAAOzwB,EAASsN,KAAMtN,EAAQsN,MAAStN,EAG1E,SAASo+B,GAAqBzgB,GACtB,YAAWA,KACXA,EAAS,CAAE0gB,OAAQ1gB,IAEvB,MAAM,OAAE0gB,EAAQC,iBAAkBA,EAAkBC,eAAgBA,EAAc,MAAEC,EAAQ,IAAG,QAAE1nB,EAAO,YACxG2nB,GAAc,EAAMC,QAASC,GAAgBhhB,EAC7C,IACIihB,EADAC,EAAiB,KAEjBC,EAAU,EACd,MAKMC,EAAO,KACT,IAAIC,EACJ,OAAQH,IACHG,EAAcH,EAAiBR,IAC3B3wB,MAAMH,IAEP,GADAA,EAAMA,aAAe0xB,MAAQ1xB,EAAM,IAAI0xB,MAAMrjB,OAAOrO,IAChDoxB,EACA,OAAO,IAAIzvB,QAAQ,CAACC,EAAS+vB,KAGzBP,EAAYpxB,EAFM,IAAM4B,GAZxC2vB,IACAD,EAAiB,KACVE,MAW0B,IAAMG,EAAO3xB,GACQuxB,EAAU,KAIpD,MAAMvxB,IAGTiC,KAAM+B,GACHytB,IAAgBH,GAAkBA,EAC3BA,GAOPttB,IACCA,EAAK4tB,YAA2C,WAA7B5tB,EAAK1R,OAAOu/B,gBAChC7tB,EAAOA,EAAKyJ,SAKhB4jB,EAAertB,EACRA,MAGnB,OAAO4sB,GAAgB,CACnBxU,cAAeoV,EACfzxB,KAAM,wBACN,QACI,MAAMlC,EAAWiR,GAEjB,GAAIuiB,EACA,MAAO,IAAMS,GAAgBT,EAAcxzB,GAE/C,MAAMszB,EAAWnxB,IACbsxB,EAAiB,KACjBrxB,GAAYD,EAAKnC,EAAU,IAAkCmzB,IAGjE,GAAME,GAAerzB,EAASyK,SAE1B,OAAOkpB,IACFvvB,KAAK+B,GACC,IAAM8tB,GAAgB9tB,EAAMnG,IAElCsC,MAAMH,IACPmxB,EAAQnxB,GACD,IAAMgxB,EACPxqB,GAAYwqB,EAAgB,CAC1BlwB,MAAOd,IAET,OAGd,MAAM+xB,EAAS,IAAI,GACbjxB,EAAQ,KACRkxB,EAAU,KAAMf,GAuBtB,OAtBIA,GACAznB,WAAW,KACPwoB,EAAQt7B,OAAQ,GACjBu6B,GAEQ,MAAX1nB,GACAC,WAAW,KACP,IAAKuoB,EAAOr7B,QAAUoK,EAAMpK,MAAO,CAC/B,MAAMsJ,EAAM,IAAI0xB,MAAM,mCAAmCnoB,QACzD4nB,EAAQnxB,GACRc,EAAMpK,MAAQsJ,IAEnBuJ,GAEPioB,IACKvvB,KAAK,KACN8vB,EAAOr7B,OAAQ,IAEdyJ,MAAMH,IACPmxB,EAAQnxB,GACRc,EAAMpK,MAAQsJ,IAEX,IACC+xB,EAAOr7B,OAAS26B,EACTS,GAAgBT,EAAcxzB,GAEhCiD,EAAMpK,OAASs6B,EACbxqB,GAAYwqB,EAAgB,CAC/BlwB,MAAOA,EAAMpK,QAGZq6B,IAAqBiB,EAAQt7B,MAC3B8P,GAAYuqB,QADlB,KAOrB,SAASe,GAAgB9tB,GAAQ1F,OAAO,MAAEe,EAAK,SAAEsH,KAC7C,OAAOH,GAAYxC,EAAM3E,EAAOsH,GAIpC,SAASsrB,GAAE39B,EAAM49B,EAAiBvrB,GAC9B,MAAMvP,EAAI2V,UAAUxZ,OACpB,OAAU,IAAN6D,EACI,YAAS86B,KAAqB,YAAQA,GAElCprB,GAAQorB,GACD1rB,GAAYlS,EAAM,KAAM,CAAC49B,IAG7B1rB,GAAYlS,EAAM49B,GAIlB1rB,GAAYlS,EAAM,KAAM49B,IAI/B96B,EAAI,EACJuP,EAAW7P,MAAMC,UAAU4I,MAAM/G,KAAKmU,UAAW,GAEtC,IAAN3V,GAAW0P,GAAQH,KACxBA,EAAW,CAACA,IAETH,GAAYlS,EAAM49B,EAAiBvrB,IAIlD,MAAMwrB,GAAgB7/B,OAAgE,IAChF8/B,GAAgB,KAClB,CACI,MAAM1sB,EAAM+lB,GAAO0G,IAKnB,OAJKzsB,GACD/H,GAAK,oHAGF+H,IAIf,SAAS2sB,KAED,cA8LR,SAASC,GAAWliB,EAAQmiB,GACxB,IAAIt1B,EACJ,GAAI,YAAQmT,IAAW,YAASA,GAAS,CACrCnT,EAAM,IAAInG,MAAMsZ,EAAO7c,QACvB,IAAK,IAAIS,EAAI,EAAGoD,EAAIgZ,EAAO7c,OAAQS,EAAIoD,EAAGpD,IACtCiJ,EAAIjJ,GAAKu+B,EAAWniB,EAAOpc,GAAIA,QAGlC,GAAsB,iBAAXoc,EAAqB,CAC7B,EAIJnT,EAAM,IAAInG,MAAMsZ,GAChB,IAAK,IAAIpc,EAAI,EAAGA,EAAIoc,EAAQpc,IACxBiJ,EAAIjJ,GAAKu+B,EAAWv+B,EAAI,EAAGA,QAG9B,GAAI,YAASoc,GACd,GAAIA,EAAO9d,OAAOoH,UACduD,EAAMnG,MAAMw2B,KAAKld,EAAQmiB,OAExB,CACD,MAAM7yB,EAAOlK,OAAOkK,KAAK0Q,GACzBnT,EAAM,IAAInG,MAAM4I,EAAKnM,QACrB,IAAK,IAAIS,EAAI,EAAGoD,EAAIsI,EAAKnM,OAAQS,EAAIoD,EAAGpD,IAAK,CACzC,MAAMO,EAAMmL,EAAK1L,GACjBiJ,EAAIjJ,GAAKu+B,EAAWniB,EAAO7b,GAAMA,EAAKP,SAK9CiJ,EAAM,GAEV,OAAOA,EAOX,SAASu1B,GAAWC,GAChB,MAAMx1B,EAAM,GAKZ,IAAK,MAAM1I,KAAOk+B,EACdx1B,EAAI,KAAK,YAAW1I,IAAUk+B,EAAIl+B,GAEtC,OAAO0I,EAOX,SAASy1B,GAAYvtB,EAAOwtB,GACxB,IAAK,IAAI3+B,EAAI,EAAGA,EAAI2+B,EAAap/B,OAAQS,IAAK,CAC1C,MAAM+X,EAAO4mB,EAAa3+B,GAE1B,GAAI,YAAQ+X,GACR,IAAK,IAAI8Z,EAAI,EAAGA,EAAI9Z,EAAKxY,OAAQsyB,IAC7B1gB,EAAM4G,EAAK8Z,GAAG9lB,MAAQgM,EAAK8Z,GAAGrzB,QAG7BuZ,IAEL5G,EAAM4G,EAAKhM,MAAQgM,EAAKvZ,IAGhC,OAAO2S,EAIX,MAAM4U,GAAU,QAKV6Y,GAAW,KCvqNXC,GAAQ,6BACRC,GAA2B,oBAAb/oB,SAA2BA,SAAW,KAC1D,IAAIgpB,GACAC,GACJ,MAAMC,GAAU,CACZ7X,OAAQ,CAACvU,EAAOpI,EAAQmJ,KACpBnJ,EAAOy0B,aAAarsB,EAAOe,GAAU,OAEzCwC,OAAQvD,IACJ,MAAMpI,EAASoI,EAAMiD,WACjBrL,GACAA,EAAO00B,YAAYtsB,IAG3BuB,cAAe,CAACgrB,EAAKrrB,EAAO8X,IAAO9X,EAC7B+qB,GAAIO,gBAAgBR,GAAOO,GAC3BN,GAAI1qB,cAAcgrB,EAAKvT,EAAK,CAAEA,WAAO7sB,GAC3CkrB,WAAY4M,GAAQgI,GAAIQ,eAAexI,GACvCzP,cAAeyP,GAAQgI,GAAIzX,cAAcyP,GACzCzM,QAAS,CAACzU,EAAMkhB,KACZlhB,EAAK2pB,UAAYzI,GAErBvM,eAAgB,CAAClX,EAAIyjB,KACjBzjB,EAAGwV,YAAciO,GAErBhhB,WAAYF,GAAQA,EAAKE,WACzBqR,YAAavR,GAAQA,EAAKuR,YAC1BgN,cAAeqL,GAAYV,GAAI3K,cAAcqL,GAC7C,WAAWnsB,EAAI7T,GACX6T,EAAGosB,aAAajgC,EAAI,KAExBqrB,UAAUxX,GACCA,EAAGwX,WAAU,GAMxB,oBAAoB0L,EAAS9rB,EAAQmJ,EAAQG,GACzC,MAAM2rB,EAAO3rB,EACPirB,KACGA,GAAmBF,GAAIO,gBAAgBR,GAAO,QACjDE,KAAkBA,GAAgBD,GAAI1qB,cAAc,QAC1DsrB,EAAK9W,UAAY2N,EACjB,MAAMoJ,EAAQD,EAAK5W,WACnB,IAAIlT,EAAO+pB,EACPx/B,EAAOyV,EACX,KAAOA,GACHzV,EAAOyV,EACPqpB,GAAQ7X,OAAOxR,EAAMnL,EAAQmJ,GAC7BgC,EAAO8pB,EAAK5W,WAEhB,MAAO,CAAC6W,EAAOx/B,KAkDvB,MAAMy/B,GAAc,iBACpB,SAASC,GAASjT,EAAO7gB,EAAMtE,GAC3B,GAAI,YAAQA,GACRA,EAAInG,QAAQ+C,GAAKw7B,GAASjT,EAAO7gB,EAAM1H,SAGvC,GAAI0H,EAAK8D,WAAW,MAEhB+c,EAAMkT,YAAY/zB,EAAMtE,OAEvB,CACD,MAAMs4B,EAalB,SAAoBnT,EAAOoT,GACvB,MAAMne,EAASoe,GAAYD,GAC3B,GAAIne,EACA,OAAOA,EAEX,IAAI9V,EAAO,YAASi0B,GACpB,GAAa,WAATj0B,GAAqBA,KAAQ6gB,EAC7B,OAAQqT,GAAYD,GAAWj0B,EAEnCA,EAAO,YAAWA,GAClB,IAAK,IAAI/L,EAAI,EAAGA,EAAIkgC,GAAS3gC,OAAQS,IAAK,CACtC,MAAM+/B,EAAWG,GAASlgC,GAAK+L,EAC/B,GAAIg0B,KAAYnT,EACZ,OAAQqT,GAAYD,GAAWD,EAGvC,OAAOC,EA7BkBG,CAAWvT,EAAO7gB,GAC/B6zB,GAAY5c,KAAKvb,GAEjBmlB,EAAMkT,YAAY,YAAUC,GAAWt4B,EAAIkJ,QAAQivB,GAAa,IAAK,aAGrEhT,EAAMmT,GAAYt4B,GAKlC,MAAMy4B,GAAW,CAAC,SAAU,MAAO,MAC7BD,GAAc,GAoBpB,MAAMG,GAAU,+BAuEhB,IAAIC,GAAUC,KAAKC,IAKK,oBAAbxqB,UACPsqB,KAAYtqB,SAASyqB,YAAY,SAASC,YAI1CJ,GAAU,IAAMtb,YAAYwb,OAIhC,IAAIG,GAAY,EAChB,MAAM,GAAI/yB,QAAQC,UACZ,GAAQ,KACV8yB,GAAY,GAGhB,SAASC,GAAiBttB,EAAI3D,EAAOE,EAASnR,GAC1C4U,EAAGstB,iBAAiBjxB,EAAOE,EAASnR,GAKxC,SAASmiC,GAAWvtB,EAAI2sB,EAASa,EAAWC,EAAWj3B,EAAW,MAE9D,MAAMk3B,EAAW1tB,EAAG2tB,OAAS3tB,EAAG2tB,KAAO,IACjCC,EAAkBF,EAASf,GACjC,GAAIc,GAAaG,EAEbA,EAAgBv+B,MAAQo+B,MAEvB,CACD,MAAO/0B,EAAMtN,GAcrB,SAAmBsN,GACf,IAAItN,EACJ,GAAIyiC,GAAkBle,KAAKjX,GAAO,CAE9B,IAAIkK,EACJ,IAFAxX,EAAU,GAEFwX,EAAIlK,EAAKyO,MAAM0mB,KACnBn1B,EAAOA,EAAKJ,MAAM,EAAGI,EAAKxM,OAAS0W,EAAE,GAAG1W,QACxCd,EAAQwX,EAAE,GAAGrF,gBAAiB,EAGtC,MAAO,CAAC7E,EAAKJ,MAAM,GAAGiF,cAAenS,GAxBT0iC,CAAUnB,GAClC,GAAIc,EAAW,CAGXH,GAAiBttB,EAAItH,EADJg1B,EAASf,GAuBtC,SAAuBoB,EAAcv3B,GACjC,MAAMw3B,EAAWC,KAOKA,EAAEb,WAAaJ,OAChBgB,EAAQE,SAAW,GAChCr1B,GAOZ,SAAuCo1B,EAAG5+B,GACtC,GAAI,YAAQA,GAAQ,CAChB,MAAM8+B,EAAeF,EAAEG,yBAKvB,OAJAH,EAAEG,yBAA2B,KACzBD,EAAa58B,KAAK08B,GAClBA,EAAEI,UAAW,GAEVh/B,EAAMhB,IAAIlD,GAAO8iC,IAAOA,EAAEI,UAAYljC,EAAG8iC,IAGhD,OAAO5+B,EAjBwBi/B,CAA8BL,EAAGD,EAAQ3+B,OAAQmH,EAAU,EAA8B,CAACy3B,KAK7H,OAFAD,EAAQ3+B,MAAQ0+B,EAChBC,EAAQE,SAxDG,KAAMb,KAAc,GAAEzyB,KAAK,IAASyyB,GAAYL,MAwDxCuB,GACZP,EAtCsCQ,CAAcf,EAAWj3B,GAC1BpL,QAE/BwiC,KAlBjB,SAA6B5tB,EAAI3D,EAAOE,EAASnR,GAC7C4U,EAAGyuB,oBAAoBpyB,EAAOE,EAASnR,GAmB/BqjC,CAAoBzuB,EAAItH,EAAMk1B,EAAiBxiC,GAC/CsiC,EAASf,QAAWhhC,IAIhC,MAAMkiC,GAAoB,4BA4C1B,MAAMa,GAAa,WA2EnB,SAASC,GAAaj2B,EAAO,UAEzB,CACI,MAAMlC,EAAW8U,KACjB,IAAK9U,EAED,OAAO,IAEX,MAAMo4B,EAAUp4B,EAASvJ,KAAKu7B,aAC9B,IAAKoG,EAED,OAAO,IAEX,MAAMC,EAAMD,EAAQl2B,GACpB,OAAKm2B,GAGM,KAMnB,SAASC,GAAW54B,EAAQ64B,GAAS,GACjC,MAAMv4B,EAAW8U,KAEjB,IAAK9U,EAGD,OAEJ,MAAMw4B,EAASD,GAAUv4B,EAASvJ,KAAK8rB,UAC9BviB,EAASvJ,KAAK8rB,UAAUzb,QAAQ,WAAY,IAA/C,IACA,GACA2xB,EAAU,IAIpB,SAASC,EAAej4B,EAAOk4B,EAAMH,GACjC,GAAuB,IAAlB/3B,EAAMsH,UAAgC,CACvC,MAAM0C,EAAWhK,EAAMgK,SACvBhK,EAAQgK,EAASW,aACbX,EAASE,gBAAkBF,EAASa,aACpCb,EAASlT,QAAQjC,KAAK,KAClBojC,EAAejuB,EAASW,aAAcutB,EAAMH,KAKxD,KAAO/3B,EAAMR,WACTQ,EAAQA,EAAMR,UAAUwJ,QAE5B,GAAsB,EAAlBhJ,EAAMsH,WAA+BtH,EAAM+I,GAAI,CAC/C,MAAMuZ,EAAQtiB,EAAM+I,GAAGuZ,MACvB,IAAK,MAAMrsB,KAAOiiC,EACd5V,EAAMkT,YAAY,KAAKuC,IAAS9hC,IAAO+H,GAAMk6B,EAAKjiC,UAGjD+J,EAAMhK,OAAS6X,IACpB7N,EAAMqI,SAASrR,QAAQ6sB,GAAKoU,EAAepU,EAAGqU,EAAMH,IAzBlCE,CAAe14B,EAASyJ,QAAS/J,EAAOM,EAAS1C,OAAQk7B,GAC/E7mB,GAAU,IAAMQ,GAAYsmB,IAC5B5mB,GAAU4mB,GA2Bd,MAIMG,GAAa,CAACp3B,GAAS8F,WAAY8sB,GAAErgB,GAAgB8kB,GAAuBr3B,GAAQ8F,GAC1FsxB,GAAW7f,YAAc,aACzB,MAAM+f,GAA+B,CACjC52B,KAAMsO,OACN/Z,KAAM+Z,OACNuoB,IAAK,CACDtiC,KAAMqH,QACN8R,SAAS,GAEbopB,SAAU,CAACxoB,OAAQ5W,OAAQjC,QAC3BshC,eAAgBzoB,OAChB0oB,iBAAkB1oB,OAClB2oB,aAAc3oB,OACd4oB,gBAAiB5oB,OACjB6oB,kBAAmB7oB,OACnB8oB,cAAe9oB,OACf+oB,eAAgB/oB,OAChBgpB,iBAAkBhpB,OAClBipB,aAAcjpB,QAEZkpB,GAA6Bd,GAAWp3B,MAAsB,YAAO,GAAIuS,GAAevS,MAAOs3B,IACrG,SAASD,GAAuBzpB,GAC5B,IAAI,KAAElN,EAAO,IAAG,KAAEzL,EAAI,IAAEsiC,GAAM,EAAI,SAAEC,EAAQ,eAAEC,EAAoB/2B,EAAH,cAAoB,iBAAEg3B,EAAsBh3B,EAAH,gBAAsB,aAAEi3B,EAAkBj3B,EAAH,YAAkB,gBAAEk3B,EAAkBH,EAAc,kBAAEI,EAAoBH,EAAgB,cAAEI,EAAgBH,EAAY,eAAEI,EAAoBr3B,EAAH,cAAoB,iBAAEs3B,EAAsBt3B,EAAH,gBAAsB,aAAEu3B,EAAkBv3B,EAAH,aAAuBkN,EACjY,MAAMuqB,EAAY,GAClB,IAAK,MAAMjjC,KAAO0Y,EACR1Y,KAAOoiC,KACTa,EAAUjjC,GAAO0Y,EAAS1Y,IAGlC,IAAKqiC,EACD,OAAOY,EAEX,MAAMC,EA8EV,SAA2BZ,GACvB,GAAgB,MAAZA,EACA,OAAO,KAEN,GAAI,YAASA,GACd,MAAO,CAACa,GAASb,EAAS3W,OAAQwX,GAASb,EAASnQ,QAEnD,CACD,MAAMvc,EAAIutB,GAASb,GACnB,MAAO,CAAC1sB,EAAGA,IAvFGwtB,CAAkBd,GAC9Be,EAAgBH,GAAaA,EAAU,GACvCI,EAAgBJ,GAAaA,EAAU,IACvC,cAAE1lB,EAAa,QAAEC,EAAO,iBAAEE,EAAgB,QAAEE,EAAO,iBAAEE,EAAgB,eAAEC,EAAiBR,EAAa,SAAES,EAAWR,EAAO,kBAAEU,EAAoBR,GAAqBslB,EACpKM,EAAc,CAACzwB,EAAI0wB,EAAUl+B,KAC/Bm+B,GAAsB3wB,EAAI0wB,EAAWZ,EAAgBH,GACrDgB,GAAsB3wB,EAAI0wB,EAAWb,EAAoBH,GACzDl9B,GAAQA,KAENo+B,EAAc,CAAC5wB,EAAIxN,KACrBm+B,GAAsB3wB,EAAIiwB,GAC1BU,GAAsB3wB,EAAIgwB,GAC1Bx9B,GAAQA,KAENq+B,EAAiBH,GACZ,CAAC1wB,EAAIxN,KACR,MAAM4J,EAAOs0B,EAAWvlB,EAAWR,EAC7BpQ,EAAU,IAAMk2B,EAAYzwB,EAAI0wB,EAAUl+B,GAChD4J,GAAQA,EAAK4D,EAAIzF,GACjBu2B,GAAU,KACNH,GAAsB3wB,EAAI0wB,EAAWd,EAAkBH,GACvDsB,GAAmB/wB,EAAI0wB,EAAWZ,EAAgBH,GAC5CvzB,GAAQA,EAAKlQ,OAAS,IACpBqkC,EACApuB,WAAW5H,EAASg2B,GAGpBS,GAAmBhxB,EAAI/S,EAAMsN,OAMjD,OAAO,YAAO41B,EAAW,CACrB,cAAcnwB,GACV0K,GAAiBA,EAAc1K,GAC/B+wB,GAAmB/wB,EAAI0vB,GACvBqB,GAAmB/wB,EAAIyvB,IAE3B,eAAezvB,GACXkL,GAAkBA,EAAelL,GACjC+wB,GAAmB/wB,EAAI6vB,GACvBkB,GAAmB/wB,EAAI4vB,IAE3BjlB,QAASkmB,GAAc,GACvB1lB,SAAU0lB,GAAc,GACxB,QAAQ7wB,EAAIxN,GACR,MAAM+H,EAAU,IAAMq2B,EAAY5wB,EAAIxN,GACtCu+B,GAAmB/wB,EAAIgwB,GACvBe,GAAmB/wB,EAAI+vB,GACvBe,GAAU,KACNH,GAAsB3wB,EAAI+vB,GAC1BgB,GAAmB/wB,EAAIiwB,GACjBllB,GAAWA,EAAQ7e,OAAS,IAC1BskC,EACAruB,WAAW5H,EAASi2B,GAGpBQ,GAAmBhxB,EAAI/S,EAAMsN,MAIzCwQ,GAAWA,EAAQ/K,EAAIzF,IAE3B,iBAAiByF,GACbywB,EAAYzwB,GAAI,GAChB6K,GAAoBA,EAAiB7K,IAEzC,kBAAkBA,GACdywB,EAAYzwB,GAAI,GAChBqL,GAAqBA,EAAkBrL,IAE3C,iBAAiBA,GACb4wB,EAAY5wB,GACZiL,GAAoBA,EAAiBjL,MAgBjD,SAASqwB,GAASj8B,GAId,OAHY,YAASA,GAezB,SAAS28B,GAAmB/wB,EAAIixB,GAC5BA,EAAIxhB,MAAM,OAAOxhB,QAAQ6sB,GAAKA,GAAK9a,EAAGkxB,UAAUxjC,IAAIotB,KACnD9a,EAAGmxB,OACCnxB,EAAGmxB,KAAO,IAAI3jC,MAAQE,IAAIujC,GAEnC,SAASN,GAAsB3wB,EAAIixB,GAC/BA,EAAIxhB,MAAM,OAAOxhB,QAAQ6sB,GAAKA,GAAK9a,EAAGkxB,UAAUnuB,OAAO+X,IACvD,MAAM,KAAEqW,GAASnxB,EACbmxB,IACAA,EAAKvkC,OAAOqkC,GACPE,EAAK1/B,OACNuO,EAAGmxB,UAAOxlC,IAItB,SAASmlC,GAAU31B,GACfi2B,sBAAsB,KAClBA,sBAAsBj2B,KAG9B,SAAS61B,GAAmBhxB,EAAIqxB,EAAcl2B,GAC1C,MAAM,KAAElO,EAAI,QAAEiV,EAAO,UAAEovB,GAAcC,GAAkBvxB,EAAIqxB,GAC3D,IAAKpkC,EACD,OAAOkO,IAEX,MAAMq2B,EAAWvkC,EAAO,MACxB,IAAIwkC,EAAQ,EACZ,MAAM7b,EAAM,KACR5V,EAAGyuB,oBAAoB+C,EAAUE,GACjCv2B,KAEEu2B,EAASzD,IACPA,EAAEjhC,SAAWgT,KACPyxB,GAASH,GACX1b,KAIZzT,WAAW,KACHsvB,EAAQH,GACR1b,KAEL1T,EAAU,GACblC,EAAGstB,iBAAiBkE,EAAUE,GAElC,SAASH,GAAkBvxB,EAAIqxB,GAC3B,MAAMM,EAASC,OAAOC,iBAAiB7xB,GAEjC8xB,EAAsB5kC,IAASykC,EAAOzkC,IAAQ,IAAIuiB,MAAM,MACxDsiB,EAAmBD,EAAmBE,mBACtCC,EAAsBH,EAAmBE,sBACzCE,EAAoBC,GAAWJ,EAAkBE,GACjDG,EAAkBN,EAAmBO,kBACrCC,EAAqBR,EAAmBO,qBACxCE,EAAmBJ,GAAWC,EAAiBE,GACrD,IAAIrlC,EAAO,KACPiV,EAAU,EACVovB,EAAY,EAvMD,eAyMXD,EACIa,EAAoB,IACpBjlC,EA3MO,aA4MPiV,EAAUgwB,EACVZ,EAAYW,EAAoB/lC,QA5M1B,cA+MLmlC,EACDkB,EAAmB,IACnBtlC,EAjNM,YAkNNiV,EAAUqwB,EACVjB,EAAYgB,EAAmBpmC,SAInCgW,EAAU2b,KAAKhQ,IAAIqkB,EAAmBK,GACtCtlC,EACIiV,EAAU,EACJgwB,EAAoBK,EA3NnB,aACD,YA6NA,KACVjB,EAAYrkC,EA/ND,eAgOLA,EACIglC,EAAoB/lC,OACpBomC,EAAmBpmC,OACvB,GAIV,MAAO,CACHe,OACAiV,UACAovB,YACAkB,aA3OW,eAqOMvlC,GACjB,yBAAyB0iB,KAAKgiB,EAA8B,qBAQpE,SAASQ,GAAWM,EAAQrC,GACxB,KAAOqC,EAAOvmC,OAASkkC,EAAUlkC,QAC7BumC,EAASA,EAAOxzB,OAAOwzB,GAE3B,OAAO5U,KAAKhQ,OAAOuiB,EAAU/hC,IAAI,CAACqkC,EAAG/lC,IAAMgmC,GAAKD,GAAKC,GAAKF,EAAO9lC,MAMrE,SAASgmC,GAAKvuB,GACV,OAAkD,IAA3ChU,OAAOgU,EAAE9L,MAAM,GAAI,GAAGgF,QAAQ,IAAK,MAO9C,MAAMs1B,GAAc,IAAI/nC,QAClBgoC,GAAiB,IAAIhoC,QAwErBioC,GAvEsB,CACxBp6B,KAAM,kBACNV,MAAqB,YAAO,GAAIk4B,GAA2B,CACvDnE,IAAK/kB,OACL+rB,UAAW/rB,SAEf,MAAMhP,GAAO,MAAE8F,IACX,MAAMtH,EAAW8U,KACXpB,EAAQD,KACd,IAAIoS,EACA/c,EAmCJ,OAlCA+I,GAAU,KAEN,IAAKgU,EAAanwB,OACd,OAEJ,MAAM6mC,EAAY/6B,EAAM+6B,YAAgB/6B,EAAMU,MAAQ,KAAjB,QACrC,IAmFZ,SAAyBsH,EAAIrB,EAAMo0B,GAM/B,MAAM7lB,EAAQlN,EAAGwX,YACbxX,EAAGmxB,MACHnxB,EAAGmxB,KAAKljC,QAAQgjC,IACZA,EAAIxhB,MAAM,OAAOxhB,QAAQ6sB,GAAKA,GAAK5N,EAAMgkB,UAAUnuB,OAAO+X,MAGlEiY,EAAUtjB,MAAM,OAAOxhB,QAAQ6sB,GAAKA,GAAK5N,EAAMgkB,UAAUxjC,IAAIotB,IAC7D5N,EAAMqM,MAAMyZ,QAAU,OACtB,MAAM1yB,EAA+B,IAAlB3B,EAAK8U,SAClB9U,EACAA,EAAK8D,WACXnC,EAAU2yB,YAAY/lB,GACtB,MAAM,aAAEslB,GAAiBjB,GAAkBrkB,GAE3C,OADA5M,EAAUwrB,YAAY5e,GACfslB,EAvGMU,CAAgB7W,EAAa,GAAGrc,GAAIxJ,EAASS,MAAM+I,GAAI+yB,GACxD,OAIJ1W,EAAapuB,QAAQklC,IACrB9W,EAAapuB,QAAQmlC,IACrB,MAAMC,EAAgBhX,EAAa/tB,OAAOglC,IA0E3C5wB,SAAS6wB,KAAKC,aAvEbH,EAAcplC,QAAQ6sB,IAClB,MAAM9a,EAAK8a,EAAE9a,GACPuZ,EAAQvZ,EAAGuZ,MACjBwX,GAAmB/wB,EAAI+yB,GACvBxZ,EAAMka,UAAYla,EAAMma,gBAAkBna,EAAMoa,mBAAqB,GACrE,MAAMx4B,EAAM6E,EAAG4zB,QAAW3F,IAClBA,GAAKA,EAAEjhC,SAAWgT,GAGjBiuB,IAAK,aAAate,KAAKse,EAAE4F,gBAC1B7zB,EAAGyuB,oBAAoB,gBAAiBtzB,GACxC6E,EAAG4zB,QAAU,KACbjD,GAAsB3wB,EAAI+yB,KAGlC/yB,EAAGstB,iBAAiB,gBAAiBnyB,OAGtC,KACH,MAAMyK,EApDlB,SAAS,EAAM3T,GACX,OAASA,GAAY,EAAMA,EAA4B,UAAOA,EAmDrC,CAAM+F,GACjB87B,EAAqBzE,GAAuBzpB,GAC5CmmB,EAAMnmB,EAASmmB,KAAOjnB,GAC5BuX,EAAe/c,EACfA,EAAWxB,EAAMsI,QAAUoF,GAAyB1N,EAAMsI,WAAa,GACvE,IAAK,IAAIzZ,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IAAK,CACtC,MAAM6S,EAAQF,EAAS3S,GACN,MAAb6S,EAAMtS,KACN4e,GAAmBtM,EAAOqM,GAAuBrM,EAAOs0B,EAAoB5pB,EAAO1T,IAM3F,GAAI6lB,EACA,IAAK,IAAI1vB,EAAI,EAAGA,EAAI0vB,EAAanwB,OAAQS,IAAK,CAC1C,MAAM6S,EAAQ6c,EAAa1vB,GAC3Bmf,GAAmBtM,EAAOqM,GAAuBrM,EAAOs0B,EAAoB5pB,EAAO1T,IACnFo8B,GAAYvlC,IAAImS,EAAOA,EAAMQ,GAAG+zB,yBAGxC,OAAO50B,GAAY4sB,EAAK,KAAMzsB,MAK1C,SAAS6zB,GAAerY,GACpB,MAAM9a,EAAK8a,EAAE9a,GACTA,EAAG4zB,SACH5zB,EAAG4zB,UAEH5zB,EAAGgN,UACHhN,EAAGgN,WAGX,SAASomB,GAAetY,GACpB+X,GAAexlC,IAAIytB,EAAGA,EAAE9a,GAAG+zB,yBAE/B,SAAST,GAAiBxY,GACtB,MAAMkZ,EAASpB,GAAYxlC,IAAI0tB,GACzBmZ,EAASpB,GAAezlC,IAAI0tB,GAC5BoZ,EAAKF,EAAOG,KAAOF,EAAOE,KAC1BC,EAAKJ,EAAOK,IAAMJ,EAAOI,IAC/B,GAAIH,GAAME,EAAI,CACV,MAAMhwB,EAAI0W,EAAE9a,GAAGuZ,MAGf,OAFAnV,EAAEqvB,UAAYrvB,EAAEsvB,gBAAkB,aAAaQ,OAAQE,OACvDhwB,EAAEuvB,mBAAqB,KAChB7Y,GA8Bf,MAAMwZ,GAAoBr9B,IACtB,MAAM9L,EAAK8L,EAAMe,MAAM,uBACvB,OAAO,YAAQ7M,GAAMkE,GAAS,YAAelE,EAAIkE,GAASlE,GAE9D,SAASopC,GAAmBtG,GACxBA,EAAEjhC,OAAOwnC,WAAY,EAEzB,SAASC,GAAiBxG,GACtB,MAAMjhC,EAASihC,EAAEjhC,OACbA,EAAOwnC,YACPxnC,EAAOwnC,WAAY,EAI3B,SAAiBx0B,EAAI/S,GACjB,MAAMghC,EAAIvrB,SAASyqB,YAAY,cAC/Bc,EAAEyG,UAAUznC,GAAM,GAAM,GACxB+S,EAAG20B,cAAc1G,GANb,CAAQjhC,EAAQ,UAUxB,MAAM4nC,GAAa,CACf,QAAQ50B,GAAMgR,WAAW,KAAExkB,EAAI,KAAEqoC,EAAI,OAAEC,IAAY79B,GAC/C+I,EAAG+0B,QAAUT,GAAiBr9B,GAC9B,MAAM+9B,EAAeF,GAAsB,WAAZ90B,EAAG/S,KAClCqgC,GAAiBttB,EAAIxT,EAAO,SAAW,QAASyhC,IAC5C,GAAIA,EAAEjhC,OAAOwnC,UACT,OACJ,IAAIS,EAAWj1B,EAAG3Q,MACdwlC,EACAI,EAAWA,EAASJ,OAEfG,IACLC,EAAW,YAASA,IAExBj1B,EAAG+0B,QAAQE,KAEXJ,GACAvH,GAAiBttB,EAAI,SAAU,KAC3BA,EAAG3Q,MAAQ2Q,EAAG3Q,MAAMwlC,SAGvBroC,IACD8gC,GAAiBttB,EAAI,mBAAoBu0B,IACzCjH,GAAiBttB,EAAI,iBAAkBy0B,IAKvCnH,GAAiBttB,EAAI,SAAUy0B,MAIvC,QAAQz0B,GAAI,MAAE3Q,IACV2Q,EAAG3Q,MAAiB,MAATA,EAAgB,GAAKA,GAEpC,aAAa2Q,GAAI,MAAE3Q,EAAO2hB,WAAW,KAAE6jB,EAAI,OAAEC,IAAY79B,GAGrD,GAFA+I,EAAG+0B,QAAUT,GAAiBr9B,GAE1B+I,EAAGw0B,UACH,OACJ,GAAI9xB,SAASwyB,gBAAkBl1B,EAAI,CAC/B,GAAI60B,GAAQ70B,EAAG3Q,MAAMwlC,SAAWxlC,EAC5B,OAEJ,IAAKylC,GAAsB,WAAZ90B,EAAG/S,OAAsB,YAAS+S,EAAG3Q,SAAWA,EAC3D,OAGR,MAAMzB,EAAoB,MAATyB,EAAgB,GAAKA,EAClC2Q,EAAG3Q,QAAUzB,IACboS,EAAG3Q,MAAQzB,KAIjBunC,GAAiB,CACnB,QAAQn1B,EAAIsR,EAASra,GACjBm+B,GAAWp1B,EAAIsR,EAASra,GACxB+I,EAAG+0B,QAAUT,GAAiBr9B,GAC9Bq2B,GAAiBttB,EAAI,SAAU,KAC3B,MAAMq1B,EAAar1B,EAAGs1B,YAChBC,EAAeC,GAASx1B,GACxBy1B,EAAUz1B,EAAGy1B,QACbC,EAAS11B,EAAG+0B,QAClB,GAAI,YAAQM,GAAa,CACrB,MAAM/5B,EAAQ,YAAa+5B,EAAYE,GACjCI,GAAmB,IAAXr6B,EACd,GAAIm6B,IAAYE,EACZD,EAAOL,EAAWp2B,OAAOs2B,SAExB,IAAKE,GAAWE,EAAO,CACxB,MAAMp2B,EAAW,IAAI81B,GACrB91B,EAASq2B,OAAOt6B,EAAO,GACvBo6B,EAAOn2B,SAGN,YAAM81B,GACPI,EACAJ,EAAW3nC,IAAI6nC,GAGfF,EAAWzoC,OAAO2oC,GAItBG,EAAOG,GAAiB71B,EAAIy1B,OAIxC,aAAaz1B,EAAIsR,EAASra,GACtB+I,EAAG+0B,QAAUT,GAAiBr9B,GAC9Bm+B,GAAWp1B,EAAIsR,EAASra,KAGhC,SAASm+B,GAAWp1B,GAAI,MAAE3Q,EAAK,SAAExB,GAAYoJ,GACzC+I,EAAGs1B,YAAcjmC,EACb,YAAQA,GACR2Q,EAAGy1B,QAAU,YAAapmC,EAAO4H,EAAMe,MAAM3I,QAAU,EAElD,YAAMA,GACX2Q,EAAGy1B,QAAUpmC,EAAM5B,IAAIwJ,EAAMe,MAAM3I,OAE9BA,IAAUxB,IACfmS,EAAGy1B,QAAU,YAAWpmC,EAAOwmC,GAAiB71B,GAAI,KAG5D,MAAM81B,GAAc,CAChB,QAAQ91B,GAAI,MAAE3Q,GAAS4H,GACnB+I,EAAGy1B,QAAU,YAAWpmC,EAAO4H,EAAMe,MAAM3I,OAC3C2Q,EAAG+0B,QAAUT,GAAiBr9B,GAC9Bq2B,GAAiBttB,EAAI,SAAU,KAC3BA,EAAG+0B,QAAQS,GAASx1B,OAG5B,aAAaA,GAAI,MAAE3Q,EAAK,SAAExB,GAAYoJ,GAClC+I,EAAG+0B,QAAUT,GAAiBr9B,GAC1B5H,IAAUxB,IACVmS,EAAGy1B,QAAU,YAAWpmC,EAAO4H,EAAMe,MAAM3I,UAIjD0mC,GAAe,CACjB,QAAQ/1B,GAAMgR,WAAW,OAAE8jB,IAAY79B,GACnCq2B,GAAiBttB,EAAI,SAAU,KAC3B,MAAMg2B,EAAcvmC,MAAMC,UAAUpB,OAC/BiD,KAAKyO,EAAG5U,QAAU0V,GAAMA,EAAEm1B,UAC1B5nC,IAAKyS,GAAMg0B,EAAS,YAASU,GAAS10B,IAAM00B,GAAS10B,IAC1Dd,EAAG+0B,QAAQ/0B,EAAGk2B,SAAWF,EAAcA,EAAY,MAEvDh2B,EAAG+0B,QAAUT,GAAiBr9B,IAIlC,QAAQ+I,GAAI,MAAE3Q,IACV8mC,GAAYn2B,EAAI3Q,IAEpB,aAAa2Q,EAAIo2B,EAAUn/B,GACvB+I,EAAG+0B,QAAUT,GAAiBr9B,IAElC,QAAQ+I,GAAI,MAAE3Q,IACV8mC,GAAYn2B,EAAI3Q,KAGxB,SAAS8mC,GAAYn2B,EAAI3Q,GACrB,MAAMgnC,EAAar2B,EAAGk2B,SACtB,IAAIG,GAAe,YAAQhnC,IAAW,YAAMA,GAA5C,CAMA,IAAK,IAAI1C,EAAI,EAAGoD,EAAIiQ,EAAG5U,QAAQc,OAAQS,EAAIoD,EAAGpD,IAAK,CAC/C,MAAM2pC,EAASt2B,EAAG5U,QAAQuB,GACpB4pC,EAAcf,GAASc,GAC7B,GAAID,EACI,YAAQhnC,GACRinC,EAAOL,SAAW,YAAa5mC,EAAOknC,IAAgB,EAGtDD,EAAOL,SAAW5mC,EAAM5B,IAAI8oC,QAIhC,GAAI,YAAWf,GAASc,GAASjnC,GAE7B,YADA2Q,EAAGw2B,cAAgB7pC,GAK1B0pC,IACDr2B,EAAGw2B,eAAiB,IAI5B,SAAShB,GAASx1B,GACd,MAAO,WAAYA,EAAKA,EAAGpL,OAASoL,EAAG3Q,MAG3C,SAASwmC,GAAiB71B,EAAIy1B,GAC1B,MAAMvoC,EAAMuoC,EAAU,aAAe,cACrC,OAAOvoC,KAAO8S,EAAKA,EAAG9S,GAAOuoC,EAEjC,MAAMgB,GAAgB,CAClB,QAAQz2B,EAAIsR,EAASra,GACjBy/B,GAAc12B,EAAIsR,EAASra,EAAO,KAAM,YAE5C,QAAQ+I,EAAIsR,EAASra,GACjBy/B,GAAc12B,EAAIsR,EAASra,EAAO,KAAM,YAE5C,aAAa+I,EAAIsR,EAASra,EAAOma,GAC7BslB,GAAc12B,EAAIsR,EAASra,EAAOma,EAAW,iBAEjD,QAAQpR,EAAIsR,EAASra,EAAOma,GACxBslB,GAAc12B,EAAIsR,EAASra,EAAOma,EAAW,aAGrD,SAASslB,GAAc12B,EAAIsR,EAASra,EAAOma,EAAWhV,GAClD,IAAIu6B,EACJ,OAAQ32B,EAAGuT,SACP,IAAK,SACDojB,EAAaZ,GACb,MACJ,IAAK,WACDY,EAAa/B,GACb,MACJ,QACI,OAAQ39B,EAAMe,OAASf,EAAMe,MAAM/K,MAC/B,IAAK,WACD0pC,EAAaxB,GACb,MACJ,IAAK,QACDwB,EAAab,GACb,MACJ,QACIa,EAAa/B,IAG7B,MAAMzpC,EAAKwrC,EAAWv6B,GACtBjR,GAAMA,EAAG6U,EAAIsR,EAASra,EAAOma,GAGjC,MAAMwlB,GAAkB,CAAC,OAAQ,QAAS,MAAO,QAC3CC,GAAiB,CACnBpqC,KAAMwhC,GAAKA,EAAE6I,kBACbC,QAAS9I,GAAKA,EAAE+I,iBAChBC,KAAMhJ,GAAKA,EAAEjhC,SAAWihC,EAAEiJ,cAC1BC,KAAMlJ,IAAMA,EAAEmJ,QACdC,MAAOpJ,IAAMA,EAAEqJ,SACfC,IAAKtJ,IAAMA,EAAEuJ,OACbC,KAAMxJ,IAAMA,EAAEyJ,QACdvD,KAAMlG,GAAK,WAAYA,GAAkB,IAAbA,EAAE0J,OAC9BC,OAAQ3J,GAAK,WAAYA,GAAkB,IAAbA,EAAE0J,OAChCE,MAAO5J,GAAK,WAAYA,GAAkB,IAAbA,EAAE0J,OAC/BG,MAAO,CAAC7J,EAAGjd,IAAc4lB,GAAgB/3B,KAAK+D,GAAKqrB,EAAKrrB,EAAH,SAAeoO,EAAUplB,SAASgX,KAKrFm1B,GAAgB,CAAC5sC,EAAI6lB,IAChB,CAAC3U,KAAU1M,KACd,IAAK,IAAIhD,EAAI,EAAGA,EAAIqkB,EAAU9kB,OAAQS,IAAK,CACvC,MAAMqrC,EAAQnB,GAAe7lB,EAAUrkB,IACvC,GAAIqrC,GAASA,EAAM37B,EAAO2U,GACtB,OAER,OAAO7lB,EAAGkR,KAAU1M,IAKtBsoC,GAAW,CACbC,IAAK,SACLC,MAAO,IACPC,GAAI,WACJjE,KAAM,aACN0D,MAAO,cACPQ,KAAM,aACNzrC,OAAQ,aAKN0rC,GAAW,CAACntC,EAAI6lB,IACV3U,IACJ,KAAM,QAASA,GACX,OACJ,MAAMk8B,EAAW,YAAUl8B,EAAMnP,KACjC,OAEC8jB,EAAUnS,KAAK25B,GAAKA,IAAMD,GAAYN,GAASO,KAAOD,GAGhDptC,EAAGkR,QALV,GASFo8B,GAAQ,CACV,YAAYz4B,GAAI,MAAE3Q,IAAS,WAAE6P,IACzBc,EAAG04B,KAA4B,SAArB14B,EAAGuZ,MAAMyZ,QAAqB,GAAKhzB,EAAGuZ,MAAMyZ,QAClD9zB,GAAc7P,EACd6P,EAAW0Z,YAAY5Y,GAGvB24B,GAAW34B,EAAI3Q,IAGvB,QAAQ2Q,GAAI,MAAE3Q,IAAS,WAAE6P,IACjBA,GAAc7P,GACd6P,EAAW2Z,MAAM7Y,IAGzB,QAAQA,GAAI,MAAE3Q,EAAK,SAAExB,IAAY,WAAEqR,KAC1B7P,IAAWxB,IAEZqR,EACI7P,GACA6P,EAAW0Z,YAAY5Y,GACvB24B,GAAW34B,GAAI,GACfd,EAAW2Z,MAAM7Y,IAGjBd,EAAWmgB,MAAMrf,EAAI,KACjB24B,GAAW34B,GAAI,KAKvB24B,GAAW34B,EAAI3Q,KAGvB,cAAc2Q,GAAI,MAAE3Q,IAChBspC,GAAW34B,EAAI3Q,KAGvB,SAASspC,GAAW34B,EAAI3Q,GACpB2Q,EAAGuZ,MAAMyZ,QAAU3jC,EAAQ2Q,EAAG04B,KAAO,OAGzC,MAAME,GAAkB,YAAO,CAAE/kB,UAv1Bf,CAAC7T,EAAI9S,EAAKsgC,EAAWC,EAAW/sB,GAAQ,EAAO2b,EAAc7b,EAAiBC,EAAgBiY,KAC5G,OAAQxrB,GAEJ,IAAK,SA/Pb,SAAoB8S,EAAI3Q,EAAOqR,GAI3B,GAHa,MAATrR,IACAA,EAAQ,IAERqR,EACAV,EAAGosB,aAAa,QAAS/8B,OAExB,CAID,MAAMwpC,EAAoB74B,EAAGmxB,KACzB0H,IACAxpC,GAASA,EACH,CAACA,KAAUwpC,GACX,IAAIA,IAAoBthC,KAAK,MAEvCyI,EAAG84B,UAAYzpC,GA+OX0pC,CAAW/4B,EAAIytB,EAAW/sB,GAC1B,MACJ,IAAK,SA7Ob,SAAoBV,EAAI0Z,EAAMjnB,GAC1B,MAAM8mB,EAAQvZ,EAAGuZ,MACjB,GAAK9mB,EAGA,GAAI,YAASA,GACVinB,IAASjnB,IACT8mB,EAAMyf,QAAUvmC,OAGnB,CACD,IAAK,MAAMvF,KAAOuF,EACd+5B,GAASjT,EAAOrsB,EAAKuF,EAAKvF,IAE9B,GAAIwsB,IAAS,YAASA,GAClB,IAAK,MAAMxsB,KAAOwsB,EACG,MAAbjnB,EAAKvF,IACLs/B,GAASjT,EAAOrsB,EAAK,SAdjC8S,EAAGi5B,gBAAgB,SA2OfC,CAAWl5B,EAAIwtB,EAAWC,GAC1B,MACJ,QACQ,YAAKvgC,GAEA,YAAgBA,IACjBqgC,GAAWvtB,EAAI9S,EAAKsgC,EAAWC,EAAWjtB,GAsB9D,SAAyBR,EAAI9S,EAAKmC,EAAOqR,GACrC,GAAIA,EAGA,MAAY,cAARxT,MAIAA,KAAO8S,GAAM0uB,GAAW/e,KAAKziB,IAAQ,YAAWmC,IAWxD,GAAY,eAARnC,GAAgC,cAARA,EACxB,OAAO,EAIX,GAAY,SAARA,GAAmC,iBAAVmC,EACzB,OAAO,EAGX,GAAY,SAARnC,GAAiC,UAAf8S,EAAGuT,QACrB,OAAO,EAGX,GAAImb,GAAW/e,KAAKziB,IAAQ,YAASmC,GACjC,OAAO,EAEX,OAAOnC,KAAO8S,EAtDGm5B,CAAgBn5B,EAAI9S,EAAKugC,EAAW/sB,GA5JzD,SAAsBV,EAAI9S,EAAKmC,EAI/BgtB,EAAc7b,EAAiBC,EAAgBiY,GAC3C,GAAY,cAARxrB,GAA+B,gBAARA,EAKvB,OAJImvB,GACA3D,EAAgB2D,EAAc7b,EAAiBC,QAEnDT,EAAG9S,GAAgB,MAATmC,EAAgB,GAAKA,GAGnC,GAAY,UAARnC,GAAkC,aAAf8S,EAAGuT,QAU1B,GAAc,KAAVlkB,GAAmC,kBAAZ2Q,EAAG9S,GAE1B8S,EAAG9S,IAAO,OAET,GAAa,MAATmC,GAAoC,iBAAZ2Q,EAAG9S,GAEhC8S,EAAG9S,GAAO,GACV8S,EAAGi5B,gBAAgB/rC,QAInB,IACI8S,EAAG9S,GAAOmC,EAEd,MAAO4+B,GACC,MAzBZ,CAGIjuB,EAAGpL,OAASvF,EACZ,MAAMzB,EAAoB,MAATyB,EAAgB,GAAKA,EAClC2Q,EAAG3Q,QAAUzB,IACboS,EAAG3Q,MAAQzB,IA2IPwrC,CAAap5B,EAAI9S,EAAKugC,EAAWpR,EAAc7b,EAAiBC,EAAgBiY,IAOpE,eAARxrB,EACA8S,EAAGq5B,WAAa5L,EAEH,gBAARvgC,IACL8S,EAAGs5B,YAAc7L,GAhMrC,SAAmBztB,EAAI9S,EAAKmC,EAAOqR,GAC/B,GAAIA,GAASxT,EAAIsP,WAAW,UACX,MAATnN,EACA2Q,EAAGu5B,kBAAkBxM,GAAS7/B,EAAIoL,MAAM,EAAGpL,EAAIhB,SAG/C8T,EAAGw5B,eAAezM,GAAS7/B,EAAKmC,OAGnC,CAGD,MAAMoqC,EAAY,YAAqBvsC,GAC1B,MAATmC,GAAkBoqC,IAAuB,IAAVpqC,EAC/B2Q,EAAGi5B,gBAAgB/rC,GAGnB8S,EAAGosB,aAAal/B,EAAKusC,EAAY,GAAKpqC,IAiLlCqqC,CAAU15B,EAAI9S,EAAKugC,EAAW/sB,MAyzBJ,eAx1BnB,CAACqE,EAAG7X,IAAgB,UAARA,GAw1B2B0+B,IAG9D,IAAI3d,GACA0rB,IAAmB,EACvB,SAASC,KACL,OAAO3rB,KAAaA,GAAWkI,GAAeyiB,KAElD,SAASiB,KAKL,OAJA5rB,GAAW0rB,GACL1rB,GACAoI,GAAwBuiB,IAC9Be,IAAmB,EACZ1rB,GAGX,MAAM,GAAS,IAAKte,KAChBiqC,KAAiB37B,UAAUtO,IAEzB,GAAU,IAAKA,KACjBkqC,KAA0Bv3B,WAAW3S,IAEnC,GAAY,IAAKA,KACnB,MAAM6hB,EAAMooB,KAAiB3Z,aAAatwB,GAI1C,MAAM,MAAEqxB,GAAUxP,EAgBlB,OAfAA,EAAIwP,MAAS8Y,IACT,MAAMx5B,EAAYy5B,GAAmBD,GACrC,IAAKx5B,EACD,OACJ,MAAM7J,EAAY+a,EAAIc,WACjB,YAAW7b,IAAeA,EAAUwH,QAAWxH,EAAUqyB,WAC1DryB,EAAUqyB,SAAWxoB,EAAUiV,WAGnCjV,EAAUiV,UAAY,GACtB,MAAMzhB,EAAQktB,EAAM1gB,GAGpB,OAFAA,EAAU24B,gBAAgB,WAC1B34B,EAAU8rB,aAAa,aAAc,IAC9Bt4B,GAEJ0d,GAELwoB,GAAe,IAAKrqC,KACtB,MAAM6hB,EAAMqoB,KAA0B5Z,aAAatwB,GAInD,MAAM,MAAEqxB,GAAUxP,EAOlB,OANAA,EAAIwP,MAAS8Y,IACT,MAAMx5B,EAAYy5B,GAAmBD,GACrC,GAAIx5B,EACA,OAAO0gB,EAAM1gB,GAAW,IAGzBkR,GAUX,SAASuoB,GAAmBz5B,GACxB,GAAI,YAASA,GAAY,CAKrB,OAJYoC,SAASoe,cAAcxgB,GAMvC,OAAOA,E,MCvtCX,SAAS25B,GAAexgC,GACpB,MAAMA,EAEV,SAASygC,GAAoBC,EAAMC,EAAKC,EAAUC,GAC9C,MAGM7gC,EAAQ,IAAI8gC,YAAYvzB,OADxBmzB,IAIN,OAFA1gC,EAAM0gC,KAAOA,EACb1gC,EAAM2gC,IAAMA,EACL3gC,EAEX,MA2DM+gC,GAAWvvC,OAA8D,IACzEwvC,GAAWxvC,OAA8D,IACzEyvC,GAAWzvC,OAA8D,IACzE0vC,GAAa1vC,OAA+D,IAC5E2vC,GAAkB3vC,OAAoE,IACtF4vC,GAAa5vC,OAA+D,IAC5E6vC,GAAe7vC,OAAiE,IAChF8vC,GAAe9vC,OAAiE,IAChF+vC,GAAiB/vC,OAAwE,IACzFgwC,GAAchwC,OAAqE,IACnFiwC,GAAgBjwC,OAAuE,IACvFkwC,GAAoBlwC,OAAsE,IAC1FmwC,GAA4BnwC,OAA6E,IACzGowC,GAAoBpwC,OAAsE,IAC1FqwC,GAAkBrwC,OAAoE,IACtFswC,GAActwC,OAAgE,IAC9EuwC,GAAcvwC,OAAgE,IAC9EwwC,GAAexwC,OAAiE,IAChFywC,GAAoBzwC,OAAqE,IACzF0wC,GAAc1wC,OAAgE,IAC9E2wC,GAAc3wC,OAAgE,IAC9E4wC,GAAW5wC,OAA8D,IACzE6wC,GAAa7wC,OAAgE,IAC7E8wC,GAAqB9wC,OAAsE,IAC3F+wC,GAAgB/wC,OAAiE,IACjFgxC,GAAehxC,OAAgE,IAC/EixC,GAAgBjxC,OAAiE,IACjFkxC,GAAWlxC,OAA6D,IAIxEmxC,GAAgB,CAClB,CAAC5B,IAAW,WACZ,CAACC,IAAW,WACZ,CAACC,IAAW,WACZ,CAACC,IAAa,YACd,CAACC,IAAkB,iBACnB,CAACC,IAAa,YACd,CAACC,IAAe,cAChB,CAACC,IAAe,cAChB,CAACC,IAAiB,qBAClB,CAACC,IAAc,kBACf,CAACC,IAAgB,oBACjB,CAACC,IAAoB,mBACrB,CAACC,IAA4B,0BAC7B,CAACC,IAAoB,mBACrB,CAACC,IAAkB,iBACnB,CAACC,IAAc,aACf,CAACC,IAAc,aACf,CAACC,IAAe,cAChB,CAACC,IAAoB,kBACrB,CAACC,IAAc,aACf,CAACC,IAAc,aACf,CAACC,IAAW,WACZ,CAACC,IAAa,aACd,CAACC,IAAqB,mBACtB,CAACC,IAAgB,cACjB,CAACC,IAAe,aAChB,CAACC,IAAgB,cACjB,CAACC,IAAW,WAYhB,MAAME,GAAU,CACZtzB,OAAQ,GACRiQ,MAAO,CAAEsjB,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,GACrC5mB,IAAK,CAAE0mB,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAiBvC,SAASC,GAAgBtqB,EAAS4Z,EAAK/zB,EAAOsH,EAAUgO,EAAWmM,EAAc7I,EAAY8rB,GAAU,EAAOza,GAAkB,EAAOmY,EAAMiC,IAazI,OAZIlqB,IACIuqB,GACAvqB,EAAQwqB,OAAO9B,IACf1oB,EAAQwqB,OAAO7B,KAGf3oB,EAAQwqB,OAAO5B,IAEfnqB,GACAuB,EAAQwqB,OAAOrB,KAGhB,CACHruC,KAAM,GACN8+B,MACA/zB,QACAsH,WACAgO,YACAmM,eACA7I,aACA8rB,UACAza,kBACAmY,OAGR,SAASwC,GAAsBC,EAAUzC,EAAMiC,IAC3C,MAAO,CACHpvC,KAAM,GACNmtC,MACAyC,YAGR,SAASC,GAAuBC,EAAY3C,EAAMiC,IAC9C,MAAO,CACHpvC,KAAM,GACNmtC,MACA2C,cAGR,SAASC,GAAqB9vC,EAAKmC,GAC/B,MAAO,CACHpC,KAAM,GACNmtC,IAAKiC,GACLnvC,IAAK,YAASA,GAAO+vC,GAAuB/vC,GAAK,GAAQA,EACzDmC,SAGR,SAAS4tC,GAAuB/Z,EAASga,EAAU9C,EAAMiC,GAASc,GAAa,GAC3E,MAAO,CACHlwC,KAAM,EACNmtC,MACA+C,aACAja,UACAga,YAYR,SAASE,GAAyB99B,EAAU86B,EAAMiC,IAC9C,MAAO,CACHpvC,KAAM,EACNmtC,MACA96B,YAGR,SAAS+9B,GAAqBC,EAAQ3tC,EAAO,GAAIyqC,EAAMiC,IACnD,MAAO,CACHpvC,KAAM,GACNmtC,MACAkD,SACA53B,UAAW/V,GAGnB,SAAS4tC,GAAyBC,EAAQC,EAAqBC,GAAU,EAAOC,GAAS,EAAOvD,EAAMiC,IAClG,MAAO,CACHpvC,KAAM,GACNuwC,SACAC,UACAC,UACAC,SACAvD,OAGR,SAASwD,GAA4BjuB,EAAMkuB,EAAYC,EAAWJ,GAAU,GACxE,MAAO,CACHzwC,KAAM,GACN0iB,OACAkuB,aACAC,YACAJ,UACAtD,IAAKiC,IA0Db,MAAM0B,GAAepjC,GAAiB,IAAXA,EAAE1N,MAAsC0N,EAAEuiC,SAC/Dc,GAAgB,CAACjS,EAAKkS,IAAalS,IAAQkS,GAAYlS,IAAQ,YAAUkS,GAC/E,SAASC,GAAgBnS,GACrB,OAAIiS,GAAcjS,EAAK,YACZ0O,GAEFuD,GAAcjS,EAAK,YACjB2O,GAEFsD,GAAcjS,EAAK,aACjB4O,GAEFqD,GAAcjS,EAAK,kBACjB6O,QADN,EAIT,MAAMuD,GAAkB,cAClBC,GAAsB1lC,IAAUylC,GAAgBxuB,KAAKjX,GACrD2lC,GAAc,uDACdC,GAAsBvX,KACnBA,GAEEsX,GAAY1uB,KAAKoX,EAAK8N,QAEjC,SAAS0J,GAAcnE,EAAKoC,EAAQtwC,GAChC,MACMsyC,EAAS,CACXz1B,OAFWqxB,EAAIrxB,OAAO01B,OAAOjC,EAAQtwC,GAGrC8sB,MAAO0lB,GAAyBtE,EAAIphB,MAAOohB,EAAIrxB,OAAQyzB,GACvD5mB,IAAKwkB,EAAIxkB,KAKb,OAHc,MAAV1pB,IACAsyC,EAAO5oB,IAAM8oB,GAAyBtE,EAAIphB,MAAOohB,EAAIrxB,OAAQyzB,EAAStwC,IAEnEsyC,EAEX,SAASE,GAAyBC,EAAK51B,EAAQ61B,EAAqB71B,EAAO7c,QACvE,OAAO2yC,GAA4B,YAAO,GAAIF,GAAM51B,EAAQ61B,GAIhE,SAASC,GAA4BF,EAAK51B,EAAQ61B,EAAqB71B,EAAO7c,QAC1E,IAAI4yC,EAAa,EACbC,GAAkB,EACtB,IAAK,IAAIpyC,EAAI,EAAGA,EAAIiyC,EAAoBjyC,IACP,KAAzBoc,EAAOi2B,WAAWryC,KAClBmyC,IACAC,EAAiBpyC,GASzB,OANAgyC,EAAInC,QAAUoC,EACdD,EAAIrC,MAAQwC,EACZH,EAAIpC,QACoB,IAApBwC,EACMJ,EAAIpC,OAASqC,EACbA,EAAqBG,EACxBJ,EAQX,SAASM,GAAQ18B,EAAM7J,EAAMwmC,GAAa,GACtC,IAAK,IAAIvyC,EAAI,EAAGA,EAAI4V,EAAKvK,MAAM9L,OAAQS,IAAK,CACxC,MAAMgO,EAAI4H,EAAKvK,MAAMrL,GACrB,GAAe,IAAXgO,EAAE1N,OACDiyC,GAAcvkC,EAAEwkC,OAChB,YAASzmC,GAAQiC,EAAEjC,OAASA,EAAOA,EAAKiX,KAAKhV,EAAEjC,OAChD,OAAOiC,GAInB,SAASykC,GAAS78B,EAAM7J,EAAM2mC,GAAc,EAAOH,GAAa,GAC5D,IAAK,IAAIvyC,EAAI,EAAGA,EAAI4V,EAAKvK,MAAM9L,OAAQS,IAAK,CACxC,MAAMgO,EAAI4H,EAAKvK,MAAMrL,GACrB,GAAe,IAAXgO,EAAE1N,KAA4B,CAC9B,GAAIoyC,EACA,SACJ,GAAI1kC,EAAEjC,OAASA,IAASiC,EAAEtL,OAAS6vC,GAC/B,OAAOvkC,OAGV,GAAe,SAAXA,EAAEjC,OACNiC,EAAEwkC,KAAOD,IACVI,GAAU3kC,EAAEoW,IAAKrY,GACjB,OAAOiC,GAInB,SAAS2kC,GAAUvuB,EAAKrY,GACpB,SAAUqY,IAAOgtB,GAAYhtB,IAAQA,EAAImS,UAAYxqB,GAUzD,SAAS6mC,GAAOh9B,GACZ,OAAqB,IAAdA,EAAKtV,MAAgD,IAAdsV,EAAKtV,KAEvD,SAASuyC,GAAQ7kC,GACb,OAAkB,IAAXA,EAAE1N,MAAyC,SAAX0N,EAAEjC,KAE7C,SAAS+mC,GAAel9B,GACpB,OAAsB,IAAdA,EAAKtV,MAA6C,IAAjBsV,EAAKm9B,QAElD,SAASC,GAAap9B,GAClB,OAAqB,IAAdA,EAAKtV,MAA6C,IAAjBsV,EAAKm9B,QAEjD,SAASE,GAAWr9B,EAAMqE,EAAMuL,GAC5B,IAAI0tB,EACJ,MAAM7nC,EAAsB,KAAduK,EAAKtV,KAA+BsV,EAAKvK,MAAQuK,EAAKmD,UAAU,GAC9E,GAAa,MAAT1N,GAAiB,YAASA,GAC1B6nC,EAAqB/C,GAAuB,CAACl2B,SAE5C,GAAmB,KAAf5O,EAAM/K,KAAsC,CAIjD,MAAMq/B,EAAQt0B,EAAM0N,UAAU,GACzB,YAAS4mB,IAAyB,KAAfA,EAAMr/B,KAItB+K,EAAMslC,SAAW1B,GAEjBiE,EAAqBxC,GAAqBlrB,EAAQwqB,OAAOhB,IAAc,CACnEmB,GAAuB,CAACl2B,IACxB5O,IAIJA,EAAM0N,UAAUoC,QAAQg1B,GAAuB,CAACl2B,KAXpD0lB,EAAMyQ,WAAWj1B,QAAQlB,IAc5Bi5B,IAAuBA,EAAqB7nC,QAE5C,GAAmB,KAAfA,EAAM/K,KAAwC,CACnD,IAAI6yC,GAAgB,EAEpB,GAAsB,IAAlBl5B,EAAK1Z,IAAID,KAAoC,CAC7C,MAAM8yC,EAAcn5B,EAAK1Z,IAAIg2B,QAC7B4c,EAAgB9nC,EAAM+kC,WAAWl+B,KAAKlE,GAAoB,IAAfA,EAAEzN,IAAID,MAC7C0N,EAAEzN,IAAIg2B,UAAY6c,GAErBD,GACD9nC,EAAM+kC,WAAWj1B,QAAQlB,GAE7Bi5B,EAAqB7nC,OAIrB6nC,EAAqBxC,GAAqBlrB,EAAQwqB,OAAOhB,IAAc,CACnEmB,GAAuB,CAACl2B,IACxB5O,IAGU,KAAduK,EAAKtV,KACLsV,EAAKvK,MAAQ6nC,EAGbt9B,EAAKmD,UAAU,GAAKm6B,EAG5B,SAASG,GAAetnC,EAAMzL,GAC1B,MAAO,IAAIA,KAAQyL,EAAK4E,QAAQ,SAAU,OAkD9C,MAAM2iC,GAAW,2BACXC,GAAY,CACdC,GAAI,IACJC,GAAI,IACJC,IAAK,IACLC,KAAM,IACNC,KAAM,KAEJC,GAAuB,CACzBzX,WAAY,CAAC,KAAM,MACnB0X,aAAc,IAAM,EACpBC,YAAa,IAAM,EACnBC,UAAW,IACXC,SAAU,IACV/uB,gBAAiB,IACjBgvB,eAAiBC,GAAYA,EAAQxjC,QAAQ2iC,GAAU,CAACl7B,EAAGg8B,IAAOb,GAAUa,IAC5EjX,QAASmQ,GACT+G,UAAU,GAEd,SAASC,GAAU/d,EAAS93B,EAAU,IAClC,MAAM+mB,EAIV,SAA6B+Q,EAASge,GAClC,MAAM91C,EAAU,YAAO,GAAIo1C,IAC3B,IAAK,MAAMtzC,KAAOg0C,EAEd91C,EAAQ8B,GAAOg0C,EAAWh0C,IAAQszC,GAAqBtzC,GAE3D,MAAO,CACH9B,UACAmxC,OAAQ,EACRD,KAAM,EACNE,OAAQ,EACR2E,eAAgBje,EAChBna,OAAQma,EACRke,OAAO,EACPC,QAAQ,GAlBIC,CAAoBpe,EAAS93B,GACvC4tB,EAAQuoB,GAAUpvB,GACxB,OA7ZJ,SAAoB7S,EAAU86B,EAAMiC,IAChC,MAAO,CACHpvC,KAAM,EACNqS,WACAkiC,QAAS,GACT1vB,WAAY,GACZlB,WAAY,GACZ6wB,OAAQ,GACRC,QAAS,GACTlzB,OAAQ,EACRmzB,MAAO,EACPC,iBAAaj2C,EACbyuC,OAiZGyH,CAAWC,GAAc3vB,EAAS,EAAc,IAAK4vB,GAAa5vB,EAAS6G,IAmBtF,SAAS8oB,GAAc3vB,EAAShP,EAAM6+B,GAClC,MAAM5qC,EAAStK,GAAKk1C,GACdC,EAAK7qC,EAASA,EAAO6qC,GAAK,EAC1BC,EAAQ,GACd,MAAQC,GAAMhwB,EAAShP,EAAM6+B,IAAY,CACrC,MAAM59B,EAAI+N,EAAQpJ,OAClB,IAAIxG,OAAO5W,EACX,GAAa,IAATwX,GAAkC,IAATA,EACzB,IAAKgP,EAAQkvB,QAAU7kC,GAAW4H,EAAG+N,EAAQ/mB,QAAQ29B,WAAW,IAE5DxmB,EAAO6/B,GAAmBjwB,EAAShP,QAElC,GAAa,IAATA,GAAkC,MAATiB,EAAE,GAEhC,GAAiB,IAAbA,EAAElY,OACFm2C,GAAUlwB,EAAS,EAA6B,QAE/C,GAAa,MAAT/N,EAAE,GAEH5H,GAAW4H,EAAG,WACd7B,EAAO+/B,GAAanwB,GAEf3V,GAAW4H,EAAG,aAEnB7B,EAAOggC,GAAkBpwB,GAEpB3V,GAAW4H,EAAG,aACR,IAAP69B,EACA1/B,EAAOigC,GAAWrwB,EAAS6vB,IAG3BK,GAAUlwB,EAAS,GACnB5P,EAAOggC,GAAkBpwB,KAI7BkwB,GAAUlwB,EAAS,IACnB5P,EAAOggC,GAAkBpwB,SAG5B,GAAa,MAAT/N,EAAE,GAEP,GAAiB,IAAbA,EAAElY,OACFm2C,GAAUlwB,EAAS,EAA6B,OAE/C,IAAa,MAAT/N,EAAE,GAAY,CACnBi+B,GAAUlwB,EAAS,GAA+B,GAClDswB,GAAUtwB,EAAS,GACnB,SAEC,GAAI,SAASxC,KAAKvL,EAAE,IAAK,CAC1Bi+B,GAAUlwB,EAAS,IACnBuwB,GAASvwB,EAAS,EAAa/a,GAC/B,SAGAirC,GAAUlwB,EAAS,GAA8C,GACjE5P,EAAOggC,GAAkBpwB,OAGxB,SAASxC,KAAKvL,EAAE,IACrB7B,EAAOogC,GAAaxwB,EAAS6vB,GAEf,MAAT59B,EAAE,IACPi+B,GAAUlwB,EAAS,GAAuD,GAC1E5P,EAAOggC,GAAkBpwB,IAGzBkwB,GAAUlwB,EAAS,GAA8C,GAO7E,GAHK5P,IACDA,EAAOqgC,GAAUzwB,EAAShP,IAE1B,YAAQZ,GACR,IAAK,IAAI5V,EAAI,EAAGA,EAAI4V,EAAKrW,OAAQS,IAC7Bk2C,GAASX,EAAO3/B,EAAK5V,SAIzBk2C,GAASX,EAAO3/B,GAKxB,IAAIugC,GAAoB,EACxB,GAAa,IAAT3/B,EAA0B,CAC1B,IAAK,IAAIxW,EAAI,EAAGA,EAAIu1C,EAAMh2C,OAAQS,IAAK,CACnC,MAAM4V,EAAO2/B,EAAMv1C,GACnB,IAAKwlB,EAAQivB,OAAuB,IAAd7+B,EAAKtV,KACvB,GAAK,eAAe0iB,KAAKpN,EAAK2gB,SAyB1B3gB,EAAK2gB,QAAU3gB,EAAK2gB,QAAQ5lB,QAAQ,gBAAiB,SAzBjB,CACpC,MAAMoc,EAAOwoB,EAAMv1C,EAAI,GACjB8F,EAAOyvC,EAAMv1C,EAAI,IAMlB+sB,IACAjnB,GACa,IAAdinB,EAAKzsB,MACS,IAAdwF,EAAKxF,MACU,IAAdysB,EAAKzsB,MACY,IAAdwF,EAAKxF,MACL,SAAS0iB,KAAKpN,EAAK2gB,UACvB4f,GAAoB,EACpBZ,EAAMv1C,GAAK,MAKX4V,EAAK2gB,QAAU,IAST,IAAd3gB,EAAKtV,MACJklB,EAAQ/mB,QAAQ41C,WACjB8B,GAAoB,EACpBZ,EAAMv1C,GAAK,MAGnB,GAAIwlB,EAAQivB,OAAShqC,GAAU+a,EAAQ/mB,QAAQw1C,SAASxpC,EAAO20B,KAAM,CAGjE,MAAMO,EAAQ4V,EAAM,GAChB5V,GAAwB,IAAfA,EAAMr/B,OACfq/B,EAAMpJ,QAAUoJ,EAAMpJ,QAAQ5lB,QAAQ,SAAU,MAI5D,OAAOwlC,EAAoBZ,EAAM5zC,OAAOgG,SAAW4tC,EAEvD,SAASW,GAASX,EAAO3/B,GACrB,GAAkB,IAAdA,EAAKtV,KAAuB,CAC5B,MAAMysB,EAAO5sB,GAAKo1C,GAGlB,GAAIxoB,GACc,IAAdA,EAAKzsB,MACLysB,EAAK0gB,IAAIxkB,IAAI4mB,SAAWj6B,EAAK63B,IAAIphB,MAAMwjB,OAIvC,OAHA9iB,EAAKwJ,SAAW3gB,EAAK2gB,QACrBxJ,EAAK0gB,IAAIxkB,IAAMrT,EAAK63B,IAAIxkB,SACxB8D,EAAK0gB,IAAIrxB,QAAUxG,EAAK63B,IAAIrxB,QAIpCm5B,EAAMp2C,KAAKyW,GAEf,SAASigC,GAAWrwB,EAAS6vB,GACzBS,GAAUtwB,EAAS,GACnB,MAAM+vB,EAAQJ,GAAc3vB,EAAS,EAAe6vB,GAOpD,OAN8B,IAA1B7vB,EAAQpJ,OAAO7c,OACfm2C,GAAUlwB,EAAS,GAGnBswB,GAAUtwB,EAAS,GAEhB+vB,EAEX,SAASI,GAAanwB,GAClB,MAAM6G,EAAQuoB,GAAUpvB,GACxB,IAAI+Q,EAEJ,MAAM/b,EAAQ,WAAW47B,KAAK5wB,EAAQpJ,QACtC,GAAK5B,EAKA,CACGA,EAAM7L,OAAS,GACf+mC,GAAUlwB,EAAS,GAEnBhL,EAAM,IACNk7B,GAAUlwB,EAAS,IAEvB+Q,EAAU/Q,EAAQpJ,OAAOzQ,MAAM,EAAG6O,EAAM7L,OAExC,MAAM8I,EAAI+N,EAAQpJ,OAAOzQ,MAAM,EAAG6O,EAAM7L,OACxC,IAAI0nC,EAAY,EAAGC,EAAc,EACjC,MAAyD,KAAjDA,EAAc7+B,EAAEsL,QAAQ,UAAQszB,KACpCP,GAAUtwB,EAAS8wB,EAAcD,EAAY,GACzCC,EAAc,EAAI7+B,EAAElY,QACpBm2C,GAAUlwB,EAAS,IAEvB6wB,EAAYC,EAAc,EAE9BR,GAAUtwB,EAAShL,EAAM7L,MAAQ6L,EAAM,GAAGjb,OAAS82C,EAAY,QAtB/D9f,EAAU/Q,EAAQpJ,OAAOzQ,MAAM,GAC/BmqC,GAAUtwB,EAASA,EAAQpJ,OAAO7c,QAClCm2C,GAAUlwB,EAAS,GAsBvB,MAAO,CACHllB,KAAM,EACNi2B,UACAkX,IAAK2H,GAAa5vB,EAAS6G,IAGnC,SAASupB,GAAkBpwB,GACvB,MAAM6G,EAAQuoB,GAAUpvB,GAClB+wB,EAAqC,MAAtB/wB,EAAQpJ,OAAO,GAAa,EAAI,EACrD,IAAIma,EACJ,MAAMigB,EAAahxB,EAAQpJ,OAAO2G,QAAQ,KAS1C,OARoB,IAAhByzB,GACAjgB,EAAU/Q,EAAQpJ,OAAOzQ,MAAM4qC,GAC/BT,GAAUtwB,EAASA,EAAQpJ,OAAO7c,UAGlCg3B,EAAU/Q,EAAQpJ,OAAOzQ,MAAM4qC,EAAcC,GAC7CV,GAAUtwB,EAASgxB,EAAa,IAE7B,CACHl2C,KAAM,EACNi2B,UACAkX,IAAK2H,GAAa5vB,EAAS6G,IAGnC,SAAS2pB,GAAaxwB,EAAS6vB,GAE3B,MAAMoB,EAAWjxB,EAAQivB,MACnBiC,EAAYlxB,EAAQkvB,OACpBjqC,EAAStK,GAAKk1C,GACdsB,EAAUZ,GAASvwB,EAAS,EAAe/a,GAC3CmsC,EAAgBpxB,EAAQivB,QAAUgC,EAClCI,EAAiBrxB,EAAQkvB,SAAWgC,EAC1C,GAAIC,EAAQG,eAAiBtxB,EAAQ/mB,QAAQu1C,UAAU2C,EAAQvX,KAC3D,OAAOuX,EAGXtB,EAAUl2C,KAAKw3C,GACf,MAAMngC,EAAOgP,EAAQ/mB,QAAQs1C,YAAY4C,EAASlsC,GAC5CkI,EAAWwiC,GAAc3vB,EAAShP,EAAM6+B,GAI9C,GAHAA,EAAUh2C,MACVs3C,EAAQhkC,SAAWA,EAEfokC,GAAqBvxB,EAAQpJ,OAAQu6B,EAAQvX,KAC7C2W,GAASvwB,EAAS,EAAa/a,QAI/B,GADAirC,GAAUlwB,EAAS,GAA4B,EAAGmxB,EAAQlJ,IAAIphB,OAChC,IAA1B7G,EAAQpJ,OAAO7c,QAA8C,WAA9Bo3C,EAAQvX,IAAIxuB,cAA4B,CACvE,MAAM+uB,EAAQhtB,EAAS,GACnBgtB,GAAS9vB,GAAW8vB,EAAM8N,IAAIrxB,OAAQ,YACtCs5B,GAAUlwB,EAAS,GAW/B,OAPAmxB,EAAQlJ,IAAM2H,GAAa5vB,EAASmxB,EAAQlJ,IAAIphB,OAC5CuqB,IACApxB,EAAQivB,OAAQ,GAEhBoC,IACArxB,EAAQkvB,QAAS,GAEdiC,EAEX,MAAMK,GAA2C,YAAQ,4BAIzD,SAASjB,GAASvwB,EAASllB,EAAMmK,GAE7B,MAAM4hB,EAAQuoB,GAAUpvB,GAClBhL,EAAQ,+BAA+B47B,KAAK5wB,EAAQpJ,QACpDgjB,EAAM5kB,EAAM,GACZ86B,EAAK9vB,EAAQ/mB,QAAQq1C,aAAa1U,EAAK30B,GAC7CqrC,GAAUtwB,EAAShL,EAAM,GAAGjb,QAC5B03C,GAAczxB,GAEd,MAAM0xB,EAAStC,GAAUpvB,GACnB2xB,EAAgB3xB,EAAQpJ,OAE9B,IAAI/Q,EAAQ+rC,GAAgB5xB,EAASllB,GAEjCklB,EAAQ/mB,QAAQw1C,SAAS7U,KACzB5Z,EAAQivB,OAAQ,IAGfjvB,EAAQkvB,QACTrpC,EAAM6G,KAAKlE,GAAgB,IAAXA,EAAE1N,MAAyC,QAAX0N,EAAEjC,QAClDyZ,EAAQkvB,QAAS,EAEjB,YAAOlvB,EAAS0xB,GAChB1xB,EAAQpJ,OAAS+6B,EAEjB9rC,EAAQ+rC,GAAgB5xB,EAASllB,GAAMqB,OAAOqM,GAAgB,UAAXA,EAAEjC,OAGzD,IAAI+qC,GAAgB,EACU,IAA1BtxB,EAAQpJ,OAAO7c,OACfm2C,GAAUlwB,EAAS,IAGnBsxB,EAAgBjnC,GAAW2V,EAAQpJ,OAAQ,MAC9B,IAAT9b,GAAwBw2C,GACxBpB,GAAUlwB,EAAS,GAEvBswB,GAAUtwB,EAASsxB,EAAgB,EAAI,IAE3C,IAAI/D,EAAU,EACd,MAAMt0C,EAAU+mB,EAAQ/mB,QACxB,IAAK+mB,EAAQkvB,SAAWj2C,EAAQymB,gBAAgBka,GAAM,CAClD,MAAMiY,EAAShsC,EAAM6G,KAAKlE,GAAgB,IAAXA,EAAE1N,MAAyC,OAAX0N,EAAEjC,MAC7DtN,EAAQqmB,cAAgBuyB,EACnB54C,EAAQqmB,YAAYsa,KACrB2T,EAAU,IAETsE,GACL9F,GAAgBnS,IACf3gC,EAAQ64C,oBAAsB74C,EAAQ64C,mBAAmBlY,IAC1D,SAASpc,KAAKoc,IACN,cAARA,KACA2T,EAAU,GAEF,SAAR3T,EACA2T,EAAU,EAEG,aAAR3T,GACL/zB,EAAM6G,KAAKlE,GACY,IAAXA,EAAE1N,MAA8B02C,GAA2BhpC,EAAEjC,SAEzEgnC,EAAU,GAGlB,MAAO,CACHzyC,KAAM,EACNg1C,KACAlW,MACA2T,UACA1nC,QACAyrC,gBACAnkC,SAAU,GACV86B,IAAK2H,GAAa5vB,EAAS6G,GAC3B4oB,iBAAaj2C,GAGrB,SAASo4C,GAAgB5xB,EAASllB,GAC9B,MAAM+K,EAAQ,GACRksC,EAAiB,IAAI12C,IAC3B,KAAO2kB,EAAQpJ,OAAO7c,OAAS,IAC1BsQ,GAAW2V,EAAQpJ,OAAQ,OAC3BvM,GAAW2V,EAAQpJ,OAAQ,OAAO,CACnC,GAAIvM,GAAW2V,EAAQpJ,OAAQ,KAAM,CACjCs5B,GAAUlwB,EAAS,IACnBswB,GAAUtwB,EAAS,GACnByxB,GAAczxB,GACd,SAES,IAATllB,GACAo1C,GAAUlwB,EAAS,GAEvB,MAAMgyB,EAAOC,GAAejyB,EAAS+xB,GACxB,IAATj3C,GACA+K,EAAMlM,KAAKq4C,GAEX,kBAAkBx0B,KAAKwC,EAAQpJ,SAC/Bs5B,GAAUlwB,EAAS,IAEvByxB,GAAczxB,GAElB,OAAOna,EAEX,SAASosC,GAAejyB,EAASkyB,GAE7B,MAAMrrB,EAAQuoB,GAAUpvB,GAElBzZ,EADQ,kCAAkCqqC,KAAK5wB,EAAQpJ,QAC1C,GACfs7B,EAAQ52C,IAAIiL,IACZ2pC,GAAUlwB,EAAS,GAEvBkyB,EAAQ32C,IAAIgL,GACI,MAAZA,EAAK,IACL2pC,GAAUlwB,EAAS,IAEvB,CACI,MAAM3C,EAAU,SAChB,IAAI5M,EACJ,KAAQA,EAAI4M,EAAQuzB,KAAKrqC,IACrB2pC,GAAUlwB,EAAS,GAAiDvP,EAAEtH,OAG9EmnC,GAAUtwB,EAASzZ,EAAKxM,QAExB,IAAImD,OAAQ1D,EACR,iBAAiBgkB,KAAKwC,EAAQpJ,UAC9B66B,GAAczxB,GACdswB,GAAUtwB,EAAS,GACnByxB,GAAczxB,GACd9iB,EAyER,SAA6B8iB,GACzB,MAAM6G,EAAQuoB,GAAUpvB,GACxB,IAAI+Q,EACJ,MAAMohB,EAAQnyB,EAAQpJ,OAAO,GACvBw7B,EAAqB,MAAVD,GAA2B,MAAVA,EAClC,GAAIC,EAAU,CAEV9B,GAAUtwB,EAAS,GACnB,MAAMqyB,EAAWryB,EAAQpJ,OAAO2G,QAAQ40B,IACtB,IAAdE,EACAthB,EAAUuhB,GAActyB,EAASA,EAAQpJ,OAAO7c,OAAQ,IAGxDg3B,EAAUuhB,GAActyB,EAASqyB,EAAU,GAC3C/B,GAAUtwB,EAAS,QAGtB,CAED,MAAMhL,EAAQ,kBAAkB47B,KAAK5wB,EAAQpJ,QAC7C,IAAK5B,EACD,OAEJ,MAAMu9B,EAAkB,WACxB,IAAI9hC,EACJ,KAAQA,EAAI8hC,EAAgB3B,KAAK57B,EAAM,KACnCk7B,GAAUlwB,EAAS,GAA2DvP,EAAEtH,OAEpF4nB,EAAUuhB,GAActyB,EAAShL,EAAM,GAAGjb,OAAQ,GAEtD,MAAO,CAAEg3B,UAASqhB,WAAUnK,IAAK2H,GAAa5vB,EAAS6G,IAvG3C2rB,CAAoBxyB,GACvB9iB,GACDgzC,GAAUlwB,EAAS,KAG3B,MAAMioB,EAAM2H,GAAa5vB,EAAS6G,GAClC,IAAK7G,EAAQkvB,QAAU,cAAc1xB,KAAKjX,GAAO,CAC7C,MAAMyO,EAAQ,iEAAiE47B,KAAKrqC,GAC9EksC,EAAUz9B,EAAM,KACjB3K,GAAW9D,EAAM,KAAO,OAAS8D,GAAW9D,EAAM,KAAO,KAAO,QACrE,IAAIqY,EACJ,GAAI5J,EAAM,GAAI,CACV,MAAMw2B,EAAqB,SAAZiH,EACTC,EAAcnsC,EAAKgX,QAAQvI,EAAM,IACjCizB,EAAM2H,GAAa5vB,EAAS2yB,GAAe3yB,EAAS6G,EAAO6rB,GAAcC,GAAe3yB,EAAS6G,EAAO6rB,EAAc19B,EAAM,GAAGjb,QAAWyxC,GAAUx2B,EAAM,IAAO,IAAIjb,SAC3K,IAAIg3B,EAAU/b,EAAM,GAChB+1B,GAAW,EACXha,EAAQ1mB,WAAW,MACnB0gC,GAAW,EACNha,EAAQ6hB,SAAS,MAClB1C,GAAUlwB,EAAS,IAEvB+Q,EAAUA,EAAQub,OAAO,EAAGvb,EAAQh3B,OAAS,IAExCyxC,IAILza,GAAW/b,EAAM,IAAM,IAE3B4J,EAAM,CACF9jB,KAAM,EACNi2B,UACAga,WACAC,WAAYD,EACZ9C,OAGR,GAAI/qC,GAASA,EAAMk1C,SAAU,CACzB,MAAMS,EAAW31C,EAAM+qC,IACvB4K,EAAShsB,MAAMwjB,SACfwI,EAAShsB,MAAMujB,SACfyI,EAASpvB,IAAM8oB,GAAyBsG,EAAShsB,MAAO3pB,EAAM6zB,SAC9D8hB,EAASj8B,OAASi8B,EAASj8B,OAAOzQ,MAAM,GAAI,GAEhD,MAAO,CACHrL,KAAM,EACNyL,KAAMksC,EACNzF,IAAK9vC,GAAS,CACVpC,KAAM,EACNi2B,QAAS7zB,EAAM6zB,QACfga,UAAU,EAGVC,YAAY,EACZ/C,IAAK/qC,EAAM+qC,KAEfrpB,MACAC,UAAW7J,EAAM,GAAKA,EAAM,GAAGs3B,OAAO,GAAGhvB,MAAM,KAAO,GACtD2qB,OAGR,MAAO,CACHntC,KAAM,EACNyL,OACArJ,MAAOA,GAAS,CACZpC,KAAM,EACNi2B,QAAS7zB,EAAM6zB,QACfkX,IAAK/qC,EAAM+qC,KAEfA,OAmCR,SAASgI,GAAmBjwB,EAAShP,GACjC,MAAOrL,EAAMC,GAASoa,EAAQ/mB,QAAQ29B,WAChCoa,EAAahxB,EAAQpJ,OAAO2G,QAAQ3X,EAAOD,EAAK5L,QACtD,IAAoB,IAAhBi3C,EAEA,YADAd,GAAUlwB,EAAS,IAGvB,MAAM6G,EAAQuoB,GAAUpvB,GACxBswB,GAAUtwB,EAASra,EAAK5L,QACxB,MAAM+4C,EAAa1D,GAAUpvB,GACvB+yB,EAAW3D,GAAUpvB,GACrBgzB,EAAmBhC,EAAarrC,EAAK5L,OACrCk5C,EAAajzB,EAAQpJ,OAAOzQ,MAAM,EAAG6sC,GACrCE,EAAiBZ,GAActyB,EAASgzB,EAAkBhiC,GAC1D+f,EAAUmiB,EAAexQ,OACzBgQ,EAAcQ,EAAe31B,QAAQwT,GACvC2hB,EAAc,GACdhG,GAA4BoG,EAAYG,EAAYP,GAKxD,OAFAhG,GAA4BqG,EAAUE,EADpBD,GAAoBE,EAAen5C,OAASg3B,EAAQh3B,OAAS24C,IAE/EpC,GAAUtwB,EAASpa,EAAM7L,QAClB,CACHe,KAAM,EACNi2B,QAAS,CACLj2B,KAAM,EACNiwC,UAAU,EAEVC,YAAY,EACZja,UACAkX,IAAK2H,GAAa5vB,EAAS8yB,EAAYC,IAE3C9K,IAAK2H,GAAa5vB,EAAS6G,IAGnC,SAAS4pB,GAAUzwB,EAAShP,GACxB,MAAMmiC,EAAY,CAAC,IAAKnzB,EAAQ/mB,QAAQ29B,WAAW,IACtC,IAAT5lB,GACAmiC,EAAUx5C,KAAK,OAEnB,IAAI04C,EAAWryB,EAAQpJ,OAAO7c,OAC9B,IAAK,IAAIS,EAAI,EAAGA,EAAI24C,EAAUp5C,OAAQS,IAAK,CACvC,MAAM2O,EAAQ6W,EAAQpJ,OAAO2G,QAAQ41B,EAAU34C,GAAI,IACpC,IAAX2O,GAAgBkpC,EAAWlpC,IAC3BkpC,EAAWlpC,GAGnB,MAAM0d,EAAQuoB,GAAUpvB,GAExB,MAAO,CACHllB,KAAM,EACNi2B,QAHYuhB,GAActyB,EAASqyB,EAAUrhC,GAI7Ci3B,IAAK2H,GAAa5vB,EAAS6G,IAOnC,SAASyrB,GAActyB,EAASjmB,EAAQiX,GACpC,MAAM29B,EAAU3uB,EAAQpJ,OAAOzQ,MAAM,EAAGpM,GAExC,OADAu2C,GAAUtwB,EAASjmB,GACN,IAATiX,GACS,IAATA,IAC0B,IAA1B29B,EAAQpxB,QAAQ,KACToxB,EAIA3uB,EAAQ/mB,QAAQy1C,eAAeC,EAAkB,IAAT39B,GAGvD,SAASo+B,GAAUpvB,GACf,MAAM,OAAEoqB,EAAM,KAAED,EAAI,OAAEE,GAAWrqB,EACjC,MAAO,CAAEoqB,SAAQD,OAAME,UAE3B,SAASuF,GAAa5vB,EAAS6G,EAAOpD,GAElC,MAAO,CACHoD,QACApD,IAHJA,EAAMA,GAAO2rB,GAAUpvB,GAInBpJ,OAAQoJ,EAAQgvB,eAAe7oC,MAAM0gB,EAAMwjB,OAAQ5mB,EAAI4mB,SAG/D,SAAS1vC,GAAKy4C,GACV,OAAOA,EAAGA,EAAGr5C,OAAS,GAE1B,SAASsQ,GAAWuM,EAAQy8B,GACxB,OAAOz8B,EAAOvM,WAAWgpC,GAE7B,SAAS/C,GAAUtwB,EAASysB,GACxB,MAAM,OAAE71B,GAAWoJ,EACnB0sB,GAA4B1sB,EAASpJ,EAAQ61B,GAC7CzsB,EAAQpJ,OAASA,EAAOzQ,MAAMsmC,GAElC,SAASgF,GAAczxB,GACnB,MAAMhL,EAAQ,gBAAgB47B,KAAK5wB,EAAQpJ,QACvC5B,GACAs7B,GAAUtwB,EAAShL,EAAM,GAAGjb,QAGpC,SAAS44C,GAAe3yB,EAAS6G,EAAO4lB,GACpC,OAAOF,GAAyB1lB,EAAO7G,EAAQgvB,eAAe7oC,MAAM0gB,EAAMwjB,OAAQoC,GAAqBA,GAE3G,SAASyD,GAAUlwB,EAASgoB,EAAMqC,EAAQpC,EAAMmH,GAAUpvB,IAClDqqB,IACApC,EAAIoC,QAAUA,EACdpC,EAAImC,QAAUC,GAElBrqB,EAAQ/mB,QAAQ0+B,QAAQoQ,GAAoBC,EAAM,CAC9CnhB,MAAOohB,EACPxkB,IAAKwkB,EACLrxB,OAAQ,MAGhB,SAASo5B,GAAMhwB,EAAShP,EAAM6+B,GAC1B,MAAM59B,EAAI+N,EAAQpJ,OAClB,OAAQ5F,GACJ,KAAK,EACD,GAAI3G,GAAW4H,EAAG,MAEd,IAAK,IAAIzX,EAAIq1C,EAAU91C,OAAS,EAAGS,GAAK,IAAKA,EACzC,GAAI+2C,GAAqBt/B,EAAG49B,EAAUr1C,GAAGo/B,KACrC,OAAO,EAInB,MACJ,KAAK,EACL,KAAK,EAAiB,CAClB,MAAM30B,EAAStK,GAAKk1C,GACpB,GAAI5qC,GAAUssC,GAAqBt/B,EAAGhN,EAAO20B,KACzC,OAAO,EAEX,MAEJ,KAAK,EACD,GAAIvvB,GAAW4H,EAAG,OACd,OAAO,EAInB,OAAQA,EAEZ,SAASs/B,GAAqB36B,EAAQgjB,GAClC,OAAQvvB,GAAWuM,EAAQ,OACvBA,EAAO01B,OAAO,EAAG1S,EAAI7/B,QAAQqR,gBAAkBwuB,EAAIxuB,eACnD,gBAAgBoS,KAAK5G,EAAO,EAAIgjB,EAAI7/B,SAAW,KAGvD,SAAS,GAAYyS,EAAMwT,IAY3B,SAAS,EAAK5P,EAAM4P,EAASszB,EAAaC,GAAiB,GACvD,IAAIC,GAAiB,EASjBC,GAAqB,EACzB,MAAM,SAAEtmC,GAAaiD,EACrB,IAAK,IAAI5V,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IAAK,CACtC,MAAM6S,EAAQF,EAAS3S,GAEvB,GAAmB,IAAf6S,EAAMvS,MACY,IAAlBuS,EAAMkgC,QAA6B,CACnC,IAAImG,EACJ,IAAKH,IACAG,EAAaC,GAActmC,EAAOimC,IAAgB,EAAG,CACnC,IAAfI,IACAD,GAAqB,GAEzBpmC,EAAMoiC,YAAYt0B,UACd,KACJ9N,EAAMoiC,YAAczvB,EAAQ4zB,MAAMvmC,EAAMoiC,aACxC+D,GAAiB,EACjB,SAEC,CAGD,MAAM/D,EAAcpiC,EAAMoiC,YAC1B,GAAyB,KAArBA,EAAY30C,KAA8B,CAC1C,MAAMy2B,EAAOsiB,GAAapE,GAC1B,KAAMle,GACO,MAATA,GACS,IAATA,GACCuiB,GAAqBzmC,IAAQ,CAC9B,MAAMxH,EAAQkuC,GAAa1mC,GACvBxH,IACA4pC,EAAY5pC,MAAQma,EAAQ4zB,MAAM/tC,YAMjD,GAAmB,KAAfwH,EAAMvS,KAA6B,CACxC,MAAM44C,EAAaC,GAActmC,EAAM0jB,QAASuiB,GAC5CI,EAAa,IACM,IAAfA,IACAD,GAAqB,GAEzBpmC,EAAMoiC,YAAczvB,EAAQ4zB,MAAMvmC,EAAMoiC,aACxC+D,GAAiB,GAIzB,GAAmB,IAAfnmC,EAAMvS,KACN,EAAKuS,EAAO2S,EAASszB,QAEpB,GAAmB,KAAfjmC,EAAMvS,KAEX,EAAKuS,EAAO2S,EAASszB,EAAuC,IAA1BjmC,EAAMF,SAASpT,aAEhD,GAAmB,IAAfsT,EAAMvS,KACX,IAAK,IAAIN,EAAI,EAAGA,EAAI6S,EAAM2mC,SAASj6C,OAAQS,IAEvC,EAAK6S,EAAM2mC,SAASx5C,GAAIwlB,EAASszB,EAAmD,IAAtCjmC,EAAM2mC,SAASx5C,GAAG2S,SAASpT,SAIhF05C,GAAsBD,GAAkBxzB,EAAQi0B,gBACjDj0B,EAAQi0B,eAAe9mC,EAAU6S,EAAS5P,GApF9C,CAAK5D,EAAMwT,EAAS,IAAI7kB,IAGxB+4C,GAAoB1nC,EAAMA,EAAKW,SAAS,KAE5C,SAAS+mC,GAAoB1nC,EAAMa,GAC/B,MAAM,SAAEF,GAAaX,EACrB,OAA4B,IAApBW,EAASpT,QACE,IAAfsT,EAAMvS,OACL0yC,GAAangC,GA8EtB,SAASsmC,GAAcvjC,EAAMkjC,EAAc,IAAIn4C,KAC3C,OAAQiV,EAAKtV,MACT,KAAK,EACD,GAAqB,IAAjBsV,EAAKm9B,QACL,OAAO,EAEX,MAAMlxB,EAASi3B,EAAYr4C,IAAImV,GAC/B,QAAe5W,IAAX6iB,EACA,OAAOA,EAEX,MAAMozB,EAAcr/B,EAAKq/B,YACzB,GAAyB,KAArBA,EAAY30C,KACZ,OAAO,EAGX,GADa+4C,GAAapE,IACZqE,GAAqB1jC,GAqC/B,OADAkjC,EAAYp4C,IAAIkV,EAAM,GACf,EArC+B,CAEtC,IAAI+jC,EAAa,EACjB,IAAK,IAAI35C,EAAI,EAAGA,EAAI4V,EAAKjD,SAASpT,OAAQS,IAAK,CAC3C,MAAM45C,EAAYT,GAAcvjC,EAAKjD,SAAS3S,GAAI84C,GAClD,GAAkB,IAAdc,EAEA,OADAd,EAAYp4C,IAAIkV,EAAM,GACf,EAEY,IAAdgkC,IACLD,EAAa,GAIrB,GAAmB,IAAfA,EACA,IAAK,IAAI35C,EAAI,EAAGA,EAAI4V,EAAKvK,MAAM9L,OAAQS,IAAK,CACxC,MAAMgO,EAAI4H,EAAKvK,MAAMrL,GACN,IAAXgO,EAAE1N,MACS,SAAX0N,EAAEjC,MACFiC,EAAEwkC,MACc,IAAfxkC,EAAEwkC,IAAIlyC,MACH0N,EAAEwkC,IAAIqH,qBACVF,EAAa,GAWzB,OAJI1E,EAAYlF,UACZkF,EAAYlF,SAAU,GAE1B+I,EAAYp4C,IAAIkV,EAAM+jC,GACfA,EAMf,KAAK,EACL,KAAK,EACD,OAAO,EACX,KAAK,EACL,KAAK,GACL,KAAK,GACD,OAAO,EACX,KAAK,EACL,KAAK,GACD,OAAOR,GAAcvjC,EAAK2gB,QAASuiB,GACvC,KAAK,EACD,OAAOljC,EAAK46B,WACN56B,EAAKikC,kBACD,EACA,EACJ,EACV,KAAK,EACD,IAAIF,EAAa,EACjB,IAAK,IAAI35C,EAAI,EAAGA,EAAI4V,EAAKjD,SAASpT,OAAQS,IAAK,CAC3C,MAAM6S,EAAQ+C,EAAKjD,SAAS3S,GAC5B,GAAI,YAAS6S,IAAU,YAASA,GAC5B,SAEJ,MAAM+mC,EAAYT,GAActmC,EAAOimC,GACvC,GAAkB,IAAdc,EACA,OAAO,EAEY,IAAdA,IACLD,EAAa,GAGrB,OAAOA,EACX,QAEI,OAAO,GASnB,SAASL,GAAqB1jC,GAC1B,MAAMvK,EAAQkuC,GAAa3jC,GAC3B,GAAIvK,GAAwB,KAAfA,EAAM/K,KAAwC,CACvD,MAAM,WAAE8vC,GAAe/kC,EACvB,IAAK,IAAIrL,EAAI,EAAGA,EAAIowC,EAAW7wC,OAAQS,IAAK,CACxC,MAAM,IAAEO,EAAG,MAAEmC,GAAU0tC,EAAWpwC,GAClC,GAAiB,IAAbO,EAAID,OACHC,EAAIgwC,UACW,IAAf7tC,EAAMpC,OACDoC,EAAM6tC,WAAa7tC,EAAM8tC,WAC/B,OAAO,GAInB,OAAO,EAEX,SAAS+I,GAAa3jC,GAClB,MAAMq/B,EAAcr/B,EAAKq/B,YACzB,GAAyB,KAArBA,EAAY30C,KACZ,OAAO20C,EAAY5pC,MAG3B,SAASguC,GAAazjC,GAClB,MAAMmhB,EAAOnhB,EAAK+K,UAClB,OAAOoW,EAAOpU,SAASoU,EAAM,SAAM/3B,EAGvC,SAAS86C,GAAuB9nC,GAAM,kBAAE+nC,GAAoB,EAAK,YAAEC,GAAc,EAAK,cAAEC,GAAgB,EAAK,eAAEC,EAAiB,GAAE,oBAAEC,EAAsB,GAAE,eAAEV,EAAiB,KAAI,mBAAEnC,EAAqB,IAAI,gBAAEpyB,EAAkB,IAAI,kBAAEk1B,EAAoB,GAAE,QAAExuB,EAAU,KAAI,IAAEyuB,GAAM,EAAK,WAAEC,EAAa,GAAE,gBAAEC,EAAkB,GAAE,QAAEpd,EAAUmQ,KAC1U,MAAM9nB,EAAU,CAEZu0B,oBACAC,cACAC,gBACAC,iBACAC,sBACAV,iBACAnC,qBACApyB,kBACAk1B,oBACAxuB,UACAyuB,MACAC,aACAC,kBACApd,UAEAnrB,OACA6iC,QAAS,IAAIh0C,IACbskB,WAAY,IAAItkB,IAChBojB,WAAY,IAAIpjB,IAChBi0C,OAAQ,GACRC,QAAS,IAAIl0C,IACbm0C,MAAO,EACPnzB,OAAQ,EACR24B,YAAah5C,OAAOwU,OAAO,MAC3BykC,OAAQ,CACJC,KAAM,EACNC,MAAO,EACPC,KAAM,EACNC,MAAO,GAEXpwC,OAAQ,KACRqwC,YAAa9oC,EACb+oC,WAAY,EAEZ/K,OAAOjkC,IACHyZ,EAAQqvB,QAAQ9zC,IAAIgL,GACbA,GAEXivC,aAAajvC,GACF,IAAI0jC,GAAcjqB,EAAQwqB,OAAOjkC,IAE5C,YAAY6J,GAUR4P,EAAQ/a,OAAOkI,SAAS6S,EAAQu1B,YAAcv1B,EAAQs1B,YAAcllC,GAExE,WAAWA,GAIP,MAAMqlC,EAAOz1B,EAAQ/a,OAAOkI,SACtBuoC,EAAetlC,EACfqlC,EAAKl4B,QAAQnN,GACb4P,EAAQs1B,YACJt1B,EAAQu1B,YACP,EAKNnlC,GAAQA,IAAS4P,EAAQs1B,YAOtBt1B,EAAQu1B,WAAaG,IACrB11B,EAAQu1B,aACRv1B,EAAQ21B,kBAPZ31B,EAAQs1B,YAAc,KACtBt1B,EAAQ21B,iBASZ31B,EAAQ/a,OAAOkI,SAASs2B,OAAOiS,EAAc,IAEjDC,cAAe,OACf,eAAe3I,KAEf,kBAAkBA,KAElB,MAAMA,GACFhtB,EAAQsvB,OAAO31C,KAAKqzC,GACpB,MAAM4I,EAAa9K,GAAuB,YAAY9qB,EAAQsvB,OAAOv1C,QAAU,EAAOizC,EAAI/E,KAAK,GAE/F,OADA2N,EAAWC,QAAU7I,EACd4I,GAEXj6B,MAAK,CAACqxB,EAAK1/B,GAAU,IArvC7B,SAA+BnE,EAAOjM,EAAOoQ,GAAU,GACnD,MAAO,CACHxS,KAAM,GACNqO,QACAjM,QACAoQ,UACA26B,IAAKiC,IAgvCM4L,GAAwB91B,EAAQ3D,OAAQ2wB,EAAK1/B,IAG5D,OAAO0S,EAEX,SAASshB,GAAU90B,EAAMvT,GACrB,MAAM+mB,EAAUs0B,GAAuB9nC,EAAMvT,GAC7C88C,GAAavpC,EAAMwT,GACf/mB,EAAQu7C,aACR,GAAYhoC,EAAMwT,GAEjB/mB,EAAQ47C,KAYjB,SAA2BroC,EAAMwT,GAC7B,MAAM,OAAEwqB,GAAWxqB,GACb,SAAE7S,GAAaX,EACrB,GAAwB,IAApBW,EAASpT,OAAc,CACvB,MAAMsT,EAAQF,EAAS,GAEvB,GAAI+mC,GAAoB1nC,EAAMa,IAAUA,EAAMoiC,YAAa,CAGvD,MAAMA,EAAcpiC,EAAMoiC,YACD,KAArBA,EAAY30C,OACZ20C,EAAYlF,SAAU,EACtBC,EAAO9B,IACP8B,EAAO7B,KAEXn8B,EAAKijC,YAAcA,OAMnBjjC,EAAKijC,YAAcpiC,OAGlBF,EAASpT,OAAS,IAEvByS,EAAKijC,YAAcnF,GAAgBtqB,EAASwqB,EAAOnC,SAAW7uC,EAAWgT,EAAKW,SAAU,SAAkC,IAAe,cAAgC3T,OAAWA,GAAW,IArC/Lw8C,CAAkBxpC,EAAMwT,GAG5BxT,EAAK6iC,QAAU,IAAIrvB,EAAQqvB,SAC3B7iC,EAAKmT,WAAa,IAAIK,EAAQL,YAC9BnT,EAAKiS,WAAa,IAAIuB,EAAQvB,YAC9BjS,EAAK+iC,QAAU,IAAIvvB,EAAQuvB,SAC3B/iC,EAAK8iC,OAAStvB,EAAQsvB,OACtB9iC,EAAKgjC,MAAQxvB,EAAQwvB,MACrBhjC,EAAK6P,OAAS2D,EAAQ3D,OA+C1B,SAAS05B,GAAa3lC,EAAM4P,GACxBA,EAAQs1B,YAAcllC,EAEtB,MAAM,eAAEskC,GAAmB10B,EACrBi2B,EAAU,GAChB,IAAK,IAAIz7C,EAAI,EAAGA,EAAIk6C,EAAe36C,OAAQS,IAAK,CAC5C,MAAM07C,EAASxB,EAAel6C,GAAG4V,EAAM4P,GASvC,GARIk2B,IACI,YAAQA,GACRD,EAAQt8C,QAAQu8C,GAGhBD,EAAQt8C,KAAKu8C,KAGhBl2B,EAAQs1B,YAET,OAIAllC,EAAO4P,EAAQs1B,YAGvB,OAAQllC,EAAKtV,MACT,KAAK,EACIklB,EAAQ60B,KAGT70B,EAAQwqB,OAAO3B,IAEnB,MACJ,KAAK,EAEI7oB,EAAQ60B,KACT70B,EAAQwqB,OAAOjB,IAEnB,MAEJ,KAAK,EACD,IAAK,IAAI/uC,EAAI,EAAGA,EAAI4V,EAAK4jC,SAASj6C,OAAQS,IACtCu7C,GAAa3lC,EAAK4jC,SAASx5C,GAAIwlB,GAEnC,MACJ,KAAK,GACL,KAAK,GACL,KAAK,EACL,KAAK,GA9Db,SAA0B/a,EAAQ+a,GAC9B,IAAIxlB,EAAI,EACR,MAAM27C,EAAc,KAChB37C,KAEJ,KAAOA,EAAIyK,EAAOkI,SAASpT,OAAQS,IAAK,CACpC,MAAM6S,EAAQpI,EAAOkI,SAAS3S,GAC1B,YAAS6S,KAEb2S,EAAQ/a,OAASA,EACjB+a,EAAQu1B,WAAa/6C,EACrBwlB,EAAQ21B,cAAgBQ,EACxBJ,GAAa1oC,EAAO2S,KAmDhBo2B,CAAiBhmC,EAAM4P,GAI/BA,EAAQs1B,YAAcllC,EACtB,IAAI5V,EAAIy7C,EAAQl8C,OAChB,KAAOS,KACHy7C,EAAQz7C,KAGhB,SAAS67C,GAAmC9vC,EAAMvN,GAC9C,MAAMs9C,EAAU,YAAS/vC,GAClBoK,GAAMA,IAAMpK,EACZoK,GAAMpK,EAAKiX,KAAK7M,GACvB,MAAO,CAACP,EAAM4P,KACV,GAAkB,IAAd5P,EAAKtV,KAA0B,CAC/B,MAAM,MAAE+K,GAAUuK,EAGlB,GAAqB,IAAjBA,EAAKm9B,SAAgC1nC,EAAM6G,KAAK2gC,IAChD,OAEJ,MAAM4I,EAAU,GAChB,IAAK,IAAIz7C,EAAI,EAAGA,EAAIqL,EAAM9L,OAAQS,IAAK,CACnC,MAAMia,EAAO5O,EAAMrL,GACnB,GAAkB,IAAdia,EAAK3Z,MAA8Bw7C,EAAQ7hC,EAAKlO,MAAO,CAIvDV,EAAM49B,OAAOjpC,EAAG,GAChBA,IACA,MAAM07C,EAASl9C,EAAGoX,EAAMqE,EAAMuL,GAC1Bk2B,GACAD,EAAQt8C,KAAKu8C,IAGzB,OAAOD,IAmDnB,SAASM,GAASC,EAAKv9C,EAAU,IAC7B,MAAM+mB,EA9CV,SAA8Bw2B,GAAK,KAAExlC,EAAO,WAAU,kBAAEujC,EAA6B,WAATvjC,EAAiB,UAAEylC,GAAY,EAAK,SAAEC,EAAW,oBAAmB,QAAEtwB,EAAU,KAAI,gBAAEuwB,GAAkB,EAAK,kBAAEC,EAAoB,MAAK,kBAAEC,EAAoB,MAAK,IAAEhC,GAAM,IACnP,MAAM70B,EAAU,CACZhP,OACAujC,oBACAkC,YACAC,WACAtwB,UACAuwB,kBACAC,oBACAC,oBACAhC,MACAj+B,OAAQ4/B,EAAIvO,IAAIrxB,OAChBoxB,KAAM,GACNoC,OAAQ,EACRD,KAAM,EACNE,OAAQ,EACRyM,YAAa,EACbC,MAAM,EACN76C,SAAK1C,EACLgxC,OAAOzvC,GACI,IAAIkvC,GAAclvC,GAE7B,KAAKitC,EAAM53B,GACP4P,EAAQgoB,MAAQA,GAEpB,SACIuD,IAAUvrB,EAAQ82B,cAEtB,SAASE,GAAiB,GAClBA,IACEh3B,EAAQ82B,YAGVvL,IAAUvrB,EAAQ82B,cAG1B,UACIvL,EAAQvrB,EAAQ82B,eAGxB,SAASvL,EAAQ56B,GACbqP,EAAQrmB,KAAK,KAAO,KAAKs9C,OAAOtmC,IAEpC,OAAOqP,EAGSk3B,CAAqBV,EAAKv9C,GACtCA,EAAQk+C,kBACRl+C,EAAQk+C,iBAAiBn3B,GAC7B,MAAM,KAAEhP,EAAI,KAAErX,EAAI,kBAAE46C,EAAiB,OAAE6C,EAAM,SAAEC,EAAQ,QAAE9L,EAAO,QAAEnlB,EAAO,IAAEyuB,GAAQ70B,EAC7Es3B,EAAad,EAAInH,QAAQt1C,OAAS,EAClCw9C,GAAgBhD,GAA8B,WAATvjC,GA4E/C,SAA6BwlC,EAAKx2B,GAC9B,MAAM,IAAE60B,EAAG,kBAAEN,EAAiB,KAAE56C,EAAI,QAAE4xC,EAAO,kBAAEsL,EAAiB,kBAAED,GAAsB52B,EAClFw3B,EAAcZ,EACda,EAAexlC,GAAM,GAAGg4B,GAAch4B,QAAQg4B,GAAch4B,KAKlE,GAAIukC,EAAInH,QAAQt1C,OAAS,IAIjBJ,EAAK,gBAAgB69C,OAIjBhB,EAAIlH,OAAOv1C,QAAQ,CACnB,MAAM29C,EAAgB,CAClB9O,GACAC,GACAC,GACAC,IAEC5sC,OAAOquC,GAAUgM,EAAInH,QAAQ51C,SAAS+wC,IACtCtuC,IAAIu7C,GACJryC,KAAK,MACVzL,EAAK,WAAW+9C,iBAkBhC,SAAmBpI,EAAQtvB,GACvB,IAAKsvB,EAAOv1C,OACR,OAEJimB,EAAQ+2B,MAAO,EACf,MAAM,KAAEp9C,EAAI,QAAE4xC,EAAO,OAAEf,EAAM,QAAEpkB,EAAO,KAAEpV,GAASgP,EACjDurB,IACA+D,EAAOxzC,QAAQ,CAACkxC,EAAKxyC,KACbwyC,IACArzC,EAAK,kBAAkBa,EAAI,QAC3Bm9C,GAAQ3K,EAAKhtB,GACburB,OAGRvrB,EAAQ+2B,MAAO,GA5Bfa,CAAUpB,EAAIlH,OAAQtvB,GACtBurB,IACA5xC,EAAK,WAzGDk+C,CAAoBrB,EAAKx2B,GAG7B,MAAM83B,EAAkB7+C,EAAQ87C,gBAC1B,oCACA,GAmCN,GA7BIp7C,EAJCk7C,EAII,kDAAkDiD,OAHlD,+BAA+BA,QAKxCV,IACIG,IACA59C,EAAK,iBACLy9C,IAGIE,IACA39C,EAAK,WAAW68C,EAAInH,QACfnzC,IAAI+V,GAAK,GAAGg4B,GAAch4B,QAAQg4B,GAAch4B,MAChD7M,KAAK,kBACVzL,EAAK,MACL4xC,MAIJiL,EAAI72B,WAAW5lB,SACfg+C,GAAUvB,EAAI72B,WAAY,YAAaK,IACnCw2B,EAAI/3B,WAAW1kB,QAAUy8C,EAAIhH,MAAQ,IACrCjE,KAGJiL,EAAI/3B,WAAW1kB,SACfg+C,GAAUvB,EAAI/3B,WAAY,YAAauB,GACnCw2B,EAAIhH,MAAQ,GACZjE,KAGJiL,EAAIhH,MAAQ,EAAG,CACf71C,EAAK,QACL,IAAK,IAAIa,EAAI,EAAGA,EAAIg8C,EAAIhH,MAAOh1C,IAC3Bb,EAAK,GAAGa,EAAI,EAAI,KAAO,UAAUA,KAuBzC,OApBIg8C,EAAI72B,WAAW5lB,QAAUy8C,EAAI/3B,WAAW1kB,QAAUy8C,EAAIhH,SACtD71C,EAAK,MACL4xC,KAGCsJ,GACDl7C,EAAK,WAEL68C,EAAI/G,YACJkI,GAAQnB,EAAI/G,YAAazvB,GAGzBrmB,EAAK,QAEL49C,IACAF,IACA19C,EAAK,MAET09C,IACA19C,EAAK,KACE,CACH68C,MACAxO,KAAMhoB,EAAQgoB,KAEd9rC,IAAK8jB,EAAQ9jB,IAAM8jB,EAAQ9jB,IAAI87C,cAAWx+C,GAqClD,SAASu+C,GAAUE,EAAQn9C,GAAM,OAAE0vC,EAAM,KAAE7wC,EAAI,QAAE4xC,IAC7C,MAAM2M,EAAW1N,EAAgB,cAAT1vC,EAAuBkuC,GAAoBE,IACnE,IAAK,IAAI1uC,EAAI,EAAGA,EAAIy9C,EAAOl+C,OAAQS,IAAK,CACpC,MAAMR,EAAKi+C,EAAOz9C,GAClBb,EAAK,SAASk0C,GAAe7zC,EAAIc,QAAWo9C,KAAY7xC,KAAKC,UAAUtM,OACnEQ,EAAIy9C,EAAOl+C,OAAS,GACpBwxC,KA2BZ,SAAS4M,GAAmBpI,EAAO/vB,GAC/B,MAAMo4B,EAAarI,EAAMh2C,OAAS,IAC7B,EACLimB,EAAQrmB,KAAK,KACby+C,GAAcp4B,EAAQo3B,SACtBiB,GAAYtI,EAAO/vB,EAASo4B,GAC5BA,GAAcp4B,EAAQq3B,WACtBr3B,EAAQrmB,KAAK,KAEjB,SAAS0+C,GAAYtI,EAAO/vB,EAASo4B,GAAa,EAAOE,GAAQ,GAC7D,MAAM,KAAE3+C,EAAI,QAAE4xC,GAAYvrB,EAC1B,IAAK,IAAIxlB,EAAI,EAAGA,EAAIu1C,EAAMh2C,OAAQS,IAAK,CACnC,MAAM4V,EAAO2/B,EAAMv1C,GACf,YAAS4V,GACTzW,EAAKyW,GAEA,YAAQA,GACb+nC,GAAmB/nC,EAAM4P,GAGzB23B,GAAQvnC,EAAM4P,GAEdxlB,EAAIu1C,EAAMh2C,OAAS,IACfq+C,GACAE,GAAS3+C,EAAK,KACd4xC,KAGA+M,GAAS3+C,EAAK,QAK9B,SAASg+C,GAAQvnC,EAAM4P,GACnB,GAAI,YAAS5P,GACT4P,EAAQrmB,KAAKyW,QAGjB,GAAI,YAASA,GACT4P,EAAQrmB,KAAKqmB,EAAQwqB,OAAOp6B,SAGhC,OAAQA,EAAKtV,MACT,KAAK,EACL,KAAK,EACL,KAAK,GAID68C,GAAQvnC,EAAKq/B,YAAazvB,GAC1B,MACJ,KAAK,GAiEb,SAAiB5P,EAAM4P,GACnBA,EAAQrmB,KAAK0M,KAAKC,UAAU8J,EAAK2gB,SAAU3gB,GAjEnCmoC,CAAQnoC,EAAM4P,GACd,MACJ,KAAK,EACDw4B,GAAcpoC,EAAM4P,GACpB,MACJ,KAAK,GAkEb,SAA0B5P,EAAM4P,GAC5B,MAAM,KAAErmB,EAAI,OAAE6wC,EAAM,KAAEuM,GAAS/2B,EAC3B+2B,GACAp9C,EAjUgB,iBAkUpBA,EAAQ6wC,EAAOjB,IAAV,KACLoO,GAAQvnC,EAAK2gB,QAAS/Q,GACtBrmB,EAAK,KAvEG8+C,CAAiBroC,EAAM4P,GACvB,MACJ,KAAK,GACD23B,GAAQvnC,EAAKq/B,YAAazvB,GAC1B,MACJ,KAAK,EACD04B,GAAsBtoC,EAAM4P,GAC5B,MACJ,KAAK,EAED,MACJ,KAAK,IAoGb,SAAsB5P,EAAM4P,GACxB,MAAM,KAAErmB,EAAI,OAAE6wC,EAAM,KAAEuM,GAAS/2B,GACzB,IAAE4Z,EAAG,MAAE/zB,EAAK,SAAEsH,EAAQ,UAAEgO,EAAS,aAAEmM,EAAY,WAAE7I,EAAU,QAAE8rB,EAAO,gBAAEza,GAAoB1f,EAC5FqO,GACA9kB,EAAK6wC,EAAOrB,IAAmB,KAE/BoB,GACA5wC,EAAK,IAAI6wC,EAAO9B,OAAe5Y,EAAkB,OAAS,SAE1DinB,GACAp9C,EAtXgB,iBAwXpBA,EAAK6wC,EAAOD,EAAU5B,GAAeC,IAAgB,IAAKx4B,GAC1DioC,GAWJ,SAAyB76C,GACrB,IAAIhD,EAAIgD,EAAKzD,OACb,KAAOS,KACY,MAAXgD,EAAKhD,KAGb,OAAOgD,EAAK2I,MAAM,EAAG3L,EAAI,GAAG0B,IAAI0iB,GAAOA,GAAO,QAjBlC+5B,CAAgB,CAAC/e,EAAK/zB,EAAOsH,EAAUgO,EAAWmM,IAAgBtH,GAC9ErmB,EAAK,KACD4wC,GACA5wC,EAAK,KAEL8kB,IACA9kB,EAAK,MACLg+C,GAAQl5B,EAAYuB,GACpBrmB,EAAK,MAxHDi/C,CAAaxoC,EAAM4P,GACnB,MACJ,KAAK,IAkIb,SAA2B5P,EAAM4P,GAC7B,MAAM,KAAErmB,EAAI,OAAE6wC,EAAM,KAAEuM,GAAS/2B,EACzBmrB,EAAS,YAAS/6B,EAAK+6B,QAAU/6B,EAAK+6B,OAASX,EAAOp6B,EAAK+6B,QAC7D4L,GACAp9C,EAjZgB,iBAmZpBA,EAAKwxC,EAAS,IAAK/6B,GACnBioC,GAAYjoC,EAAKmD,UAAWyM,GAC5BrmB,EAAK,KAzIGk/C,CAAkBzoC,EAAM4P,GACxB,MACJ,KAAK,IAyIb,SAA6B5P,EAAM4P,GAC/B,MAAM,KAAErmB,EAAI,OAAEy9C,EAAM,SAAEC,EAAQ,QAAE9L,GAAYvrB,GACtC,WAAE4qB,GAAex6B,EACvB,IAAKw6B,EAAW7wC,OAEZ,YADAJ,EAAK,KAAMyW,GAGf,MAAMgoC,EAAaxN,EAAW7wC,OAAS,IAClC,EAELJ,EAAKy+C,EAAa,IAAM,MACxBA,GAAchB,IACd,IAAK,IAAI58C,EAAI,EAAGA,EAAIowC,EAAW7wC,OAAQS,IAAK,CACxC,MAAM,IAAEO,EAAG,MAAEmC,GAAU0tC,EAAWpwC,GAElCs+C,GAA2B/9C,EAAKilB,GAChCrmB,EAAK,MAELg+C,GAAQz6C,EAAO8iB,GACXxlB,EAAIowC,EAAW7wC,OAAS,IAExBJ,EAAK,KACL4xC,KAGR6M,GAAcf,IACd19C,EAAKy+C,EAAa,IAAM,MAlKhBW,CAAoB3oC,EAAM4P,GAC1B,MACJ,KAAK,IAkKb,SAA4B5P,EAAM4P,GAC9Bm4B,GAAmB/nC,EAAKs6B,SAAU1qB,GAlK1Bg5B,CAAmB5oC,EAAM4P,GACzB,MACJ,KAAK,IAkKb,SAA+B5P,EAAM4P,GACjC,MAAM,KAAErmB,EAAI,OAAEy9C,EAAM,SAAEC,EAAQ,QAAEjxB,EAAO,KAAEpV,GAASgP,GAC5C,OAAEqrB,EAAM,QAAEC,EAAO,KAAElK,EAAI,QAAEmK,EAAO,OAAEC,GAAWp7B,EAC/Co7B,GACA7xC,EAAK,IAAIswC,GAAcD,QAE3BrwC,EAAK,IAAKyW,GACN,YAAQi7B,GACRgN,GAAYhN,EAAQrrB,GAEfqrB,GACLsM,GAAQtM,EAAQrrB,GAEpBrmB,EAAK,UACD4xC,GAAWnK,KACXznC,EAAK,KACLy9C,KAEA9L,GACIC,GACA5xC,EAAK,WAEL,YAAQ2xC,GACR6M,GAAmB7M,EAAStrB,GAG5B23B,GAAQrM,EAAStrB,IAGhBohB,GACLuW,GAAQvW,EAAMphB,IAEdurB,GAAWnK,KACXiW,IACA19C,EAAK,MAEJ6xC,GACD7xC,EAAK,KAtMDs/C,CAAsB7oC,EAAM4P,GAC5B,MACJ,KAAK,IAuMb,SAAkC5P,EAAM4P,GACpC,MAAM,KAAExC,EAAI,WAAEkuB,EAAU,UAAEC,EAAWJ,QAAS2N,GAAgB9oC,GACxD,KAAEzW,EAAI,OAAEy9C,EAAM,SAAEC,EAAQ,QAAE9L,GAAYvrB,EAC5C,GAAkB,IAAdxC,EAAK1iB,KAAoC,CACzC,MAAMq+C,GAAelN,GAAmBzuB,EAAKuT,SAC7CooB,GAAex/C,EAAK,KACpB6+C,GAAch7B,EAAMwC,GACpBm5B,GAAex/C,EAAK,UAGpBA,EAAK,KACLg+C,GAAQn6B,EAAMwC,GACdrmB,EAAK,KAETu/C,GAAe9B,IACfp3B,EAAQ82B,cACRoC,GAAev/C,EAAK,KACpBA,EAAK,MACLg+C,GAAQjM,EAAY1rB,GACpBA,EAAQ82B,cACRoC,GAAe3N,IACf2N,GAAev/C,EAAK,KACpBA,EAAK,MACL,MAAMy/C,EAA8B,KAAnBzN,EAAU7wC,KACtBs+C,GACDp5B,EAAQ82B,cAEZa,GAAQhM,EAAW3rB,GACdo5B,GACDp5B,EAAQ82B,cAEZoC,GAAe7B,GAAS,GArOhBgC,CAAyBjpC,EAAM4P,GAC/B,MACJ,KAAK,IAqOb,SAA4B5P,EAAM4P,GAC9B,MAAM,KAAErmB,EAAI,OAAE6wC,EAAM,OAAE4M,EAAM,SAAEC,EAAQ,QAAE9L,GAAYvrB,EACpDrmB,EAAK,UAAUyW,EAAKjH,eAChBiH,EAAK9C,UACL8pC,IACAz9C,EAAQ6wC,EAAOZ,IAAV,SACL2B,KAEJ5xC,EAAK,UAAUyW,EAAKjH,aACpBwuC,GAAQvnC,EAAKlT,MAAO8iB,GAChB5P,EAAK9C,UACL3T,EAAK,KACL4xC,IACA5xC,EAAQ6wC,EAAOZ,IAAV,QACL2B,IACA5xC,EAAK,UAAUyW,EAAKjH,UACpBkuC,KAEJ19C,EAAK,KAtPG2/C,CAAmBlpC,EAAM4P,GACzB,MAEJ,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAGL,KAAK,GAED,MACJ,QACQ,GAWhB,SAASw4B,GAAcpoC,EAAM4P,GACzB,MAAM,QAAE+Q,EAAO,SAAEga,GAAa36B,EAC9B4P,EAAQrmB,KAAKoxC,EAAW1kC,KAAKC,UAAUyqB,GAAWA,EAAS3gB,GAU/D,SAASsoC,GAAsBtoC,EAAM4P,GACjC,IAAK,IAAIxlB,EAAI,EAAGA,EAAI4V,EAAKjD,SAASpT,OAAQS,IAAK,CAC3C,MAAM6S,EAAQ+C,EAAKjD,SAAS3S,GACxB,YAAS6S,GACT2S,EAAQrmB,KAAK0T,GAGbsqC,GAAQtqC,EAAO2S,IAI3B,SAAS84B,GAA2B1oC,EAAM4P,GACtC,MAAM,KAAErmB,GAASqmB,EACjB,GAAkB,IAAd5P,EAAKtV,KACLnB,EAAK,KACL++C,GAAsBtoC,EAAM4P,GAC5BrmB,EAAK,UAEJ,GAAIyW,EAAK26B,SAAU,CAKpBpxC,EAHasyC,GAAmB77B,EAAK2gB,SAC/B3gB,EAAK2gB,QACL1qB,KAAKC,UAAU8J,EAAK2gB,SACf3gB,QAGXzW,EAAK,IAAIyW,EAAK2gB,WAAY3gB,GAsLN,IAAIoL,OAAO,MACnC,6MAGK8B,MAAM,KACNlY,KAAK,WACV,OAwQJ,MAAMm0C,GAAclD,GAAmC,sBAAuB,CAACjmC,EAAMuO,EAAKqB,IA6B1F,SAAmB5P,EAAMuO,EAAKqB,EAASw5B,GACnC,KAAiB,SAAb76B,EAAIpY,MACFoY,EAAIquB,KAAQruB,EAAIquB,IAAIjc,QAAQ2R,QAAS,CACvC,MAAMuF,EAAMtpB,EAAIquB,IAAMruB,EAAIquB,IAAI/E,IAAM73B,EAAK63B,IACzCjoB,EAAQ2X,QAAQoQ,GAAoB,GAA+BppB,EAAIspB,MACvEtpB,EAAIquB,IAAMlC,GAAuB,QAAQ,EAAO7C,GAEhD,EAGJ,GAAiB,OAAbtpB,EAAIpY,KAAe,CACnB,MAAM4L,EAASsnC,GAAerpC,EAAMuO,GAC9B+6B,EAAS,CACX5+C,KAAM,EACNmtC,IAAK73B,EAAK63B,IACV+L,SAAU,CAAC7hC,IAGf,GADA6N,EAAQ25B,YAAYD,GAChBF,EACA,OAAOA,EAAeE,EAAQvnC,GAAQ,OAGzC,CAED,MAAMynC,EAAW55B,EAAQ/a,OAAOkI,SAEhC,IAAI3S,EAAIo/C,EAASr8B,QAAQnN,GACzB,KAAO5V,OAAQ,GAAG,CACd,MAAMq/C,EAAUD,EAASp/C,GAMzB,IAAIq/C,GACiB,IAAjBA,EAAQ/+C,MACP++C,EAAQ9oB,QAAQ2R,OAAO3oC,OAF5B,CAMA,GAAI8/C,GAA4B,IAAjBA,EAAQ/+C,KAAqB,CAExCklB,EAAQ85B,aACR,MAAM3nC,EAASsnC,GAAerpC,EAAMuO,GAChC,EAcJk7B,EAAQ7F,SAASr6C,KAAKwY,GACtB,MAAM+jC,EAASsD,GAAkBA,EAAeK,EAAS1nC,GAAQ,GAGjE4jC,GAAa5jC,EAAQ6N,GAEjBk2B,GACAA,IAGJl2B,EAAQs1B,YAAc,UAGtBt1B,EAAQ2X,QAAQoQ,GAAoB,GAAkC33B,EAAK63B,MAE/E,MApCIjoB,EAAQ85B,WAAWD,KAjExBE,CAAU3pC,EAAMuO,EAAKqB,EAAS,CAAC05B,EAAQvnC,EAAQzM,KAIlD,MAAMk0C,EAAW55B,EAAQ/a,OAAOkI,SAChC,IAAI3S,EAAIo/C,EAASr8B,QAAQm8B,GACrB3+C,EAAM,EACV,KAAOP,MAAO,GAAG,CACb,MAAMq/C,EAAUD,EAASp/C,GACrBq/C,GAA4B,IAAjBA,EAAQ/+C,OACnBC,GAAO8+C,EAAQ7F,SAASj6C,QAKhC,MAAO,KACH,GAAI2L,EACAg0C,EAAOjK,YAAcuK,GAA2B7nC,EAAQpX,EAAKilB,OAE5D,EAsKjB,SAA4B5P,GACxB,OACI,GAAkB,KAAdA,EAAKtV,KAA6C,CAClD,GAA4B,KAAxBsV,EAAKu7B,UAAU7wC,KAIf,OAAOsV,EAHPA,EAAOA,EAAKu7B,eAMG,KAAdv7B,EAAKtV,OACVsV,EAAOA,EAAKlT,OA/KgB+8C,CAAmBP,EAAOjK,cAClC9D,UAAYqO,GAA2B7nC,EAAQpX,EAAM2+C,EAAO1F,SAASj6C,OAAS,EAAGimB,QAmFjH,SAASy5B,GAAerpC,EAAMuO,GAC1B,MAAO,CACH7jB,KAAM,GACNmtC,IAAK73B,EAAK63B,IACViS,UAAwB,SAAbv7B,EAAIpY,UAAkB/M,EAAYmlB,EAAIquB,IACjD7/B,SAA2B,IAAjBiD,EAAKm9B,SAAiCT,GAAQ18B,EAAM,OAExD,CAACA,GADDA,EAAKjD,SAEXgtC,QAASlN,GAAS78B,EAAM,QAGhC,SAAS4pC,GAA2B7nC,EAAQioC,EAAUp6B,GAClD,OAAI7N,EAAO+nC,UACAzO,GAA4Bt5B,EAAO+nC,UAAWG,GAA0BloC,EAAQioC,EAAUp6B,GAGjGkrB,GAAqBlrB,EAAQwqB,OAAO3B,IAAiB,CACI,KACrD,UAIGwR,GAA0BloC,EAAQioC,EAAUp6B,GAG3D,SAASq6B,GAA0BloC,EAAQioC,EAAUp6B,GACjD,MAAM,OAAEwqB,GAAWxqB,EACbs6B,EAAczP,GAAqB,MAAOC,GAAuB,GAAGsP,GAAY,EAAOlQ,IAAS,KAChG,SAAE/8B,GAAagF,EACfmR,EAAanW,EAAS,GAE5B,GADgD,IAApBA,EAASpT,QAAoC,IAApBupB,EAAWxoB,KACvC,CACrB,GAAwB,IAApBqS,EAASpT,QAAoC,KAApBupB,EAAWxoB,KAAuB,CAE3D,MAAMy/C,EAAYj3B,EAAWmsB,YAE7B,OADAhC,GAAW8M,EAAWD,EAAat6B,GAC5Bu6B,EAGP,OAAOjQ,GAAgBtqB,EAASwqB,EAAOnC,IAAWsC,GAAuB,CAAC2P,IAAentC,EAAU,SAAkC,IAAe,cAAgC3T,OAAWA,GAAW,GAAM,EAAO2Y,EAAO81B,KAGjO,CACD,MAAMsS,EAAYj3B,EACbmsB,YASL,OAPuB,KAAnB8K,EAAUz/C,OACVy/C,EAAUhQ,SAAU,EACpBC,EAAO9B,IACP8B,EAAO7B,KAGX8E,GAAW8M,EAAWD,EAAat6B,GAC5Bu6B,GA2Cf,MAAMC,GAAenE,GAAmC,MAAO,CAACjmC,EAAMuO,EAAKqB,KACvE,MAAM,OAAEwqB,GAAWxqB,EACnB,OA+EJ,SAAoB5P,EAAMuO,EAAKqB,EAASw5B,GACpC,IAAK76B,EAAIquB,IAEL,YADAhtB,EAAQ2X,QAAQoQ,GAAoB,GAAgCppB,EAAIspB,MAG5E,MAAMwS,EAAcC,GAGpB/7B,EAAIquB,IAAKhtB,GACT,IAAKy6B,EAED,YADAz6B,EAAQ2X,QAAQoQ,GAAoB,GAAuCppB,EAAIspB,MAGnF,MAAM,eAAE0S,EAAc,kBAAEC,EAAiB,OAAE3F,GAAWj1B,GAChD,OAAEpJ,EAAM,MAAE1Z,EAAK,IAAEnC,EAAG,MAAEoO,GAAUsxC,EAChCI,EAAU,CACZ//C,KAAM,GACNmtC,IAAKtpB,EAAIspB,IACTrxB,SACAkkC,WAAY59C,EACZ69C,SAAUhgD,EACVigD,iBAAkB7xC,EAClBsxC,cACAttC,SAAUmgC,GAAel9B,GAAQA,EAAKjD,SAAW,CAACiD,IAEtD4P,EAAQ25B,YAAYkB,GAEpB5F,EAAOC,OACP,MAAMgB,EAASsD,GAAkBA,EAAeqB,GAChD,MAAO,KACH5F,EAAOC,OACHgB,GACAA,KA/GD+E,CAAW7qC,EAAMuO,EAAKqB,EAAS66B,IAGlC,MAAMK,EAAYhQ,GAAqBV,EAAOpB,IAAc,CACxDyR,EAAQjkC,SAENukC,EAAUlO,GAAS78B,EAAM,OACzBkqC,EAAca,EACdtQ,GAAqB,MAAwB,IAAjBsQ,EAAQrgD,KAChCgwC,GAAuBqQ,EAAQj+C,MAAM6zB,SAAS,GAC9CoqB,EAAQnO,KACZ,KACAoO,EAA2C,IAAxBP,EAAQjkC,OAAO9b,MACpC+/C,EAAQjkC,OAAOo0B,WACbqQ,EAAeD,EACf,GACAD,EACI,IACA,IAEV,OADAN,EAAQpL,YAAcnF,GAAgBtqB,EAASwqB,EAAOnC,SAAW7uC,EAAW0hD,EAAW,GAAGG,QAAmB,IAAeA,aAAoB7hD,OAAWA,GAAW,GAAqB4hD,EAAwChrC,EAAK63B,KACjO,KAEH,IAAIqT,EACJ,MAAMC,EAAajO,GAAel9B,IAC5B,SAAEjD,GAAa0tC,EAarB,MAAMW,EAA0C,IAApBruC,EAASpT,QAAqC,IAArBoT,EAAS,GAAGrS,KAC3D2gD,EAAajO,GAAap9B,GAC1BA,EACAmrC,GAC2B,IAAzBnrC,EAAKjD,SAASpT,QACdyzC,GAAap9B,EAAKjD,SAAS,IACzBiD,EAAKjD,SAAS,GACd,KACNsuC,GAEAH,EAAaG,EAAWhM,YACpB8L,GAAcjB,GAId7M,GAAW6N,EAAYhB,EAAat6B,IAGnCw7B,EAGLF,EAAahR,GAAgBtqB,EAASwqB,EAAOnC,IAAWiS,EAAc3P,GAAuB,CAAC2P,SAAgB9gD,EAAW4W,EAAKjD,SAAU,SAAkC,IAAe,cAAgC3T,OAAWA,GAAW,IAK/O8hD,EAAanuC,EAAS,GACjBsiC,YACD8L,GAAcjB,GACd7M,GAAW6N,EAAYhB,EAAat6B,GAExCs7B,EAAW/Q,SAAW6Q,EAClBE,EAAW/Q,UACXC,EAAO9B,IACP8B,EAAO7B,MAGfuS,EAAU3nC,UAAU5Z,KAAKyxC,GAAyBsQ,GAAoBb,EAAQJ,aAAca,GAAY,SAwCpH,MAAMK,GAAa,qCAGbC,GAAgB,iCAChBC,GAAgB,WACtB,SAASnB,GAAmBoB,EAAO97B,GAC/B,MAAMioB,EAAM6T,EAAM7T,IACZ+E,EAAM8O,EAAM/qB,QACZgrB,EAAU/O,EAAIh4B,MAAM2mC,IAC1B,IAAKI,EACD,OACJ,MAAO,CAAEC,EAAKC,GAAOF,EACf79C,EAAS,CACX0Y,OAAQslC,GAAsBjU,EAAKgU,EAAIvZ,OAAQsK,EAAIzvB,QAAQ0+B,EAAKD,EAAIjiD,SACpEmD,WAAO1D,EACPuB,SAAKvB,EACL2P,WAAO3P,GAKX,IAAI2iD,EAAeH,EAAItZ,OAClBv3B,QAAQ0wC,GAAe,IACvBnZ,OACL,MAAM0Z,EAAgBJ,EAAIz+B,QAAQ4+B,GAC5BE,EAAgBF,EAAannC,MAAM4mC,IACzC,GAAIS,EAAe,CACfF,EAAeA,EAAahxC,QAAQywC,GAAe,IAAIlZ,OACvD,MAAM4Z,EAAaD,EAAc,GAAG3Z,OACpC,IAAI6Z,EAQJ,GAPID,IACAC,EAAYvP,EAAIzvB,QAAQ++B,EAAYF,EAAgBD,EAAapiD,QACjEmE,EAAOnD,IAAMmhD,GAAsBjU,EAAKqU,EAAYC,IAKpDF,EAAc,GAAI,CAClB,MAAMG,EAAeH,EAAc,GAAG3Z,OAClC8Z,IACAt+C,EAAOiL,MAAQ+yC,GAAsBjU,EAAKuU,EAAcxP,EAAIzvB,QAAQi/B,EAAct+C,EAAOnD,IACnFwhD,EAAYD,EAAWviD,OACvBqiD,EAAgBD,EAAapiD,WAa/C,OANIoiD,IACAj+C,EAAOhB,MAAQg/C,GAAsBjU,EAAKkU,EAAcC,IAKrDl+C,EAEX,SAASg+C,GAAsBO,EAAO1rB,EAASsZ,GAC3C,OAAOS,GAAuB/Z,GAAS,EAAOqb,GAAcqQ,EAAOpS,EAAQtZ,EAAQh3B,SAEvF,SAAS2hD,IAAoB,MAAEx+C,EAAK,IAAEnC,EAAG,MAAEoO,IACvC,MAAMkiC,EAAS,GAmBf,OAlBInuC,GACAmuC,EAAO1xC,KAAKuD,GAEZnC,IACKmC,GACDmuC,EAAO1xC,KAAKmxC,GAAuB,KAAK,IAE5CO,EAAO1xC,KAAKoB,IAEZoO,IACKpO,IACImC,GACDmuC,EAAO1xC,KAAKmxC,GAAuB,KAAK,IAE5CO,EAAO1xC,KAAKmxC,GAAuB,MAAM,KAE7CO,EAAO1xC,KAAKwP,IAETkiC,EAGX,MAAMqR,GAAkB5R,GAAuB,aAAa,GAQtD6R,GAAkB,CAACvsC,EAAM4P,KAC3B,GAAkB,IAAd5P,EAAKtV,OACa,IAAjBsV,EAAKm9B,SACe,IAAjBn9B,EAAKm9B,SAA+B,CAGxC,MAAM4H,EAAQrI,GAAQ18B,EAAM,QAC5B,GAAI+kC,EAAO,CACWA,EAAMnI,IAExB,OADAhtB,EAAQi1B,OAAOE,QACR,KACHn1B,EAAQi1B,OAAOE,YA2BzByH,GAAoB,CAAC/2C,EAAOsH,EAAU86B,IAAQmD,GAAyBvlC,EAAOsH,GAAU,GAAqB,EAAmBA,EAASpT,OAASoT,EAAS,GAAG86B,IAAMA,GAG1K,SAAS4U,GAAWzsC,EAAM4P,EAAS88B,EAAcF,IAC7C58B,EAAQwqB,OAAOR,IACf,MAAM,SAAE78B,EAAQ,IAAE86B,GAAQ73B,EACpB2sC,EAAkB,GAClB5jB,EAAe,GACf6jB,EAA2B,CAACn3C,EAAOsH,IAAa09B,GAAqB,UAAWiS,EAAYj3C,EAAOsH,EAAU86B,IAGnH,IAAIgV,EAAkBj9B,EAAQi1B,OAAOE,MAAQ,GAAKn1B,EAAQi1B,OAAOC,KAAO,EAGxE,MAAMgI,EAAkBpQ,GAAQ18B,EAAM,QAAQ,GAC9C,GAAI8sC,EAAiB,CACjB,MAAM,IAAEt+B,EAAG,IAAEouB,GAAQkQ,EACjBt+B,IAAQgtB,GAAYhtB,KACpBq+B,GAAkB,GAEtBF,EAAgBpjD,KAAKkxC,GAAqBjsB,GAAOksB,GAAuB,WAAW,GAAOgS,EAAY9P,EAAK7/B,EAAU86B,KAIzH,IAAIkV,GAAmB,EACnBC,GAAsB,EAC1B,MAAMC,EAA0B,GAC1BC,EAAgB,IAAIjiD,IAC1B,IAAK,IAAIb,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IAAK,CACtC,MAAM+iD,EAAcpwC,EAAS3S,GAC7B,IAAIgjD,EACJ,IAAKlQ,GAAeiQ,MACdC,EAAU1Q,GAAQyQ,EAAa,QAAQ,IAAQ,CAExB,IAArBA,EAAYziD,MACZuiD,EAAwB1jD,KAAK4jD,GAEjC,SAEJ,GAAIL,EAAiB,CAEjBl9B,EAAQ2X,QAAQoQ,GAAoB,GAAoCyV,EAAQvV,MAChF,MAEJkV,GAAmB,EACnB,MAAQhwC,SAAUswC,EAAcxV,IAAKyV,GAAYH,GACzC3+B,IAAK++B,EAAW7S,GAAuB,WAAW,GAAOkC,IAAK4Q,EAAW3V,IAAK4V,GAAWL,EAEjG,IAAIM,EACAlS,GAAY+R,GACZG,EAAiBH,EAAWA,EAAS5sB,QAAU,UAG/CksB,GAAkB,EAEtB,MAAMc,EAAejB,EAAYc,EAAWH,EAAcC,GAE1D,IAAIM,EACAC,EACA/I,EACJ,GAAK8I,EAAMlR,GAAQyQ,EAAa,MAC5BN,GAAkB,EAClB9jB,EAAax/B,KAAK8xC,GAA4BuS,EAAIhR,IAAKkR,GAAiBP,EAAUI,GAAerB,UAEhG,GAAKuB,EAAQnR,GAAQyQ,EAAa,gBAAgB,GAAyB,CAE5E,IACIh2B,EADA8E,EAAI7xB,EAER,KAAO6xB,MACH9E,EAAOpa,EAASkf,GACE,IAAd9E,EAAKzsB,QAIb,GAAIysB,GAAQ+lB,GAAe/lB,IAASulB,GAAQvlB,EAAM,MAAO,CAErDpa,EAASs2B,OAAOjpC,EAAG,GACnBA,IAEA,IAAI2jD,EAAchlB,EAAaA,EAAap/B,OAAS,GACrD,KAAsC,KAA/BokD,EAAYxS,UAAU7wC,MACzBqjD,EAAcA,EAAYxS,UAE9BwS,EAAYxS,UAAYsS,EAAMjR,IACxBvB,GAA4BwS,EAAMjR,IAAKkR,GAAiBP,EAAUI,GAAerB,IACjFwB,GAAiBP,EAAUI,QAGjC/9B,EAAQ2X,QAAQoQ,GAAoB,GAAkCkW,EAAMhW,WAG/E,GAAKiN,EAAOpI,GAAQyQ,EAAa,OAAS,CAC3CN,GAAkB,EAClB,MAAMxC,EAAcvF,EAAKuF,aACrBC,GAAmBxF,EAAKlI,KACxByN,EAGAthB,EAAax/B,KAAKuxC,GAAqBlrB,EAAQwqB,OAAOpB,IAAc,CAChEqR,EAAY7jC,OACZw0B,GAAyBsQ,GAAoBjB,GAAcyD,GAAiBP,EAAUI,IAAe,MAIzG/9B,EAAQ2X,QAAQoQ,GAAoB,GAAuCmN,EAAKjN,UAGnF,CAED,GAAI6V,EAAgB,CAChB,GAAIR,EAAchiD,IAAIwiD,GAAiB,CACnC99B,EAAQ2X,QAAQoQ,GAAoB,GAAwC8V,IAC5E,SAEJP,EAAc/hD,IAAIuiD,GACK,YAAnBA,IACAV,GAAsB,GAG9BL,EAAgBpjD,KAAKkxC,GAAqB8S,EAAUI,KAGvDb,IACIC,EAIIE,EAAwBtjD,SAEzBqjD,EACAp9B,EAAQ2X,QAAQoQ,GAAoB,GAAoDsV,EAAwB,GAAGpV,MAGnH8U,EAAgBpjD,KAAKqjD,OAAyBxjD,EAAW6jD,KAR7DN,EAAgBpjD,KAAKqjD,OAAyBxjD,EAAW2T,KAYjE,MAAMykB,EAAWqrB,EACX,EAyBV,SAASmB,EAAkBjxC,GACvB,IAAK,IAAI3S,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IAAK,CACtC,MAAM6S,EAAQF,EAAS3S,GACvB,GAAmB,IAAf6S,EAAMvS,OACgB,IAAlBuS,EAAMkgC,SACa,IAAlBlgC,EAAMkgC,SACH6Q,EAAkB/wC,EAAMF,WAC5B,OAAO,EAInB,OAAO,EAnCDixC,CAAkBhuC,EAAKjD,UACnB,EACA,EACV,IAAIxB,EAAQg/B,GAAuBoS,EAAgBjwC,OAAO+9B,GAAqB,IAG/EC,GAAuB,GAAKlZ,GAAU,KAAUqW,GAOhD,OANI9O,EAAap/B,SACb4R,EAAQu/B,GAAqBlrB,EAAQwqB,OAAOlB,IAAe,CACvD39B,EACA8+B,GAAsBtR,MAGvB,CACHxtB,QACAsxC,mBAGR,SAASiB,GAAiB33C,EAAMvN,GAC5B,OAAO2xC,GAAuB,CAC1BE,GAAqB,OAAQtkC,GAC7BskC,GAAqB,KAAM7xC,KAmBnC,MAAMqlD,GAAqB,IAAI3lD,QAEzB4lD,GAAmB,CAACluC,EAAM4P,KAC5B,GAAoB,IAAd5P,EAAKtV,OACW,IAAjBsV,EAAKm9B,SACe,IAAjBn9B,EAAKm9B,SAKb,OAAO,WACH,MAAM,IAAE3T,EAAG,MAAE/zB,GAAUuK,EACjBmuC,EAA+B,IAAjBnuC,EAAKm9B,QAGnBiR,EAAWD,EAsHzB,SAA8BnuC,EAAM4P,EAAS60B,GAAM,GAC/C,MAAM,IAAEjb,GAAQxpB,EAEVquC,EAAsB,cAAbruC,EAAKwpB,IAAsBqT,GAAS78B,EAAM,MAAQ08B,GAAQ18B,EAAM,MAC/E,GAAIquC,EAAQ,CACR,MAAMzR,EAAsB,IAAhByR,EAAO3jD,KACb2jD,EAAOvhD,OAAS4tC,GAAuB2T,EAAOvhD,MAAM6zB,SAAS,GAC7D0tB,EAAOzR,IACb,GAAIA,EACA,OAAO9B,GAAqBlrB,EAAQwqB,OAAOvB,IAA4B,CACnE+D,IAKZ,MAAM0R,EAAU3S,GAAgBnS,IAAQ5Z,EAAQ8xB,mBAAmBlY,GACnE,GAAI8kB,EAKA,OAFK7J,GACD70B,EAAQwqB,OAAOkU,GACZA,EAGX,GAAqC,UAAjC1+B,EAAQ+0B,gBAAgBnb,GACxB,MAAO,UAAUvzB,KAAKC,UAAUszB,MAKpC,OAFA5Z,EAAQwqB,OAAOxB,IACfhpB,EAAQL,WAAWpkB,IAAIq+B,GAChBiU,GAAejU,EAAK,aAnJjB+kB,CAAqBvuC,EAAM4P,GAC3B,IAAI4Z,KAEV,IAAIglB,EACAC,EACAC,EAEAC,EACAC,EACAC,EAHA9jC,EAAY,EAIZ+jC,EARuB,YAASV,IAAaA,EAASrT,SAAWlC,IAWjEuV,IAAalW,IACbkW,IAAajW,KACXgW,IAKW,QAAR3kB,GACW,kBAARA,GAEAqT,GAAS78B,EAAM,OAAO,IAElC,GAAIvK,EAAM9L,OAAS,EAAG,CAClB,MAAMolD,EAAmBC,GAAWhvC,EAAM4P,GAC1C4+B,EAAaO,EAAiBt5C,MAC9BsV,EAAYgkC,EAAiBhkC,UAC7B6jC,EAAmBG,EAAiBH,iBACpC,MAAMvgC,EAAa0gC,EAAiB1gC,WACpCwgC,EACIxgC,GAAcA,EAAW1kB,OACnB0wC,GAAsBhsB,EAAWviB,IAAIyiB,GAwV3D,SAA4BA,EAAKqB,GAC7B,MAAMq/B,EAAU,GACVC,EAAUjB,GAAmBpjD,IAAI0jB,GACnC2gC,EACAD,EAAQ1lD,KAAKqmB,EAAQw1B,aAAa8J,KAIlCt/B,EAAQwqB,OAAOtB,IACflpB,EAAQvB,WAAWljB,IAAIojB,EAAIpY,MAC3B84C,EAAQ1lD,KAAKk0C,GAAelvB,EAAIpY,KAAM,eAE1C,MAAM,IAAE0hC,GAAQtpB,EACZA,EAAIquB,KACJqS,EAAQ1lD,KAAKglB,EAAIquB,KACjBruB,EAAIC,MACCD,EAAIquB,KACLqS,EAAQ1lD,KAAK,UAEjB0lD,EAAQ1lD,KAAKglB,EAAIC,MAErB,GAAI5iB,OAAOkK,KAAKyY,EAAIE,WAAW9kB,OAAQ,CAC9B4kB,EAAIC,MACAD,EAAIquB,KACLqS,EAAQ1lD,KAAK,UAEjB0lD,EAAQ1lD,KAAK,WAEjB,MAAM4lD,EAAiBzU,GAAuB,QAAQ,EAAO7C,GAC7DoX,EAAQ1lD,KAAKgxC,GAAuBhsB,EAAIE,UAAU3iB,IAAIsjD,GAAY3U,GAAqB2U,EAAUD,IAAkBtX,IAEvH,OAAOwC,GAAsB4U,EAAS1gC,EAAIspB,KAvXoBwX,CAAmB9gC,EAAKqB,UACpExmB,EAGd,GAAI4W,EAAKjD,SAASpT,OAAS,EAAG,CACtBykD,IAAahW,KAOb0W,GAAiB,EAEjB/jC,GAAa,MAcjB,GAL2BojC,GAEvBC,IAAalW,IAEbkW,IAAahW,GACO,CACpB,MAAM,MAAE78B,EAAK,gBAAEsxC,GAAoBJ,GAAWzsC,EAAM4P,GACpD6+B,EAAgBlzC,EACZsxC,IACA9hC,GAAa,WAGhB,GAA6B,IAAzB/K,EAAKjD,SAASpT,QAAgBykD,IAAalW,GAAU,CAC1D,MAAMj7B,EAAQ+C,EAAKjD,SAAS,GACtBrS,EAAOuS,EAAMvS,KAEb4kD,EAA+B,IAAT5kD,GACf,IAATA,EACA4kD,IAAwB/L,GAActmC,KACtC8N,GAAa,GAKb0jC,EADAa,GAAgC,IAAT5kD,EACPuS,EAGA+C,EAAKjD,cAIzB0xC,EAAgBzuC,EAAKjD,SAIX,IAAdgO,IAiBI2jC,EAAiBjqC,OAAOsG,GAExB6jC,GAAoBA,EAAiBjlD,SACrCglD,EA2ShB,SAAmCl5C,GAC/B,IAAI85C,EAAmB,IACvB,IAAK,IAAInlD,EAAI,EAAGoD,EAAIiI,EAAM9L,OAAQS,EAAIoD,EAAGpD,IACrCmlD,GAAoBt5C,KAAKC,UAAUT,EAAMrL,IACrCA,EAAIoD,EAAI,IACR+hD,GAAoB,MAE5B,OAAOA,EAAmB,IAlTMC,CAA0BZ,KAGtD5uC,EAAKq/B,YAAcnF,GAAgBtqB,EAASw+B,EAAUI,EAAYC,EAAeC,EAAgBC,EAAmBE,IAAmBC,GAAgB,EAA6B9uC,EAAK63B,OAmCjM,SAASmX,GAAWhvC,EAAM4P,EAASna,EAAQuK,EAAKvK,MAAOgvC,GAAM,GACzD,MAAM,IAAEjb,EAAKqO,IAAK4X,GAAezvC,EAC3BmuC,EAA+B,IAAjBnuC,EAAKm9B,QACzB,IAAI3C,EAAa,GACjB,MAAMkV,EAAY,GACZC,EAAoB,GAE1B,IAAI5kC,EAAY,EACZ6kC,GAAS,EACTC,GAAkB,EAClBC,GAAkB,EAClBC,GAA2B,EAC3BC,GAAiB,EACjBC,GAAe,EACnB,MAAMrB,EAAmB,GACnBsB,EAAmB,EAAGvlD,MAAKmC,YAC7B,GAAI0uC,GAAY7wC,GAAM,CAClB,MAAMwL,EAAOxL,EAAIg2B,QACXwvB,EAAiB,YAAKh6C,GAe5B,GAdKg4C,IACDgC,GAGuB,YAAvBh6C,EAAK6E,eAEI,wBAAT7E,GAEC,YAAeA,KAChB45C,GAA2B,GAE3BI,GAAkB,YAAeh6C,KACjC85C,GAAe,GAEA,KAAfnjD,EAAMpC,OACW,IAAfoC,EAAMpC,MACW,IAAfoC,EAAMpC,OACN64C,GAAcz2C,GAAS,EAE3B,OAES,QAATqJ,EACAy5C,GAAS,EAEK,UAATz5C,GAAqBg4C,EAGZ,UAATh4C,GAAqBg4C,EAGZ,QAATh4C,GAAmBy4C,EAAiBvlD,SAAS8M,IAClDy4C,EAAiBrlD,KAAK4M,GAHtB25C,GAAkB,EAHlBD,GAAkB,OAUtBG,GAAiB,GAGzB,IAAK,IAAI5lD,EAAI,EAAGA,EAAIqL,EAAM9L,OAAQS,IAAK,CAEnC,MAAMia,EAAO5O,EAAMrL,GACnB,GAAkB,IAAdia,EAAK3Z,KAA4B,CACjC,MAAM,IAAEmtC,EAAG,KAAE1hC,EAAI,MAAErJ,GAAUuX,EAK7B,GAJa,QAATlO,IACAy5C,GAAS,GAGA,OAATz5C,GAAyB,cAARqzB,EACjB,SAEJgR,EAAWjxC,KAAKkxC,GAAqBC,GAAuBvkC,GAAM,EAAM6lC,GAAcnE,EAAK,EAAG1hC,EAAKxM,SAAU+wC,GAAuB5tC,EAAQA,EAAM6zB,QAAU,IAAI,EAAM7zB,EAAQA,EAAM+qC,IAAMA,SAEzL,CAED,MAAM,KAAE1hC,EAAI,IAAEqY,EAAG,IAAEouB,EAAG,IAAE/E,GAAQxzB,EAC1B+rC,EAAkB,SAATj6C,EACTk6C,EAAgB,OAATl6C,EAEb,GAAa,SAATA,EAAiB,CACZg4C,GACDv+B,EAAQ2X,QAAQoQ,GAAoB,GAA6BE,IAErE,SAGJ,GAAa,SAAT1hC,EACA,SAGJ,GAAa,OAATA,GACCi6C,GAAkB,cAAR5mB,GAAuBuT,GAAUvuB,EAAK,MACjD,SAGJ,GAAI6hC,GAAQ5L,EACR,SAGJ,IAAKj2B,IAAQ4hC,GAAUC,GAAO,CAC1BL,GAAiB,EACbpT,GACIpC,EAAW7wC,SACX+lD,EAAUnmD,KAAKgxC,GAAuB+V,GAAiB9V,GAAaiV,IACpEjV,EAAa,IAEb4V,EACAV,EAAUnmD,KAAKqzC,GAIf8S,EAAUnmD,KAAK,CACXmB,KAAM,GACNmtC,MACAkD,OAAQnrB,EAAQwqB,OAAOf,IACvBl2B,UAAW,CAACy5B,MAKpBhtB,EAAQ2X,QAAQoQ,GAAoByY,EAC9B,GACA,GAA+BvY,IAEzC,SAEJ,MAAM0Y,EAAqB3gC,EAAQ20B,oBAAoBpuC,GACvD,GAAIo6C,EAAoB,CAEpB,MAAM,MAAE96C,EAAK,YAAE+6C,GAAgBD,EAAmBlsC,EAAMrE,EAAM4P,IAC7D60B,GAAOhvC,EAAM/J,QAAQwkD,GACtB1V,EAAWjxC,QAAQkM,GACf+6C,IACAb,EAAkBpmD,KAAK8a,GACnB,YAASmsC,IACTvC,GAAmBnjD,IAAIuZ,EAAMmsC,SAMrCb,EAAkBpmD,KAAK8a,IAInC,IAAIosC,OAAkBrnD,EAuCtB,OArCIsmD,EAAU/lD,QACN6wC,EAAW7wC,QACX+lD,EAAUnmD,KAAKgxC,GAAuB+V,GAAiB9V,GAAaiV,IAGpEgB,EADAf,EAAU/lD,OAAS,EACDmxC,GAAqBlrB,EAAQwqB,OAAOhB,IAAcsW,EAAWD,GAI7DC,EAAU,IAG3BlV,EAAW7wC,SAChB8mD,EAAkBlW,GAAuB+V,GAAiB9V,GAAaiV,IAGvEO,EACAjlC,GAAa,IAGT8kC,IACA9kC,GAAa,GAEb+kC,IACA/kC,GAAa,GAEb6jC,EAAiBjlD,SACjBohB,GAAa,GAEbglC,IACAhlC,GAAa,KAGF,IAAdA,GAAiC,KAAdA,KACnB6kC,GAAUK,GAAgBN,EAAkBhmD,OAAS,KACtDohB,GAAa,KAEV,CACHtV,MAAOg7C,EACPpiC,WAAYshC,EACZ5kC,YACA6jC,oBASR,SAAS0B,GAAiB9V,GACtB,MAAMkW,EAAa,IAAI3lD,IACjBsO,EAAU,GAChB,IAAK,IAAIjP,EAAI,EAAGA,EAAIowC,EAAW7wC,OAAQS,IAAK,CACxC,MAAMia,EAAOm2B,EAAWpwC,GAExB,GAAsB,IAAlBia,EAAK1Z,IAAID,OAAyC2Z,EAAK1Z,IAAIgwC,SAAU,CACrEthC,EAAQ9P,KAAK8a,GACb,SAEJ,MAAMlO,EAAOkO,EAAK1Z,IAAIg2B,QAChBe,EAAWgvB,EAAW7lD,IAAIsL,GAC5BurB,GACa,UAATvrB,GAA6B,UAATA,GAAoBA,EAAK8D,WAAW,QACxD02C,GAAajvB,EAAUrd,IAK3BqsC,EAAW5lD,IAAIqL,EAAMkO,GACrBhL,EAAQ9P,KAAK8a,IAGrB,OAAOhL,EAEX,SAASs3C,GAAajvB,EAAUC,GACA,KAAxBD,EAAS50B,MAAMpC,KACfg3B,EAAS50B,MAAMwtC,SAAS/wC,KAAKo4B,EAAS70B,OAGtC40B,EAAS50B,MAAQutC,GAAsB,CAAC3Y,EAAS50B,MAAO60B,EAAS70B,OAAQ40B,EAASmW,KA8C1F,MAAM+Y,GAAsB,CAAC5wC,EAAM4P,KAC/B,GAAIwtB,GAAap9B,GAAO,CACpB,MAAM,SAAEjD,EAAQ,IAAE86B,GAAQ73B,GACpB,SAAEutC,EAAQ,UAAEC,GAiB1B,SAA2BxtC,EAAM4P,GAC7B,IAAI29B,EAAW,YACXC,OAAYpkD,EAEhB,MAAM+M,EAAO0mC,GAAS78B,EAAM,QACxB7J,IACkB,IAAdA,EAAKzL,MAA8ByL,EAAKrJ,MAExCygD,EAAWt3C,KAAKC,UAAUC,EAAKrJ,MAAM6zB,SAElB,IAAdxqB,EAAKzL,MAA8ByL,EAAKymC,MAE7C2Q,EAAWp3C,EAAKymC,MAGxB,MAAMiU,EAAmB16C,EACnB6J,EAAKvK,MAAM1J,OAAOqM,GAAKA,IAAMjC,GAC7B6J,EAAKvK,MACX,GAAIo7C,EAAiBlnD,OAAS,EAAG,CAC7B,MAAM,MAAE8L,EAAK,WAAE4Y,GAAe2gC,GAAWhvC,EAAM4P,EAASihC,GACxDrD,EAAY/3C,EACR4Y,EAAW1kB,QACXimB,EAAQ2X,QAAQoQ,GAAoB,GAAuDtpB,EAAW,GAAGwpB,MAGjH,MAAO,CACH0V,WACAC,aA5CgCsD,CAAkB9wC,EAAM4P,GAClDmhC,EAAW,CACbnhC,EAAQu0B,kBAAoB,cAAgB,SAC5CoJ,GAEAC,GACAuD,EAASxnD,KAAKikD,GAEdzwC,EAASpT,SACJ6jD,GACDuD,EAASxnD,KAAK,MAElBwnD,EAASxnD,KAAKyxC,GAAyB,GAAIj+B,GAAU,GAAO,EAAO86B,KAEvE73B,EAAKq/B,YAAcvE,GAAqBlrB,EAAQwqB,OAAOnB,IAAc8X,EAAUlZ,KAkCvF,MAAMmZ,GAAU,gEACVC,GAAc,CAAC1iC,EAAKvO,EAAM4P,EAASshC,KACrC,MAAM,IAAErZ,EAAG,UAAEppB,EAAS,IAAED,GAAQD,EAIhC,IAAI4iC,EACJ,GAJK5iC,EAAIquB,KAAQnuB,EAAU9kB,QACvBimB,EAAQ2X,QAAQoQ,GAAoB,GAA+BE,IAGtD,IAAbrpB,EAAI9jB,KACJ,GAAI8jB,EAAImsB,SAAU,CACd,MAAMvQ,EAAU5b,EAAImS,QAGpBwwB,EAAYzW,GAAuB,KADZ,YAAW,YAAStQ,KACe,EAAM5b,EAAIqpB,UAGpEsZ,EAAYtW,GAAyB,CACjC,UAAUjrB,EAAQw1B,aAAa7L,OAC/B/qB,EACA,WAMR2iC,EAAY3iC,EACZ2iC,EAAUp0C,SAASwI,QAAQ,UAAUqK,EAAQw1B,aAAa7L,QAC1D4X,EAAUp0C,SAASxT,KAAK,KAG5B,IAAIqzC,EAAMruB,EAAIquB,IACVA,IAAQA,EAAIjc,QAAQ2R,SACpBsK,OAAMxzC,GAEV,IAAIgoD,EAAcxhC,EAAQy0B,gBAAkBzH,EAC5C,GAAIA,EAAK,CACL,MAAMyU,EAActV,GAAmBa,EAAIjc,SACrC2wB,IAAsBD,GAAeL,GAAQ5jC,KAAKwvB,EAAIjc,UACtD4wB,EAAwB3U,EAAIjc,QAAQt3B,SAAS,KAC/C,GAGAioD,GAAsBF,GAAeC,KAErCzU,EAAM/B,GAAyB,CAC3B,GAAGyW,EAAoB,SAAW,kBAAkBC,EAAwB,IAAM,MAClF3U,EACA2U,EAAwB,IAAM,OAI1C,IAAIl+C,EAAM,CACNoC,MAAO,CACHglC,GAAqB0W,EAAWvU,GAAOlC,GAAuB,YAAY,EAAO7C,MAazF,OATIqZ,IACA79C,EAAM69C,EAAU79C,IAEhB+9C,IAIA/9C,EAAIoC,MAAM,GAAG3I,MAAQ8iB,EAAQrE,MAAMlY,EAAIoC,MAAM,GAAG3I,QAE7CuG,GAMLm+C,GAAgB,CAACjjC,EAAKvO,EAAM4P,KAC9B,MAAM,IAAEgtB,EAAG,UAAEnuB,EAAS,IAAEopB,GAAQtpB,EAC1BC,EAAMD,EAAIC,IAiBhB,OAdIC,EAAUplB,SAAS,WACF,IAAbmlB,EAAI9jB,KACA8jB,EAAImsB,SACJnsB,EAAImS,QAAU,YAASnS,EAAImS,SAG3BnS,EAAImS,QAAU,GAAG/Q,EAAQw1B,aAAa9L,OAAa9qB,EAAImS,YAI3DnS,EAAIzR,SAASwI,QAAWqK,EAAQw1B,aAAa9L,IAAxB,KACrB9qB,EAAIzR,SAASxT,KAAK,QAGrBqzC,GACa,IAAbA,EAAIlyC,OAAuCkyC,EAAIjc,QAAQ2R,QACxD1iB,EAAQ2X,QAAQoQ,GAAoB,GAAiCE,IAC9D,CACHpiC,MAAO,CAACglC,GAAqBjsB,EAAKksB,GAAuB,IAAI,EAAM7C,OAGpE,CACHpiC,MAAO,CAACglC,GAAqBjsB,EAAKouB,MAMpC6U,GAAgB,CAACzxC,EAAM4P,KACzB,GAAkB,IAAd5P,EAAKtV,MACS,IAAdsV,EAAKtV,MACS,KAAdsV,EAAKtV,MACS,KAAdsV,EAAKtV,KAGL,MAAO,KACH,MAAMqS,EAAWiD,EAAKjD,SACtB,IAAI4hB,OAAmBv1B,EACnBsoD,GAAU,EACd,IAAK,IAAItnD,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IAAK,CACtC,MAAM6S,EAAQF,EAAS3S,GACvB,GAAI4yC,GAAO//B,GAAQ,CACfy0C,GAAU,EACV,IAAK,IAAIz1B,EAAI7xB,EAAI,EAAG6xB,EAAIlf,EAASpT,OAAQsyB,IAAK,CAC1C,MAAM/rB,EAAO6M,EAASkf,GACtB,IAAI+gB,GAAO9sC,GAaN,CACDyuB,OAAmBv1B,EACnB,MAdKu1B,IACDA,EAAmB5hB,EAAS3S,GAAK,CAC7BM,KAAM,EACNmtC,IAAK56B,EAAM46B,IACX96B,SAAU,CAACE,KAInB0hB,EAAiB5hB,SAASxT,KAAK,MAAO2G,GACtC6M,EAASs2B,OAAOpX,EAAG,GACnBA,MAShB,GAAKy1B,IAKoB,IAApB30C,EAASpT,QACS,IAAdqW,EAAKtV,OACa,IAAdsV,EAAKtV,MACe,IAAjBsV,EAAKm9B,UAKrB,IAAK,IAAI/yC,EAAI,EAAGA,EAAI2S,EAASpT,OAAQS,IAAK,CACtC,MAAM6S,EAAQF,EAAS3S,GACvB,GAAI4yC,GAAO//B,IAAyB,IAAfA,EAAMvS,KAAsC,CAC7D,MAAMinD,EAAW,GAGE,IAAf10C,EAAMvS,MAA2C,MAAlBuS,EAAM0jB,SACrCgxB,EAASpoD,KAAK0T,GAGb2S,EAAQ60B,KAAsB,IAAfxnC,EAAMvS,MACtBinD,EAASpoD,KAAK,QAAsB,IAAe,SAEvDwT,EAAS3S,GAAK,CACVM,KAAM,GACNi2B,QAAS1jB,EACT46B,IAAK56B,EAAM46B,IACXwH,YAAavE,GAAqBlrB,EAAQwqB,OAAO1B,IAAciZ,QAQjF,GAAO,IAAIC,QACXC,GAAgB,CAAC7xC,EAAM4P,KACzB,GAAkB,IAAd5P,EAAKtV,MAA4BgyC,GAAQ18B,EAAM,QAAQ,GAAO,CAC9D,GAAI,GAAK9U,IAAI8U,GACT,OAIJ,OAFA,GAAK7U,IAAI6U,GACT4P,EAAQwqB,OAAOZ,IACR,KACH,MAAM9iC,EAAMkZ,EAAQs1B,YAChBxuC,EAAI2oC,cACJ3oC,EAAI2oC,YAAczvB,EAAQrE,MAAM7U,EAAI2oC,aAAa,OAM3DyS,GAAiB,CAACvjC,EAAKvO,EAAM4P,KAC/B,MAAM,IAAEgtB,EAAG,IAAEpuB,GAAQD,EACrB,IAAKquB,EAED,OADAhtB,EAAQ2X,QAAQoQ,GAAoB,GAAkCppB,EAAIspB,MACnEka,KAEX,MAAMC,EAAyB,IAAbpV,EAAIlyC,KAAqCkyC,EAAIjc,QAAUic,EAAI/E,IAAIrxB,OACjF,IAAKu1B,GAAmBiW,GAEpB,OADApiC,EAAQ2X,QAAQoQ,GAAoB,GAAyCiF,EAAI/E,MAC1Eka,KAEX,MAAME,EAAWzjC,GAAYksB,GAAuB,cAAc,GAC5DyW,EAAY3iC,EACZgtB,GAAYhtB,GACR,YAAYA,EAAImS,QAChBka,GAAyB,CAAC,iBAAkBrsB,IAChD,sBACA/Y,EAAQ,CAEVglC,GAAqBwX,EAAU1jC,EAAIquB,KAEnCnC,GAAqB0W,EAAWtW,GAAyB,CAAC,cAAe+B,EAAK,iBAGlF,GAAIruB,EAAIE,UAAU9kB,QAA2B,IAAjBqW,EAAKm9B,QAA+B,CAC5D,MAAM1uB,EAAYF,EAAIE,UACjB3iB,IAAIuU,IAAMw7B,GAAmBx7B,GAAKA,EAAIpK,KAAKC,UAAUmK,IAAM,UAC3DrL,KAAK,MACJk9C,EAAe1jC,EACfgtB,GAAYhtB,GACLA,EAAImS,QAAP,YACAka,GAAyB,CAACrsB,EAAK,mBACnC,iBACN/Y,EAAMlM,KAAKkxC,GAAqByX,EAAcxX,GAAuB,KAAKjsB,OAAe,EAAOF,EAAIspB,KAAK,KAE7G,OAAOka,GAAqBt8C,IAEhC,SAASs8C,GAAqBt8C,EAAQ,IAClC,MAAO,CAAEA,SA0Bb,SAAS08C,GAAY5rB,EAAU19B,EAAU,IACrC,MAAM0+B,EAAU1+B,EAAQ0+B,SAAWmQ,GAC7B0a,EAAgC,WAAjBvpD,EAAQ+X,MAGS,IAA9B/X,EAAQs7C,kBACR5c,EAAQoQ,GAAoB,KAEvBya,GACL7qB,EAAQoQ,GAAoB,KAI/B9uC,EAAQw7C,eACT9c,EAAQoQ,GAAoB,KAE5B9uC,EAAQmtB,UAAYo8B,GACpB7qB,EAAQoQ,GAAoB,KAEhC,MAAMyO,EAAM,YAAS7f,GAAYmY,GAAUnY,EAAU19B,GAAW09B,GACzD+d,EAAgBC,GA1ChB,CACH,CACIsN,GACA1I,GACAiB,GAIAwG,GACA1C,GACA3B,GACAkF,IAEJ,CACIY,GAAIpB,GACJ34C,KAAMk5C,GACNc,MAAOR,KAoCf,OATA5gB,GAAUkV,EAAK,YAAO,GAAIv9C,EAAS,CAC/Bs7C,mBAVsB,EAWtBG,eAAgB,IACTA,KACCz7C,EAAQy7C,gBAAkB,IAElCC,oBAAqB,YAAO,GAAIA,EAAqB17C,EAAQ07C,qBAAuB,OAGjF4B,GAASC,EAAK,YAAO,GAAIv9C,EAAS,CACrCs7C,mBAnBsB,KAuB9B,MC/zHMoO,GAAgB7pD,OAAiE,IACjF8pD,GAAmB9pD,OAAoE,IACvF+pD,GAAe/pD,OAAgE,IAC/EgqD,GAAiBhqD,OAAkE,IACnFiqD,GAAkBjqD,OAAmE,IACrFkqD,GAAsBlqD,OAAuE,IAC7FmqD,GAAiBnqD,OAAkE,IACnFoqD,GAASpqD,OAA2D,IACpE,GAAaA,OAAgE,IAC7EqqD,GAAmBrqD,OAAqE,ID4H9F,IAAgCu2C,GC7GhC,IAAI+T,GD6G4B/T,GC3HT,CACnB,CAACsT,IAAgB,cACjB,CAACC,IAAmB,iBACpB,CAACC,IAAe,aAChB,CAACC,IAAiB,eAClB,CAACC,IAAkB,gBACnB,CAACC,IAAsB,gBACvB,CAACC,IAAiB,WAClB,CAACC,IAAS,QACV,CAAC,IAAa,aACd,CAACC,IAAmB,mBDkHpBnnD,OAAOqnD,sBAAsBhU,IAASvzC,QAAQmW,IAC1Cg4B,GAAch4B,GAAKo9B,GAAQp9B,KCzGnC,MAAMqxC,GAAmC,YAAQ,gCAAgC,GAC3EC,GAAgB,CAClB/U,UAAA,IACAlvB,YAAasa,GAAO,YAAUA,IAAQ,YAASA,GAC/C6U,SAAU7U,GAAe,QAARA,EACjB8U,eAVJ,SAA2Bt1C,GAEvB,OADCgqD,KAAYA,GAAU7yC,SAAS3B,cAAc,SAASwU,UAAYhqB,EAC5DgqD,GAAQ//B,aASfyuB,mBAAqBlY,GACbiS,GAAcjS,EAAK,cACZ,GAEFiS,GAAcjS,EAAK,mBACjBupB,QADN,EAKT,aAAavpB,EAAK30B,GACd,IAAI6qC,EAAK7qC,EAASA,EAAO6qC,GAAK,EAC9B,GAAI7qC,GAAiB,IAAP6qC,EACV,GAAmB,mBAAf7qC,EAAO20B,IAA0B,CACjC,GAAY,QAARA,EACA,OAAO,EAEP30B,EAAOY,MAAM6G,KAAK/C,GAAgB,IAAXA,EAAE7O,MACd,aAAX6O,EAAEpD,MACS,MAAXoD,EAAEzM,QACmB,cAApByM,EAAEzM,MAAM6zB,SACe,0BAApBpnB,EAAEzM,MAAM6zB,YACZ+e,EAAK,OAGJ,qBAAqBtyB,KAAKvY,EAAO20B,MAC9B,WAARA,GACQ,eAARA,IACAkW,EAAK,QAGJ7qC,GAAiB,IAAP6qC,IACI,kBAAf7qC,EAAO20B,KACQ,SAAf30B,EAAO20B,KACQ,UAAf30B,EAAO20B,MACPkW,EAAK,IAGb,GAAW,IAAPA,EAAqB,CACrB,GAAY,QAARlW,EACA,OAAO,EAEX,GAAY,SAARA,EACA,OAAO,EAGf,OAAOkW,GAGX,aAAY,IAAElW,EAAG,GAAEkW,IACf,GAAW,IAAPA,EAAqB,CACrB,GAAY,aAARlW,GAA8B,UAARA,EACtB,OAAO,EAEX,GAAI0pB,GAAmB1pB,GACnB,OAAO,EAGf,OAAO,IA2BT4pB,GAAiB,CAAC3c,EAASoB,KAC7B,MAAMp9B,EAAa,YAAiBg8B,GACpC,OAAOiE,GAAuBzkC,KAAKC,UAAUuE,IAAa,EAAOo9B,GAAK,IAG1E,SAASwb,GAAuBzb,EAAMC,GAClC,OAAOF,GAAoBC,EAAMC,GAErC,MAiIMyb,GAAsC,YAAQ,wBAC9CC,GAAiC,YAEvC,sDAMMC,GAAiC,YAAQ,cACzCC,GAAgC,YAAQ,gCAAgC,GA4CxEC,GAAiB,CAAC/oD,EAAKmP,IACH0hC,GAAY7wC,IAAsC,YAA9BA,EAAIg2B,QAAQ3lB,cAEhD0/B,GAAuB5gC,GAAO,GACjB,IAAbnP,EAAID,KACAmwC,GAAyB,CACvB,IACAlwC,EACA,sBAAsBmP,SACtBnP,EACA,MAEFA,EA+Ed,MAAMgpD,GAAuB,CAAC3zC,EAAM4P,KACd,IAAd5P,EAAKtV,MACY,IAAjBsV,EAAKm9B,SACS,WAAbn9B,EAAKwpB,KAAiC,UAAbxpB,EAAKwpB,MAC/B5Z,EAAQ2X,QAAQ8rB,GAAuB,GAAoCrzC,EAAK63B,MAChFjoB,EAAQ85B,eAIVkK,GAAoB,CApTH5zC,IACD,IAAdA,EAAKtV,MACLsV,EAAKvK,MAAM/J,QAAQ,CAAC0M,EAAGhO,KACJ,IAAXgO,EAAE1N,MAAyC,UAAX0N,EAAEjC,MAAoBiC,EAAEtL,QAExDkT,EAAKvK,MAAMrL,GAAK,CACZM,KAAM,EACNyL,KAAM,OACNqY,IAAKksB,GAAuB,SAAS,EAAMtiC,EAAEy/B,KAC7C+E,IAAKwW,GAAeh7C,EAAEtL,MAAM6zB,QAASvoB,EAAEy/B,KACvCppB,UAAW,GACXopB,IAAKz/B,EAAEy/B,UA6SrBgc,GAAyB,CAC3BC,MD+5G2B,KAAM,CAAGr+C,MAAO,KC95G3Cs+C,KAnRmB,CAACxlC,EAAKvO,EAAM4P,KAC/B,MAAM,IAAEgtB,EAAG,IAAE/E,GAAQtpB,EAQrB,OAPKquB,GACDhtB,EAAQ2X,QAAQ8rB,GAAuB,GAAiCxb,IAExE73B,EAAKjD,SAASpT,SACdimB,EAAQ2X,QAAQ8rB,GAAuB,GAAiCxb,IACxE73B,EAAKjD,SAASpT,OAAS,GAEpB,CACH8L,MAAO,CACHglC,GAAqBC,GAAuB,aAAa,EAAM7C,GAAM+E,GAAOlC,GAAuB,IAAI,OAyQ/GxZ,KApQmB,CAAC3S,EAAKvO,EAAM4P,KAC/B,MAAM,IAAEgtB,EAAG,IAAE/E,GAAQtpB,EAQrB,OAPKquB,GACDhtB,EAAQ2X,QAAQ8rB,GAAuB,GAAiCxb,IAExE73B,EAAKjD,SAASpT,SACdimB,EAAQ2X,QAAQ8rB,GAAuB,GAAiCxb,IACxE73B,EAAKjD,SAASpT,OAAS,GAEpB,CACH8L,MAAO,CACHglC,GAAqBC,GAAuB,eAAe,EAAM7C,GAAM+E,GAAOlC,GAAuB,IAAI,OA0PjH4X,MArPmB,CAAC/jC,EAAKvO,EAAM4P,KAC/B,MAAMokC,EAAalC,GAAiBvjC,EAAKvO,EAAM4P,GAE/C,IAAKokC,EAAWv+C,MAAM9L,QAA2B,IAAjBqW,EAAKm9B,QACjC,OAAO6W,EAEPzlC,EAAIC,KACJoB,EAAQ2X,QAAQ8rB,GAAuB,GAAmC9kC,EAAIC,IAAIqpB,MAQtF,MAAM,IAAErO,GAAQxpB,EACVsP,EAAkBM,EAAQN,gBAAgBka,GAChD,GAAY,UAARA,GACQ,aAARA,GACQ,WAARA,GACAla,EAAiB,CACjB,IAAI2kC,EAAiBxB,GACjByB,GAAgB,EACpB,GAAY,UAAR1qB,GAAmBla,EAAiB,CACpC,MAAM5kB,EAAOmyC,GAAS78B,EAAM,QAC5B,GAAItV,GACA,GAAkB,IAAdA,EAAKA,KAELupD,EAAiBtB,QAEhB,GAAIjoD,EAAKoC,MACV,OAAQpC,EAAKoC,MAAM6zB,SACf,IAAK,QACDszB,EAAiB1B,GACjB,MACJ,IAAK,WACD0B,EAAiBzB,GACjB,MACJ,IAAK,OACD0B,GAAgB,EAChBtkC,EAAQ2X,QAAQ8rB,GAAuB,GAA0C9kC,EAAIspB,YDuMjH,SAA4B73B,GACxB,OAAOA,EAAKvK,MAAM6G,KAAKlE,KAAgB,IAAXA,EAAE1N,MACf,SAAX0N,EAAEjC,MACAiC,EAAEoW,KACe,IAAfpW,EAAEoW,IAAI9jB,MACL0N,EAAEoW,IAAImsB,YCnMEwZ,CAAmBn0C,KAGxBi0C,EAAiBtB,QAOR,WAARnpB,IACLyqB,EAAiBvB,IAShBwB,IACDF,EAAWxD,YAAc5gC,EAAQwqB,OAAO6Z,SAI5CrkC,EAAQ2X,QAAQ8rB,GAAuB,GAAuC9kC,EAAIspB,MAMtF,OAFAmc,EAAWv+C,MAAQu+C,EAAWv+C,MAAM1J,OAAOqM,KAAsB,IAAfA,EAAEzN,IAAID,MAClC,eAAlB0N,EAAEzN,IAAIg2B,UACHqzB,GAsKP3B,GA/FgB,CAAC9jC,EAAKvO,EAAM4P,IACrBqhC,GAAc1iC,EAAKvO,EAAM4P,EAASokC,IACrC,MAAM,UAAEvlC,GAAcF,EACtB,IAAKE,EAAU9kB,OACX,OAAOqqD,EACX,IAAI,IAAErpD,EAAKmC,MAAOsnD,GAAeJ,EAAWv+C,MAAM,GAClD,MAAM,aAAE4+C,EAAY,gBAAEC,EAAe,qBAAEC,GA/DtB,EAAC5pD,EAAK8jB,KAC3B,MAAM4lC,EAAe,GACfC,EAAkB,GAClBC,EAAuB,GAC7B,IAAK,IAAInqD,EAAI,EAAGA,EAAIqkB,EAAU9kB,OAAQS,IAAK,CACvC,MAAMglD,EAAW3gC,EAAUrkB,GACvBkpD,GAAsBlE,GAGtBmF,EAAqBhrD,KAAK6lD,GAItBoE,GAAiBpE,GACb5T,GAAY7wC,GACR8oD,GAAgB9oD,EAAIg2B,SACpB0zB,EAAa9qD,KAAK6lD,GAGlBkF,EAAgB/qD,KAAK6lD,IAIzBiF,EAAa9qD,KAAK6lD,GAClBkF,EAAgB/qD,KAAK6lD,IAIrBmE,GAAiBnE,GACjBkF,EAAgB/qD,KAAK6lD,GAGrBiF,EAAa9qD,KAAK6lD,GAKlC,MAAO,CACHiF,eACAC,kBACAC,yBAuBgEC,CAAiB7pD,EAAK8jB,GAsBtF,GApBI6lC,EAAgBjrD,SAAS,WACzBsB,EAAM+oD,GAAe/oD,EAAK,kBAE1B2pD,EAAgBjrD,SAAS,YACzBsB,EAAM+oD,GAAe/oD,EAAK,cAE1B2pD,EAAgB3qD,SAChByqD,EAAatZ,GAAqBlrB,EAAQwqB,OAAOwY,IAAsB,CACnEwB,EACAn+C,KAAKC,UAAUo+C,OAGnBD,EAAa1qD,QAEX6xC,GAAY7wC,KAAQ8oD,GAAgB9oD,EAAIg2B,WAC1CyzB,EAAatZ,GAAqBlrB,EAAQwqB,OAAOyY,IAAiB,CAC9DuB,EACAn+C,KAAKC,UAAUm+C,MAGnBE,EAAqB5qD,OAAQ,CAC7B,MAAM8qD,EAAkBF,EAAqBzoD,IAAI,KAAYkJ,KAAK,IAClErK,EAAM6wC,GAAY7wC,GACZ+vC,GAAuB,GAAG/vC,EAAIg2B,UAAU8zB,KAAmB,GAC3D5Z,GAAyB,CAAC,IAAKlwC,EAAK,QAAQ8pD,OAEtD,MAAO,CACHh/C,MAAO,CAACglC,GAAqB9vC,EAAKypD,OA6D1CM,KAxDkB,CAACnmC,EAAKvO,EAAM4P,KAC9B,MAAM,IAAEgtB,EAAG,IAAE/E,GAAQtpB,EAIrB,OAHKquB,GACDhtB,EAAQ2X,QAAQ8rB,GAAuB,GAAiCxb,IAErE,CACHpiC,MAAO,GACP+6C,YAAa5gC,EAAQwqB,OAAO0Y,OCrWpC,MAAM6B,GAAe/oD,OAAOwU,OAAO,MACnC,SAASw0C,GAAkBruB,EAAU19B,GACjC,IAAK,YAAS09B,GAAW,CACrB,IAAIA,EAASrV,SAKT,OAAO,IAJPqV,EAAWA,EAASvT,UAO5B,MAAMroB,EAAM47B,EACNta,EAAS0oC,GAAahqD,GAC5B,GAAIshB,EACA,OAAOA,EAEX,GAAoB,MAAhBsa,EAAS,GAAY,CACrB,MAAM9oB,EAAK0C,SAASoe,cAAcgI,GAC9B,EAOJA,EAAW9oB,EAAKA,EAAGuV,UAAY,GAEnC,MAAM,KAAE4kB,GD6XZ,SAAiBrR,EAAU19B,EAAU,IACjC,OAAOspD,GAAY5rB,EAAU,YAAO,GAAI4sB,GAAetqD,EAAS,CAC5Dy7C,eAAgB,CAIZqP,MACGC,MACC/qD,EAAQy7C,gBAAkB,IAElCC,oBAAqB,YAAO,GAAIsP,GAAwBhrD,EAAQ07C,qBAAuB,IACvFV,eAAiB,QCxYJ,CAAQtd,EAAU,YAAO,CACtC6d,aAAa,EACb,QAAQhuC,GASA,MAAMA,IAGfvN,IAKG6S,EAAW,IAAIoI,SAAS,MAAO8zB,EAAtB,CAA4B,GAE3C,OADAl8B,EAAO+qB,KAAM,EACLkuB,GAAahqD,GAAO+Q,EAEhC2qB,GAAwBuuB,K,iCCrExB,YAOA,SAASC,EAAQC,EAAKC,GAClB,MAAMjpD,EAAMF,OAAOwU,OAAO,MACpBilC,EAAOyP,EAAI5nC,MAAM,KACvB,IAAK,IAAI9iB,EAAI,EAAGA,EAAIi7C,EAAK17C,OAAQS,IAC7B0B,EAAIu5C,EAAKj7C,KAAM,EAEnB,OAAO2qD,EAAmBljD,KAAS/F,EAAI+F,EAAImJ,eAAiBnJ,KAAS/F,EAAI+F,GAb7E,w5CAsBA,MAAMmjD,EAAiB,CACnB,EAAgB,OAChB,EAAiB,QACjB,EAAiB,QACjB,EAAiB,QACjB,GAAuB,aACvB,GAA2B,iBAC3B,GAA4B,kBAC5B,IAA4B,iBAC5B,IAA8B,mBAC9B,KAA4B,gBAC5B,IAAwB,aACxB,EAAE,GAAkB,UACpB,EAAE,GAAe,QAMfC,EAAsCJ,EAHf,6LAkD7B,MAAMK,EAAsB,8EACtBC,EAAqCN,EAAQK,GA4DnD,SAASE,EAAetoD,GACpB,GAAIuoD,EAAQvoD,GAAQ,CAChB,MAAMF,EAAM,GACZ,IAAK,IAAIxC,EAAI,EAAGA,EAAI0C,EAAMnD,OAAQS,IAAK,CACnC,MAAMkrD,EAAOxoD,EAAM1C,GACbqQ,EAAa26C,EAAeG,EAASD,GAAQE,EAAiBF,GAAQA,GAC5E,GAAI76C,EACA,IAAK,MAAM9P,KAAO8P,EACd7N,EAAIjC,GAAO8P,EAAW9P,GAIlC,OAAOiC,EAEN,GAAI6oD,EAAS3oD,GACd,OAAOA,EAGf,MAAM4oD,EAAkB,gBAClBC,EAAsB,QAC5B,SAASH,EAAiB/e,GACtB,MAAMpjC,EAAM,GAOZ,OANAojC,EAAQvpB,MAAMwoC,GAAiBhqD,QAAQ4pD,IACnC,GAAIA,EAAM,CACN,MAAMM,EAAMN,EAAKpoC,MAAMyoC,GACvBC,EAAIjsD,OAAS,IAAM0J,EAAIuiD,EAAI,GAAGtjB,QAAUsjB,EAAI,GAAGtjB,WAGhDj/B,EAkBX,SAASwiD,EAAe/oD,GACpB,IAAIF,EAAM,GACV,GAAI2oD,EAASzoD,GACTF,EAAME,OAEL,GAAIuoD,EAAQvoD,GACb,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAMnD,OAAQS,IAC9BwC,GAAOipD,EAAe/oD,EAAM1C,IAAM,SAGrC,GAAIqrD,EAAS3oD,GACd,IAAK,MAAMqJ,KAAQrJ,EACXA,EAAMqJ,KACNvJ,GAAOuJ,EAAO,KAI1B,OAAOvJ,EAAI0lC,OAKf,MAqBMwjB,EAA0BjB,EArBd,slBAsBZkB,EAAyBlB,EAZd,spBAaXzW,EAA0ByW,EAHd,wEA2DlB,SAASmB,EAAWz8C,EAAGC,GACnB,GAAID,IAAMC,EACN,OAAO,EACX,IAAIy8C,EAAaC,EAAO38C,GACpB48C,EAAaD,EAAO18C,GACxB,GAAIy8C,GAAcE,EACd,SAAOF,IAAcE,IAAa58C,EAAE68C,YAAc58C,EAAE48C,UAIxD,GAFAH,EAAaZ,EAAQ97C,GACrB48C,EAAad,EAAQ77C,GACjBy8C,GAAcE,EACd,SAAOF,IAAcE,IApB7B,SAA4B58C,EAAGC,GAC3B,GAAID,EAAE5P,SAAW6P,EAAE7P,OACf,OAAO,EACX,IAAI0sD,GAAQ,EACZ,IAAK,IAAIjsD,EAAI,EAAGisD,GAASjsD,EAAImP,EAAE5P,OAAQS,IACnCisD,EAAQL,EAAWz8C,EAAEnP,GAAIoP,EAAEpP,IAE/B,OAAOisD,EAa+BC,CAAmB/8C,EAAGC,GAI5D,GAFAy8C,EAAaR,EAASl8C,GACtB48C,EAAaV,EAASj8C,GAClBy8C,GAAcE,EAAY,CAE1B,IAAKF,IAAeE,EAChB,OAAO,EAIX,GAFmBvqD,OAAOkK,KAAKyD,GAAG5P,SACfiC,OAAOkK,KAAK0D,GAAG7P,OAE9B,OAAO,EAEX,IAAK,MAAMgB,KAAO4O,EAAG,CACjB,MAAMg9C,EAAUh9C,EAAEi9C,eAAe7rD,GAC3B8rD,EAAUj9C,EAAEg9C,eAAe7rD,GACjC,GAAK4rD,IAAYE,IACXF,GAAWE,IACZT,EAAWz8C,EAAE5O,GAAM6O,EAAE7O,IACtB,OAAO,GAInB,OAAO8Z,OAAOlL,KAAOkL,OAAOjL,GAEhC,SAASk9C,EAAarpD,EAAKwE,GACvB,OAAOxE,EAAIspD,UAAUrB,GAAQU,EAAWV,EAAMzjD,IAOlD,MAAM+kD,EAAmB/kD,GACP,MAAPA,EACD,GACA4jD,EAAS5jD,GACLoE,KAAKC,UAAUrE,EAAKglD,EAAU,GAC9BpyC,OAAO5S,GAEfglD,EAAW,CAACpjD,EAAM5B,IAChBilD,EAAMjlD,GACC,CACH,CAAC,OAAOA,EAAI3C,SAAU,IAAI2C,EAAIklD,WAAWC,OAAO,CAACD,GAAUpsD,EAAKkH,MAC5DklD,EAAWpsD,EAAH,OAAekH,EAChBklD,GACR,KAGFE,EAAMplD,GACJ,CACH,CAAC,OAAOA,EAAI3C,SAAU,IAAI2C,EAAI2E,YAG7Bi/C,EAAS5jD,IAASwjD,EAAQxjD,IAASqlD,EAAcrlD,GAGnDA,EAFI4S,OAAO5S,GAWhBslD,EAA4B,CAC9B,SACA,mBACA,6BAEEC,EAEA,GACAC,EAAY,GACZC,EAAO,OAIPC,EAAK,KAAM,EACXC,EAAO,YACPnH,EAAQ1lD,GAAQ6sD,EAAKpqC,KAAKziB,GAC1B8sD,EAAmB9sD,GAAQA,EAAIsP,WAAW,aAC1Cy9C,EAAS9rD,OAAOunC,OAChB3yB,EAAS,CAACnT,EAAKoQ,KACjB,MAAMrT,EAAIiD,EAAI8f,QAAQ1P,GAClBrT,GAAK,GACLiD,EAAIgmC,OAAOjpC,EAAG,IAGhBosD,EAAiB5qD,OAAOuB,UAAUqpD,eAClCmB,EAAS,CAAC9lD,EAAKlH,IAAQ6rD,EAAexnD,KAAK6C,EAAKlH,GAChD0qD,EAAUnoD,MAAMmoD,QAChByB,EAASjlD,GAA8B,iBAAtB+lD,EAAa/lD,GAC9BolD,EAASplD,GAA8B,iBAAtB+lD,EAAa/lD,GAC9BqkD,EAAUrkD,GAAQA,aAAe64B,KACjCmtB,EAAchmD,GAAuB,mBAARA,EAC7B0jD,EAAY1jD,GAAuB,iBAARA,EAC3BimD,EAAYjmD,GAAuB,iBAARA,EAC3B4jD,EAAY5jD,GAAgB,OAARA,GAA+B,iBAARA,EAC3CkmD,EAAalmD,GACR4jD,EAAS5jD,IAAQgmD,EAAWhmD,EAAIwG,OAASw/C,EAAWhmD,EAAI0E,OAE7DyhD,EAAiBpsD,OAAOuB,UAAU0X,SAClC+yC,EAAgB9qD,GAAUkrD,EAAehpD,KAAKlC,GAC9CmrD,EAAanrD,GAER8qD,EAAa9qD,GAAOiJ,MAAM,GAAI,GAEnCmhD,EAAiBrlD,GAA8B,oBAAtB+lD,EAAa/lD,GACtCqmD,EAAgBvtD,GAAQ4qD,EAAS5qD,IAC3B,QAARA,GACW,MAAXA,EAAI,IACJ,GAAKoiB,SAASpiB,EAAK,MAAQA,EACzBwtD,EAA+BtD,EAAQ,sHAIvCuD,EAAuBxvD,IACzB,MAAM2iB,EAAQ3f,OAAOwU,OAAO,MAC5B,OAAS00C,GACOvpC,EAAMupC,KACHvpC,EAAMupC,GAAOlsD,EAAGksD,KAGjCuD,EAAa,SAIbC,EAAWF,EAAqBtD,GAC3BA,EAAI/5C,QAAQs9C,EAAY,CAAC71C,EAAG+V,IAAOA,EAAIA,EAAEsO,cAAgB,KAE9D0xB,EAAc,aAIdC,EAAYJ,EAAqBtD,GAC5BA,EAAI/5C,QAAQw9C,EAAa,OAAOv9C,eAKrCy9C,EAAaL,EAAqBtD,GAC7BA,EAAI4D,OAAO,GAAG7xB,cAAgBiuB,EAAI/+C,MAAM,IAG7C4iD,EAAa,CAAC7rD,EAAOxB,IAAawB,IAAUxB,IAAawB,GAAUA,GAASxB,GAAaA,GACzFstD,GAAiB,CAACC,EAAKrqC,KACzB,IAAK,IAAIpkB,EAAI,EAAGA,EAAIyuD,EAAIlvD,OAAQS,IAC5ByuD,EAAIzuD,GAAGokB,IAGTsqC,GAAM,CAACjwB,EAAKl+B,EAAKmC,KACnBlB,OAAOk4B,eAAe+E,EAAKl+B,EAAK,CAC5Bq5B,cAAc,EACdD,YAAY,EACZj3B,WAGFisD,GAAYlnD,IACd,MAAM0O,EAAIy4C,WAAWnnD,GACrB,OAAOonD,MAAM14C,GAAK1O,EAAM0O,GAE5B,IAAI24C,GACJ,MAAMC,GAAgB,IACVD,KACHA,GACyB,oBAAfE,WACDA,WACgB,oBAAT1kB,KACHA,KACkB,oBAAXrF,OACHA,YACkB,IAAXgqB,EACHA,EACA,M,kDCje9BztD,OAAOk4B,eAAew1B,EAAS,aAAc,CAAExsD,OAAO,IAQtD,MAAMysD,EACJ,YAAYC,EAAOC,EAAO,IACxBlsD,KAAKisD,WAAQ,EACbjsD,KAAKmsD,aAAU,EACfnsD,KAAKosD,gBAAa,EAClBpsD,KAAKqsD,gBAAa,EAClBrsD,KAAKssD,sBAAmB,EACxBtsD,KAAKusD,YAAS,EACdvsD,KAAKwsD,cAAW,EAChBxsD,KAAKk/B,YAAS,EACdl/B,KAAK8H,aAAU,EACf9H,KAAKysD,WAAQ,EACbzsD,KAAK0sD,mBAAgB,EACrB1sD,KAAKisD,MAAQA,EACbjsD,KAAKmsD,QAAUD,EAAKC,QACpBnsD,KAAKosD,aAAeF,EAAKE,WACzBpsD,KAAKqsD,aAAeH,EAAKG,WACzBrsD,KAAKssD,mBAAqBJ,EAAKI,iBAC/BtsD,KAAKusD,SAAWL,EAAKK,OACrBvsD,KAAKwsD,WAAaN,EAAKM,SACvBxsD,KAAKk/B,SAAWgtB,EAAKhtB,OACrBl/B,KAAK8H,UAAYokD,EAAKpkD,QACtB9H,KAAKysD,MAAsB,MAAdP,EAAKO,MAAgBP,EAAKO,MAAQ,KAC/CzsD,KAAK0sD,cAAgB,MAIzB,MAAMC,EAAW,IAAInvD,IAErB,SAASovD,EAAchkD,EAAMtN,EAAU,IACrCA,EAAQ6wD,QAAUvjD,EAClB,MAAMikD,EAAQ,IAAIb,EAAUpjD,EAAMtN,GAElC,OADAqxD,EAASpvD,IAAIqL,EAAMikD,GACZA,EAGT,SAASC,EAAYlkD,EAAM6jD,GACzB,OAAO,IAAIT,EAAUpjD,EAAM,CACzBwjD,YA5Ce,EA6CfK,UAIJ,MAAMM,EAAQ,CACZC,IAAK,IAAIhB,EAAU,MAAO,CACxBK,YAlDe,IAoDjBY,OAAQ,IAAIjB,EAAU,SAAU,CAC9BK,YArDe,IAuDjBa,QAAS,IAAIlB,EAAU,UAAW,CAChCK,YAxDe,IA0DjBc,OAAQ,IAAInB,EAAU,SAAU,CAC9BK,YA3De,IA6DjBe,OAAQ,IAAIpB,EAAU,SAAU,CAC9BK,YA9De,IAgEjBzjD,KAAM,IAAIojD,EAAU,OAAQ,CAC1BK,YAjEe,IAmEjBgB,IAAK,IAAIrB,EAAU,OACnBsB,SAAU,IAAItB,EAAU,IAAK,CAC3BI,YAtEe,EAuEfC,YAtEe,IAwEjBkB,aAAc,IAAIvB,EAAU,KAAM,CAChCI,YA1Ee,EA2EfC,YA1Ee,IA4EjBmB,YAAa,IAAIxB,EAAU,KAAM,CAC/BI,YA9Ee,EA+EfC,YA9Ee,IAgFjBoB,SAAU,IAAIzB,EAAU,KACxB0B,YAAa,IAAI1B,EAAU,MAC3B2B,OAAQ,IAAI3B,EAAU,IAAK,CACzBI,YApFe,EAqFfC,YApFe,IAsFjBuB,UAAW,IAAI5B,EAAU,KAAM,CAC7BI,YAxFe,EAyFfC,YAxFe,IA0FjBwB,WAAY,IAAI7B,EAAU,KAAM,CAC9BI,YA5Fe,EA6FfC,YA5Fe,IA8FjByB,OAAQ,IAAI9B,EAAU,KACtB+B,UAAW,IAAI/B,EAAU,MACzBgC,OAAQ,IAAIhC,EAAU,IAAK,CACzBI,YAlGe,EAmGfC,YAlGe,IAoGjB4B,OAAQ,IAAIjC,EAAU,KACtBrR,MAAO,IAAIqR,EAAU,IAAK,CACxBI,YAvGe,IAyGjB8B,KAAM,IAAIlC,EAAU,IAAK,CACvBI,YA1Ge,IA4GjB+B,MAAO,IAAInC,EAAU,IAAK,CACxBI,YA7Ge,IA+GjBgC,YAAa,IAAIpC,EAAU,KAAM,CAC/BI,YAhHe,IAkHjBiC,IAAK,IAAIrC,EAAU,KACnBsC,SAAU,IAAItC,EAAU,IAAK,CAC3BI,YApHe,IAsHjBmC,YAAa,IAAIvC,EAAU,MAC3BwC,MAAO,IAAIxC,EAAU,KAAM,CACzBI,YAxHe,IA0HjBpzB,SAAU,IAAIgzB,EAAU,YACxByC,SAAU,IAAIzC,EAAU,MAAO,CAC7BI,YA5He,IA8HjBsC,UAAW,IAAI1C,EAAU,IAAK,CAC5BK,YA9He,IAgIjBsC,aAAc,IAAI3C,EAAU,KAAM,CAChCI,YAlIe,EAmIfC,YAlIe,IAoIjBuC,GAAI,IAAI5C,EAAU,KAClB6C,KAAM,IAAI7C,EAAU,IAAK,CACvBK,YAtIe,IAwIjByC,qBAAsB,IAAI9C,EAAU,SACpC+C,GAAI,IAAI/C,EAAU,IAAK,CACrBI,YA3Ie,EA4IfI,UAzIa,IA2If5mB,OAAQ,IAAIomB,EAAU,KAAM,CAC1BI,YA/Ie,EAgJfI,UA7Ia,IA+IfwC,OAAQ,IAAIhD,EAAU,QAAS,CAC7B9sB,QA/IW,EAgJXp3B,SA/IY,EAgJZukD,YApJe,IAsJjB4C,KAAM,IAAIjD,EAAU,IAAK,CACvBI,YAxJe,EAyJfltB,QArJW,EAsJXmtB,YAzJe,IA2JjB6C,MAAO,IAAIlD,EAAU,IAAK,CACxBI,YA7Je,EA8JfltB,QA1JW,EA2JXmtB,YA9Je,IAgKjB8C,SAAUrC,EAAY,KAAM,GAC5BsC,kBAAmBtC,EAAY,KAAM,GACrCuC,UAAWvC,EAAY,KAAM,GAC7BwC,WAAYxC,EAAY,KAAM,GAC9ByC,UAAWzC,EAAY,IAAK,GAC5B0C,WAAY1C,EAAY,IAAK,GAC7B2C,WAAY3C,EAAY,IAAK,GAC7B4C,SAAU5C,EAAY,gBAAiB,GACvC6C,WAAY7C,EAAY,YAAa,GACrC8C,SAAU9C,EAAY,YAAa,GACnC+C,QAAS,IAAI7D,EAAU,MAAO,CAC5BI,YA5Ke,EA6KfK,MAAO,EACPvtB,QA1KW,EA2KXmtB,YA9Ke,IAgLjByD,OAAQ,IAAI9D,EAAU,IAAK,CACzBI,YAlLe,EAmLfK,MAAO,GACPJ,YAnLe,IAqLjB0D,KAAM,IAAI/D,EAAU,IAAK,CACvBS,MAAO,KAETuD,MAAOlD,EAAY,IAAK,IACxBmD,SAAU,IAAIjE,EAAU,KAAM,CAC5BI,YA3Le,EA4LfK,MAAO,GACPH,kBAAkB,IAEpB4D,OAAQtD,EAAc,SACtBuD,MAAOvD,EAAc,OAAQ,CAC3BR,YAjMe,IAmMjBgE,OAAQxD,EAAc,SACtByD,UAAWzD,EAAc,YACzB0D,UAAW1D,EAAc,YACzB2D,SAAU3D,EAAc,UAAW,CACjCR,YAvMe,IAyMjBoE,IAAK5D,EAAc,KAAM,CACvBL,QAxMW,EAyMXH,YA3Me,IA6MjBqE,MAAO7D,EAAc,OAAQ,CAC3BR,YA9Me,IAgNjBsE,SAAU9D,EAAc,WACxB+D,KAAM/D,EAAc,MAAO,CACzBL,QAhNW,IAkNbqE,UAAWhE,EAAc,WAAY,CACnCP,YApNe,IAsNjBwE,IAAKjE,EAAc,MACnBkE,QAASlE,EAAc,SAAU,CAC/BR,YAzNe,IA2NjB2E,QAASnE,EAAc,UACvBoE,OAAQpE,EAAc,QAAS,CAC7BR,YA7Ne,EA8NfltB,QA1NW,EA2NXmtB,YA9Ne,IAgOjB4E,KAAMrE,EAAc,OACpBsE,KAAMtE,EAAc,OACpBuE,OAAQvE,EAAc,SACtBwE,OAAQxE,EAAc,QAAS,CAC7BL,QAnOW,IAqOb8E,MAAOzE,EAAc,QACrB0E,KAAM1E,EAAc,MAAO,CACzBR,YAzOe,EA0OfC,YAzOe,IA2OjBkF,MAAO3E,EAAc,OAAQ,CAC3BP,YA5Oe,IA8OjBmF,OAAQ5E,EAAc,QAAS,CAC7BP,YA/Oe,IAiPjBoF,OAAQ7E,EAAc,QAAS,CAC7BP,YAlPe,IAoPjBqF,SAAU9E,EAAc,UAAW,CACjCR,YAtPe,IAwPjBuF,QAAS/E,EAAc,UACvBgF,QAAShF,EAAc,SAAU,CAC/BP,YAzPe,IA2PjBwF,MAAOjF,EAAc,OAAQ,CAC3BP,YA5Pe,IA8PjByF,MAAOlF,EAAc,OAAQ,CAC3BP,YA/Pe,IAiQjB0F,OAAQnF,EAAc,QAAS,CAC7BP,YAlQe,IAoQjB2F,IAAKpF,EAAc,KAAM,CACvBR,YAtQe,EAuQfK,MAAO,IAETwF,YAAarF,EAAc,aAAc,CACvCR,YA1Qe,EA2QfK,MAAO,IAETyF,QAAStF,EAAc,SAAU,CAC/BR,YA9Qe,EA+QfltB,QA3QW,EA4QXmtB,YA/Qe,IAiRjB8F,MAAOvF,EAAc,OAAQ,CAC3BR,YAnRe,EAoRfltB,QAhRW,EAiRXmtB,YApRe,IAsRjB+F,QAASxF,EAAc,SAAU,CAC/BR,YAxRe,EAyRfltB,QArRW,EAsRXmtB,YAzRe,KAuUbgG,EAAY,yBACZC,EAAa,IAAIz0C,OAAOw0C,EAAUp5C,OAAQ,KAChD,SAASs5C,EAAUloB,GACjB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,KACL,KAAK,KACH,OAAO,EAET,QACE,OAAO,GAGb,MAAMmoB,EAAiB,gCACvB,SAASC,EAAapoB,GACpB,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,OAAO,EAET,QACE,OAAO,GAIb,MAAMqoB,EACJ,YAAYlmB,EAAMmmB,GAChB3yD,KAAKwsC,UAAO,EACZxsC,KAAKysC,YAAS,EACdzsC,KAAKwsC,KAAOA,EACZxsC,KAAKysC,OAASkmB,GAIlB,MAAMC,EACJ,YAAY1pC,EAAOpD,GACjB9lB,KAAKkpB,WAAQ,EACblpB,KAAK8lB,SAAM,EACX9lB,KAAK+4C,cAAW,EAChB/4C,KAAK6yD,oBAAiB,EACtB7yD,KAAKkpB,MAAQA,EACblpB,KAAK8lB,IAAMA,GA4Cf,SAAS9oB,EAAKuJ,GACZ,OAAOA,EAAMA,EAAMnK,OAAS,GAgM9B,MAAM02D,EAAgBz0D,OAAO00D,OAAO,CAClCC,oBAAqB,gCACrBC,iBAAkB,6DAClBC,sCAAuC,0EACvCC,uBAAwB,6DACxBC,+BAAgC,oDAChCC,wBAAyB,wDACzBC,eAAgB,6CAChBC,eAAgB,gDAChBC,uBAAwB,wDACxBC,sBAAuB,mDACvBC,6BAA8B,4DAC9BC,sBAAuB,2CACvBC,mBAAoB,yCACpBC,uBAAwB,mCACxBC,8BAA+B,qCAC/BC,sBAAuB,mKACvBC,qBAAsB,kFACtBC,qBAAsB,mHACtBC,mBAAoB,iDACpBC,qBAAsB,+CACtBC,mBAAoB,0CACpBC,uBAAwB,qGACxBC,qBAAsB,0CACtBC,uBAAwB,8CACxBC,gBAAiB,uEACjBC,eAAgB,qCAChBC,qBAAsB,oCACtBC,qBAAsB,2CACtBC,iBAAkB,oCAClBC,2BAA4B,yBAC5BC,sBAAuB,qIACvBC,8BAA+B,gEAC/BC,uBAAwB,2DACxBC,kCAAmC,qEACnCC,qBAAsB,iBACtBC,6BAA8B,4EAC9BC,cAAe,+BACfC,sBAAuB,oGACvBC,gCAAiC,4DACjCC,gBAAiB,+BACjBC,2BAA4B,kCAC5BC,yBAA0B,iCAC1BC,wBAAyB,4DACzBC,oBAAqB,sEACrBC,qBAAsB,wBACtBC,iBAAkB,2BAClBC,eAAgB,kBAChBC,aAAc,8BACdC,sBAAuB,gCACvBC,8BAA+B,sCAC/BC,2BAA4B,gCAC5BC,kBAAmB,wBACnBC,WAAY,+BACZC,kBAAmB,uCACnBC,cAAe,iBACfC,yBAA0B,gEAC1BC,yBAA0B,4BAC1BC,+BAAgC,2CAChCC,8BAA+B,kCAC/BC,8BAA+B,4BAC/BC,sBAAuB,wEACvBC,6BAA8B,mCAC9BC,mBAAoB,iCACpBC,oBAAqB,8EACrBC,0BAA2B,uCAC3BC,qBAAsB,kCACtBC,iBAAkB,2BAClBC,sBAAuB,8DACvBC,qBAAsB,4CACtBC,0BAA2B,qFAC3BC,iCAAkC,+CAClCC,4BAA6B,8DAC7BC,kCAAmC,yDACnCC,iCAAkC,gEAClCC,sBAAuB,6BACvBC,yBAA0B,2BAC1BC,kBAAmB,8BACnBC,iBAAkB,kCAClBC,iBAAkB,mCAClBC,iCAAkC,6FAClCC,kBAAmB,wFACnBC,sBAAuB,0DACvBC,2BAA4B,4DAC5BC,UAAW,sBACXC,mBAAoB,gDACpBC,iBAAkB,uCAClBC,oBAAqB,mGACrBC,+BAAgC,iEAChCC,+BAAgC,oEAChCC,oBAAqB,8DACrBC,uBAAwB,sEACxBC,kCAAmC,+FACnCC,oBAAqB,wGACrBC,yBAA0B,6BAC1BC,0CAA2C,mIAC3CC,4CAA6C,qIAC7CC,6CAA8C,sIAC9CC,cAAe,mDACfC,kBAAmB,+CACnBC,eAAgB,0HAChBC,gBAAiB,uDACjBC,aAAc,yCACdC,oBAAqB,mCACrBC,2BAA4B,8BAC5BC,eAAgB,qFAChBC,oBAAqB,wDACrBC,mBAAoB,uDACpBC,WAAY,wBACZC,gBAAiB,kJACjBC,kBAAmB,4CACnBC,kBAAmB,iDACnBC,yCAA0C,kIAC1CC,2CAA4C,oIAC5CC,4CAA6C,qIAC7CC,8BAA+B,kCAC/BC,iCAAkC,0FAClCC,yBAA0B,oCAC1BC,uBAAwB,yDACxBC,kBAAmB,0BACnBC,2BAA4B,6DAC5BC,6BAA8B,kEAC9BC,oBAAqB,2CACrBC,2BAA4B,yDAC5BC,uBAAwB,0JACxBC,uBAAwB,gCACxBC,gBAAiB,sDACjBC,gBAAiB,wBACjBC,mCAAoC,mFACpCC,gBAAiB,kDACjBC,2BAA4B,qDAC5BC,yBAA0B,8EAC1BC,kBAAmB,qDACnBC,wBAAyB,+CACzBC,8BAA+B,mDAC/BC,6BAA8B,kEAC9BC,iBAAkB,qHAClBC,oBAAqB,uBACrBC,mBAAoB,kCACpBC,mBAAoB,+BACpBC,qBAAsB,wBACtBC,iBAAkB,4CAClBC,uBAAwB,uDACxBC,iBAAkB,+CAClBC,0BAA2B,sDAqC7B,SAASC,EAAiBvpD,GACxB,OAAe,MAARA,GAA8B,aAAdA,EAAKtV,MAAqC,SAAdsV,EAAKwpD,OAAmC,IAAhBxpD,EAAK/S,OAsRlF,MAAMw8D,EACJ,YAAYrP,EAAOsP,EAAQC,EAAeC,GACxCr8D,KAAK6sD,WAAQ,EACb7sD,KAAKm8D,YAAS,EACdn8D,KAAKo8D,mBAAgB,EACrBp8D,KAAKq8D,cAAW,EAChBr8D,KAAK6sD,MAAQA,EACb7sD,KAAKm8D,SAAWA,EAChBn8D,KAAKo8D,gBAAkBA,EACvBp8D,KAAKq8D,SAAWA,GAIpB,MAAMC,EAAU,CACdC,eAAgB,IAAIL,EAAW,KAAK,GACpCM,gBAAiB,IAAIN,EAAW,KAAK,GACrCO,iBAAkB,IAAIP,EAAW,MAAM,GACvCQ,cAAe,IAAIR,EAAW,MAAM,GACpCS,eAAgB,IAAIT,EAAW,KAAK,GACpCU,gBAAiB,IAAIV,EAAW,KAAK,GACrCljC,SAAU,IAAIkjC,EAAW,KAAK,GAAM,EAAMrxD,GAAKA,EAAEgyD,iBACjDC,mBAAoB,IAAIZ,EAAW,YAAY,GAC/Ca,kBAAmB,IAAIb,EAAW,YAAY,IAGhDnP,EAAMkB,OAAOvB,cAAgBK,EAAMe,OAAOpB,cAAgB,WACxD,GAAkC,IAA9B1sD,KAAKoa,MAAMiI,QAAQjmB,OAErB,YADA4D,KAAKoa,MAAM4iD,aAAc,GAI3B,IAAIC,EAAMj9D,KAAKoa,MAAMiI,QAAQnmB,MAEzB+gE,IAAQX,EAAQC,gBAA8C,aAA5Bv8D,KAAKk9D,aAAarQ,QACtDoQ,EAAMj9D,KAAKoa,MAAMiI,QAAQnmB,OAG3B8D,KAAKoa,MAAM4iD,aAAeC,EAAId,QAGhCpP,EAAMnkD,KAAK8jD,cAAgB,SAAUyQ,GACnC,IAAIC,GAAU,EAEVD,IAAapQ,EAAMsB,MACI,OAArBruD,KAAKoa,MAAM7a,QAAmBS,KAAKoa,MAAM4iD,aAAeG,IAAapQ,EAAM6D,WAAauM,IAAapQ,EAAM0E,QAA+B,UAArBzxD,KAAKoa,MAAM7a,OAAqBS,KAAKq9D,UAAUC,YACtKF,GAAU,GAIdp9D,KAAKoa,MAAM4iD,YAAcI,EAErBp9D,KAAKoa,MAAMmjD,aACbv9D,KAAKoa,MAAMmjD,YAAa,IAI5BxQ,EAAMY,OAAOjB,cAAgB,SAAUyQ,GACrCn9D,KAAKoa,MAAMiI,QAAQrmB,KAAKgE,KAAKw9D,aAAaL,GAAYb,EAAQC,eAAiBD,EAAQE,iBACvFx8D,KAAKoa,MAAM4iD,aAAc,GAG3BjQ,EAAM4B,aAAajC,cAAgB,WACjC1sD,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQI,eAChC18D,KAAKoa,MAAM4iD,aAAc,GAG3BjQ,EAAMiB,OAAOtB,cAAgB,SAAUyQ,GACrC,MAAMM,EAAkBN,IAAapQ,EAAM8D,KAAOsM,IAAapQ,EAAM4D,MAAQwM,IAAapQ,EAAMsE,OAAS8L,IAAapQ,EAAMqE,OAC5HpxD,KAAKoa,MAAMiI,QAAQrmB,KAAKyhE,EAAkBnB,EAAQK,eAAiBL,EAAQM,iBAC3E58D,KAAKoa,MAAM4iD,aAAc,GAG3BjQ,EAAMiC,OAAOtC,cAAgB,aAE7BK,EAAM6D,UAAUlE,cAAgBK,EAAM0E,OAAO/E,cAAgB,SAAUyQ,IACjEA,EAAS/Q,YAAc+Q,IAAapQ,EAAMmB,MAAQiP,IAAapQ,EAAM0D,OAAW0M,IAAapQ,EAAM+D,SAAW9wD,KAAK09D,0BAA+BP,IAAapQ,EAAMoB,OAASgP,IAAapQ,EAAMY,SAAW3tD,KAAKk9D,eAAiBZ,EAAQqB,OAG5O39D,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQS,mBAFhC/8D,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQQ,oBAKlC98D,KAAKoa,MAAM4iD,aAAc,GAG3BjQ,EAAM2B,UAAUhC,cAAgB,WAC1B1sD,KAAKk9D,eAAiBZ,EAAQtjC,SAChCh5B,KAAKoa,MAAMiI,QAAQnmB,MAEnB8D,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQtjC,UAGlCh5B,KAAKoa,MAAM4iD,aAAc,GAG3BjQ,EAAMc,WAAWnB,cAAgB,WAC/B1sD,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQG,kBAChCz8D,KAAKoa,MAAM4iD,aAAc,GAG3B,IAAIY,EAA+B,w6BAC/BC,EAA0B,kjBAC9B,MAAMC,EAA0B,IAAIjgD,OAAO,IAAM+/C,EAA+B,KAC1EG,EAAqB,IAAIlgD,OAAO,IAAM+/C,EAA+BC,EAA0B,KACrGD,EAA+BC,EAA0B,KACzwDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,MAAO,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,EAAG,OAAQ,KAE55B,SAASC,EAAc7zB,EAAM9sC,GAC3B,IAAIsxC,EAAM,MAEV,IAAK,IAAIhyC,EAAI,EAAGT,EAASmB,EAAInB,OAAQS,EAAIT,EAAQS,GAAK,EAAG,CAEvD,GADAgyC,GAAOtxC,EAAIV,GACPgyC,EAAMxE,EAAM,OAAO,EAEvB,GADAwE,GAAOtxC,EAAIV,EAAI,GACXgyC,GAAOxE,EAAM,OAAO,EAG1B,OAAO,EAGT,SAAS8zB,EAAkB9zB,GACzB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQyzB,EAAwBj+C,KAAK3I,OAAOknD,aAAa/zB,IAGnE6zB,EAAc7zB,EAAM2zB,KAE7B,SAASK,EAAiBh0B,GACxB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,EAAO,MACPA,EAAO,MACPA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQ0zB,EAAmBl+C,KAAK3I,OAAOknD,aAAa/zB,IAG9D6zB,EAAc7zB,EAAM2zB,IAA+BE,EAAc7zB,EAAM4zB,MAGhF,MAAMK,EAEI,CAAC,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,SAF9FA,EAGQ,CAAC,OAAQ,aAEjBC,EAAa,IAAI7gE,IAJZ,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,WAKzT8gE,EAAyB,IAAI9gE,IAAI4gE,GACjCG,EAA6B,IAAI/gE,IAAI4gE,GAC3C,SAASI,EAAeC,EAAMC,GAC5B,OAAOA,GAAqB,UAATD,GAA6B,SAATA,EAEzC,SAASE,EAAqBF,EAAMC,GAClC,OAAOF,EAAeC,EAAMC,IAAaJ,EAAuB7gE,IAAIghE,GAEtE,SAASG,EAA6BH,GACpC,OAAOF,EAA2B9gE,IAAIghE,GAExC,SAASI,EAAyBJ,EAAMC,GACtC,OAAOC,EAAqBF,EAAMC,IAAaE,EAA6BH,GAM9E,MAAMK,EAA4B,kBAKlC,MAAMC,EAAgB,IAAIvhE,IAAI,CAAC,IAAK,MAAO,OAAQ,UAAW,QAAS,UAAW,QAAS,YAAa,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAQ,SAAU,SACnKwhE,EAAa7gE,OAAO00D,OAAO,CAC/BoM,0BAA2B,iFAC3BC,2BAA4B,wKAC5BC,mBAAoB,oCACpBC,oBAAqB,0DACrBC,6BAA8B,sEAC9BC,8BAA+B,+CAC/BC,gCAAiC,sGACjCC,wBAAyB,oGACzBC,6BAA8B,+KAC9BC,wBAAyB,mGACzBC,uCAAwC,uGACxCC,wCAAyC,gFACzCC,uCAAwC,qEACxCC,wCAAyC,iHACzCC,sBAAuB,2HACvBC,+BAAgC,0EAChCC,0CAA2C,8GAC3CC,oCAAqC,wKACrCC,mBAAoB,6EACpBC,uBAAwB,0EACxBC,gBAAiB,+CACjBC,oCAAqC,yFACrCC,wBAAyB,0GACzBC,oBAAqB,kEACrBC,kBAAmB,yDACnBC,uBAAwB,iFACxBC,eAAgB,yCAChBC,sBAAuB,mHACvBC,kBAAmB,sEACnBC,kCAAmC,sEACnCC,uBAAwB,8BACxBC,6BAA8B,wDAC9BC,mCAAoC,wDACpCC,qBAAsB,kEACtBC,6BAA8B,kDAC9BC,kCAAmC,mEACnCC,gDAAiD,mHACjDC,6BAA8B,yDAC9BC,oCAAqC,mEACrCC,wBAAyB,8BAO3B,SAASC,EAAkBlvD,GACzB,MAA2B,SAApBA,EAAKmvD,YAA6C,WAApBnvD,EAAKmvD,WAG5C,SAASC,EAAqBznD,GAC5B,OAAQA,EAAMjd,OAAS4vD,EAAMnkD,QAAUwR,EAAMjd,KAAKgvD,UAA4B,SAAhB/xC,EAAM7a,MAGtE,MAAMuiE,EAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACL7kE,KAAM,cACN8kE,UAAW,oBAcb,MAAMC,EAAoB,yBAwpF1B,MAAMC,EAAW,CACf1xB,KAAM,IACNF,IAAK,IACLC,KAAM,IACNF,GAAI,IACJD,GAAI,IACJ+xB,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNxZ,MAAO,IACPyZ,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,QAAS,IACTC,GAAI,IACJC,IAAK,IACLC,MAAO,IACPC,IAAK,IACLC,QAAS,IACTC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,QAAS,IACTC,GAAI,IACJC,IAAK,IACLC,OAAQ,IACRC,MAAO,IACPC,IAAK,IACLC,QAAS,IACTC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,SAAU,IACVC,MAAO,IACPC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,GAAI,IACJC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPx4D,KAAM,IACNy4D,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,OAAQ,IACRC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,GAAI,IACJC,MAAO,IACPC,GAAI,IACJC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,KAGHC,EAAa,gBACbC,EAAiB,QACjBC,EAAYvzE,OAAO00D,OAAO,CAC9B8e,iBAAkB,8DAClBC,0BAA2B,gDAC3BC,yBAA0B,kDAC1BC,oBAAqB,gEACrBC,uBAAwB,4BACxBC,6BAA8B,qGA+BhC,SAASrsD,EAAWhgB,GAClB,QAAOA,IAAyB,uBAAhBA,EAAO1I,MAAiD,uBAAhB0I,EAAO1I,MAGjE,SAASg1E,EAAoBtsE,GAC3B,GAAoB,kBAAhBA,EAAO1I,KACT,OAAO0I,EAAO+C,KAGhB,GAAoB,sBAAhB/C,EAAO1I,KACT,OAAO0I,EAAOusE,UAAUxpE,KAAO,IAAM/C,EAAO+C,KAAKA,KAGnD,GAAoB,wBAAhB/C,EAAO1I,KACT,OAAOg1E,EAAoBtsE,EAAOA,QAAU,IAAMssE,EAAoBtsE,EAAOwsE,UAG/E,MAAM,IAAI93C,MAAM,6BAA+B10B,EAAO1I,MA9CxDm/D,EAAQgW,OAAS,IAAIpW,EAAW,QAAQ,GACxCI,EAAQiW,OAAS,IAAIrW,EAAW,SAAS,GACzCI,EAAQkW,OAAS,IAAItW,EAAW,kBAAkB,GAAM,GACxDnP,EAAM0lB,QAAU,IAAIzmB,EAAU,WAC9Be,EAAM2lB,QAAU,IAAI1mB,EAAU,UAAW,CACvCI,YAAY,IAEdW,EAAM4lB,YAAc,IAAI3mB,EAAU,cAAe,CAC/CK,YAAY,IAEdU,EAAM6lB,UAAY,IAAI5mB,EAAU,aAEhCe,EAAM4lB,YAAYjmB,cAAgB,WAChC1sD,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQkW,QAChCxyE,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQgW,QAChCtyE,KAAKoa,MAAM4iD,aAAc,GAG3BjQ,EAAM6lB,UAAUlmB,cAAgB,SAAUyQ,GACxC,MAAMF,EAAMj9D,KAAKoa,MAAMiI,QAAQnmB,MAE3B+gE,IAAQX,EAAQgW,QAAUnV,IAAapQ,EAAMiD,OAASiN,IAAQX,EAAQiW,QACxEvyE,KAAKoa,MAAMiI,QAAQnmB,MACnB8D,KAAKoa,MAAM4iD,YAAch9D,KAAKk9D,eAAiBZ,EAAQkW,QAEvDxyE,KAAKoa,MAAM4iD,aAAc,GA+c7B,MAAM6V,EACJ,YAAYC,GACV9yE,KAAK8yE,WAAQ,EACb9yE,KAAK+yE,IAAM,GACX/yE,KAAKgzE,QAAU,GACfhzE,KAAKizE,UAAY,GACjBjzE,KAAK8yE,MAAQA,GAIjB,MAAMI,EACJ,YAAYC,EAAOvU,GACjB5+D,KAAKozE,WAAa,GAClBpzE,KAAKmzE,WAAQ,EACbnzE,KAAK4+D,cAAW,EAChB5+D,KAAKqzE,iBAAmB,IAAI71E,IAC5BwC,KAAKszE,sBAAwB,IAAI91E,IACjCwC,KAAKmzE,MAAQA,EACbnzE,KAAK4+D,SAAWA,EAGlB,iBACE,OAx7ImB,EAw7IX5+D,KAAKuzE,kBAAkBT,OAA0B,EAG3D,iBACE,OAz7IgB,GAy7IR9yE,KAAKwzE,mBAAmBV,OAAuB,EAGzD,uBACE,OA57IuB,GA47If9yE,KAAKwzE,mBAAmBV,OAA8B,EAGhE,cACE,OA/7IgB,GA+7IR9yE,KAAKwzE,mBAAmBV,OAAuB,EAGzD,yBACE,OAx8ImB,EAw8IX9yE,KAAKwzE,mBAAmBV,OAA0B,EAG5D,0BACE,OAAO9yE,KAAKyzE,2BAA2BzzE,KAAK0zE,gBAG9C,YAAYZ,GACV,OAAO,IAAID,EAAMC,GAGnB,MAAMA,GACJ9yE,KAAKozE,WAAWp3E,KAAKgE,KAAK2zE,YAAYb,IAGxC,OACE9yE,KAAKozE,WAAWl3E,MAGlB,2BAA2B03E,GACzB,SA59ImB,EA49ITA,EAAMd,QAA2B9yE,KAAK4+D,UA79I9B,EA69I0CgV,EAAMd,OAGpE,YAAYlqE,EAAMirE,EAAahlC,GAC7B,IAAI+kC,EAAQ5zE,KAAK0zE,eAEjB,GAv9IuB,EAu9InBG,GAt9IoB,GAs9IgBA,EACtC7zE,KAAK8zE,0BAA0BF,EAAOhrE,EAAMirE,EAAahlC,GAv9InC,GAy9IlBglC,EACFD,EAAMX,UAAUj3E,KAAK4M,GAErBgrE,EAAMZ,QAAQh3E,KAAK4M,GA79IA,EAg+IjBirE,GACF7zE,KAAK+zE,mBAAmBH,EAAOhrE,QAE5B,GAp+IY,EAo+IRirE,EACT,IAAK,IAAIh3E,EAAImD,KAAKozE,WAAWh3E,OAAS,EAAGS,GAAK,IAC5C+2E,EAAQ5zE,KAAKozE,WAAWv2E,GACxBmD,KAAK8zE,0BAA0BF,EAAOhrE,EAAMirE,EAAahlC,GACzD+kC,EAAMb,IAAI/2E,KAAK4M,GACf5I,KAAK+zE,mBAAmBH,EAAOhrE,KA5+IrBorE,IA6+INJ,EAAMd,UALuCj2E,GASjDmD,KAAK4+D,UAz/IS,EAy/IGgV,EAAMd,OACzB9yE,KAAKqzE,iBAAiBv2E,OAAO8L,GAIjC,mBAAmBgrE,EAAOhrE,GACpB5I,KAAK4+D,UA//IS,EA+/IGgV,EAAMd,OACzB9yE,KAAKqzE,iBAAiBv2E,OAAO8L,GAIjC,0BAA0BgrE,EAAOhrE,EAAMirE,EAAahlC,GAC9C7uC,KAAKi0E,oBAAoBL,EAAOhrE,EAAMirE,IACxC7zE,KAAKmzE,MAAMtkC,EAAKikB,EAAc8I,iBAAkBhzD,GAIpD,oBAAoBgrE,EAAOhrE,EAAMirE,GAC/B,SAlgJoB,EAkgJdA,KA//IiB,EAigJnBA,EACKD,EAAMZ,QAAQpzD,QAAQhX,IAAS,GAAKgrE,EAAMX,UAAUrzD,QAAQhX,IAAS,GAAKgrE,EAAMb,IAAInzD,QAAQhX,IAAS,EAjgJtF,GAogJpBirE,EACKD,EAAMZ,QAAQpzD,QAAQhX,IAAS,IAAM5I,KAAKyzE,2BAA2BG,IAAUA,EAAMb,IAAInzD,QAAQhX,IAAS,EAG5GgrE,EAAMZ,QAAQpzD,QAAQhX,IAAS,KAlhJf,EAkhJsBgrE,EAAMd,OAA8Bc,EAAMZ,QAAQ,KAAOpqE,KAAU5I,KAAKyzE,2BAA2BG,IAAUA,EAAMX,UAAUrzD,QAAQhX,IAAS,GAG7L,iBAAiBvM,IACsC,IAAjD2D,KAAKozE,WAAW,GAAGJ,QAAQpzD,QAAQvjB,EAAGuM,QAA6D,IAA7C5I,KAAKozE,WAAW,GAAGL,IAAInzD,QAAQvjB,EAAGuM,QAAmE,IAAnD5I,KAAKozE,WAAW,GAAGH,UAAUrzD,QAAQvjB,EAAGuM,OAClJ5I,KAAKqzE,iBAAiB91E,IAAIlB,EAAGuM,KAAMvM,EAAG6sB,OAI1C,eACE,OAAOlpB,KAAKozE,WAAWpzE,KAAKozE,WAAWh3E,OAAS,GAGlD,kBACE,IAAK,IAAIS,EAAImD,KAAKozE,WAAWh3E,OAAS,GAAIS,IAAK,CAC7C,MAAM+2E,EAAQ5zE,KAAKozE,WAAWv2E,GAE9B,GA9hJYm3E,IA8hJRJ,EAAMd,MACR,OAAOc,GAKb,mBACE,IAAK,IAAI/2E,EAAImD,KAAKozE,WAAWh3E,OAAS,GAAIS,IAAK,CAC7C,MAAM+2E,EAAQ5zE,KAAKozE,WAAWv2E,GAE9B,IAxiJYm3E,IAwiJPJ,EAAMd,OA1iJG,GA0iJkBc,EAAMd,UA9iJxB,EA8iJkDc,EAAMd,OACpE,OAAOc,IAOf,MAAMM,UAAwBrB,EAC5B,eAAehzE,GACbs0E,SAASt0E,GACTG,KAAK+sD,MAAQ,GACb/sD,KAAKo0E,MAAQ,GACbp0E,KAAKq0E,WAAa,GAClBr0E,KAAKs0E,QAAU,GACft0E,KAAKu0E,mBAAqB,IAK9B,MAAMC,WAA+BtB,EACnC,YAAYJ,GACV,OAAO,IAAIoB,EAAgBpB,GAG7B,YAAYlqE,EAAMirE,EAAahlC,GAC7B,MAAM+kC,EAAQ5zE,KAAK0zE,eAEnB,GA1jJ8B,KA0jJ1BG,EAGF,OAFA7zE,KAAK+zE,mBAAmBH,EAAOhrE,QAC/BgrE,EAAMW,mBAAmBv4E,KAAK4M,GAIhCurE,MAAMM,eAAe7+D,WAxkJF,EA0kJfi+D,IA3kJgB,EA4kJZA,IACJ7zE,KAAK8zE,0BAA0BF,EAAOhrE,EAAMirE,EAAahlC,GACzD7uC,KAAK+zE,mBAAmBH,EAAOhrE,IAGjCgrE,EAAM7mB,MAAM/wD,KAAK4M,IA1kJI,IA6kJnBirE,GAAkCD,EAAMQ,MAAMp4E,KAAK4M,GA5kJ1B,IA6kJzBirE,GAAwCD,EAAMS,WAAWr4E,KAAK4M,GA/kJ7C,IAglJjBirE,GAAgCD,EAAMU,QAAQt4E,KAAK4M,GAGzD,oBAAoBgrE,EAAOhrE,EAAMirE,GAC/B,GAAID,EAAMQ,MAAMx0D,QAAQhX,IAAS,EAAG,CAClC,GAplJqB,IAolJjBirE,EAAkC,CAGpC,SAtlJyB,IAolJNA,KACFD,EAAMS,WAAWz0D,QAAQhX,IAAS,EAIrD,OAAO,EAGT,OA9lJqB,IA8lJjBirE,GAAkCD,EAAMU,QAAQ10D,QAAQhX,IAAS,EAC/DgrE,EAAMZ,QAAQpzD,QAAQhX,IAAS,MArmJjB,EAsmJNirE,MArmJK,EA2mJfA,GAAgCD,EAAM7mB,MAAMntC,QAAQhX,IAAS,IAI1DurE,MAAMF,uBAAuBr+D,WAGtC,iBAAiBvZ,IACoC,IAA/C2D,KAAKozE,WAAW,GAAGrmB,MAAMntC,QAAQvjB,EAAGuM,QAA4E,IAA5D5I,KAAKozE,WAAW,GAAGmB,mBAAmB30D,QAAQvjB,EAAGuM,OACvGurE,MAAMO,iBAAiBr4E,IAW7B,MAAMs4E,GACJ,cACE30E,KAAK40E,OAAS,GAGhB,MAAM9B,GACJ9yE,KAAK40E,OAAO54E,KAAK82E,GAGnB,OACE9yE,KAAK40E,OAAO14E,MAGd,eACE,OAAO8D,KAAK40E,OAAO50E,KAAK40E,OAAOx4E,OAAS,GAG1C,eACE,OArBgB,EAqBR4D,KAAK60E,gBAAgC,EAG/C,eACE,OA1BgB,EA0BR70E,KAAK60E,gBAAgC,EAG/C,gBACE,OA5BiB,EA4BT70E,KAAK60E,gBAAiC,EAGhD,YACE,OA/Ba,EA+BL70E,KAAK60E,gBAA6B,GAI9C,SAASC,GAAcC,EAASC,GAC9B,OAAQD,EAtCU,EAsCc,IAAMC,EAvCpB,EAuCgD,GAGpE,SAASC,GAAQC,GACf,GAAS,MAALA,EACF,MAAM,IAAI36C,MAAM,cAAc26C,YAGhC,OAAOA,EAGT,SAASC,GAAOD,GACd,IAAKA,EACH,MAAM,IAAI36C,MAAM,eAIpB,MAAM66C,GAAW/2E,OAAO00D,OAAO,CAC7BsiB,sBAAuB,mDACvBC,uBAAwB,oDACxBC,6BAA8B,8DAC9BC,gCAAiC,oDACjCC,iCAAkC,4DAClCC,kBAAmB,2BACnBC,wBAAyB,6BACzBC,mBAAoB,sCACpBC,oBAAqB,uCACrBC,0BAA2B,uDAC3BC,+BAAgC,gEAChCC,wBAAyB,qDACzBC,yBAA0B,sDAC1BC,wBAAyB,0DACzBC,iCAAkC,2DAClCC,2BAA4B,wDAC5BC,kBAAmB,iFACnBC,0BAA2B,wDAC3BC,+BAAgC,gEAChCC,0BAA2B,mHAC3BC,4BAA6B,wEAC7BC,mBAAoB,+EACpBC,yBAA0B,yCAC1BC,8BAA+B,8CAC/BC,8BAA+B,qDAC/BC,iCAAkC,oEAClCC,kCAAmC,6FAkqErChqB,EAAM54C,YAAc,IAAI63C,EAAU,KAAM,CACtCK,YAAY,IAoOd,SAAS2qB,GAAUC,EAASruE,GAC1B,OAAOquE,EAAQloE,KAAK+T,GACdnjB,MAAMmoD,QAAQhlC,GACTA,EAAO,KAAOla,EAEdka,IAAWla,GAIxB,SAASsuE,GAAgBD,EAASruE,EAAM49B,GACtC,MAAM1jB,EAASm0D,EAAQE,KAAKr0D,GACtBnjB,MAAMmoD,QAAQhlC,GACTA,EAAO,KAAOla,EAEdka,IAAWla,GAItB,OAAIka,GAAUnjB,MAAMmoD,QAAQhlC,GACnBA,EAAO,GAAG0jB,GAGZ,KAET,MAAM4wC,GAAqB,CAAC,UAAW,QAAS,UAC1CC,GAAgC,CAAC,OAAQ,OA4C/C,MAAMC,GAAe,CACnBC,OAzpNYC,GAAc,cAAcA,EACxC,0BAAyB,QACvB93D,EAAO,MACPozD,IAEA,IAAI2E,EAAQ,KAEZ,IACEA,EAAQ,IAAI55D,OAAO6B,EAASozD,GAC5B,MAAO30C,IAET,MAAM1rB,EAAOzS,KAAK03E,mBAAmBD,GAKrC,OAJAhlE,EAAKglE,MAAQ,CACX/3D,UACAozD,SAEKrgE,EAGT,yBAAyBlT,GACvB,MAAMo4E,EAA2B,oBAAXC,OAAyBA,OAAOr4E,GAAS,KACzDkT,EAAOzS,KAAK03E,mBAAmBC,GAErC,OADAllE,EAAKw6C,OAAS/1C,OAAOzE,EAAKlT,OAASA,GAC5BkT,EAGT,0BAA0BlT,GACxB,MACMkT,EAAOzS,KAAK03E,mBADF,MAGhB,OADAjlE,EAAKy6C,QAAUh2C,OAAOzE,EAAKlT,OAASA,GAC7BkT,EAGT,mBAAmBlT,GACjB,OAAOS,KAAK63E,aAAat4E,EAAO,WAGlC,gBAAgB0jB,GACd,MAAM60D,EAAmB70D,EAAU1jB,MAC7Bw4E,EAAO/3E,KAAKg4E,YAAY/0D,EAAUiG,MAAOjG,EAAUqnB,IAAIphB,OACvD+uD,EAAaj4E,KAAKg4E,YAAYF,EAAiB5uD,MAAO4uD,EAAiBxtC,IAAIphB,OAKjF,OAJA+uD,EAAW14E,MAAQu4E,EAAiBv4E,MACpC04E,EAAWx8E,IAAMq8E,EAAiBI,MAAMz8E,IACxCs8E,EAAKE,WAAaj4E,KAAKm4E,aAAaF,EAAY,UAAWH,EAAiBhyD,IAAKgyD,EAAiBxtC,IAAIxkB,KACtGiyD,EAAK90D,UAAY60D,EAAiBI,MAAMz8E,IAAI+M,MAAM,GAAI,GAC/CxI,KAAKm4E,aAAaJ,EAAM,sBAAuB90D,EAAU6C,IAAK7C,EAAUqnB,IAAIxkB,KAGrF,aAAarT,EAAMsiE,GACjBZ,MAAMiE,aAAa3lE,EAAMsiE,GACzBtiE,EAAKwlE,YAAa,EAGpB,iBAAiBxlE,GACXupD,EAAiBvpD,GACnBzS,KAAKq4E,iBAAiB5lE,EAAKlT,OAE3B40E,MAAMkE,iBAAiB5lE,GAI3B,6BAA6B/S,GAC3B,OAAOA,EAAOH,MAAMmuC,OAGtB,UAAU4qC,EAAMzE,EAljBA,GAkjByB0E,EAAcC,EAAoBC,GACzE,OAAQH,EAAKn7E,MACX,IAAK,gBACHm7E,EAAKrrC,WAAW9uC,QAAQ2Y,IACtB9W,KAAK04E,UAAwB,aAAd5hE,EAAK3Z,KAAsB2Z,EAAKvX,MAAQuX,EAAM+8D,EAAa0E,EAAc,+BAAgCE,KAE1H,MAEF,QACEtE,MAAMuE,UAAUJ,EAAMzE,EAAa0E,EAAcC,EAAoBC,IAI3E,WAAW3hE,EAAM6hE,EAAUC,EAAUC,GAC/B/hE,EAAKpX,QAITy0E,MAAM2E,WAAWhiE,EAAM6hE,EAAUC,EAAUC,GAG7C,iBAAiBd,GACf,IAAIgB,EAEJ,MAAqB,wBAAdhB,EAAK56E,MAA2D,YAAzB46E,EAAKE,WAAW96E,MAAuD,iBAA1B46E,EAAKE,WAAW14E,SAA2E,OAAlDw5E,EAAwBhB,EAAKE,WAAWC,YAAiB,EAASa,EAAsBC,eAG9N,gBAAgBjB,GACd,MAAM90D,EAAYkxD,MAAM8E,gBAAgBlB,GAClCx4E,EAAQw4E,EAAKE,WAAW14E,MAE9B,OADA0jB,EAAU1jB,MAAMA,MAAQA,EACjB0jB,EAGT,eAAexQ,EAAMymE,EAAiBC,EAAUrzD,GAC9CquD,MAAMiF,eAAe3mE,EAAMymE,EAAiBC,EAAUrzD,GACtD,MAAMuzD,EAAsB5mE,EAAKqO,WAAWviB,IAAIqkC,GAAK5iC,KAAKs5E,gBAAgB12C,IAC1EnwB,EAAKgxB,KAAO41C,EAAoBlqE,OAAOsD,EAAKgxB,aACrChxB,EAAKqO,WAGd,gBAAgBy4D,EAAW75E,EAAQs1E,EAAaD,EAASyE,EAAeC,GACtEz5E,KAAK05E,YAAYh6E,EAAQs1E,EAAaD,EAASyE,EAAeC,EAAmB,eAAe,GAE5F/5E,EAAOi6E,iBACTj6E,EAAOH,MAAMo6E,eAAiBj6E,EAAOi6E,sBAC9Bj6E,EAAOi6E,gBAGhBJ,EAAU91C,KAAKznC,KAAK0D,GAGtB,cAAcm5E,GACZ,OAAQ74E,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMC,IACX,KAAKD,EAAMK,OACT,OAAOptD,KAAK03E,mBAAmB13E,KAAKoa,MAAM7a,OAE5C,KAAKwtD,EAAMI,OACT,OAAOntD,KAAK45E,yBAAyB55E,KAAKoa,MAAM7a,OAElD,KAAKwtD,EAAME,OACT,OAAOjtD,KAAK65E,yBAAyB75E,KAAKoa,MAAM7a,OAElD,KAAKwtD,EAAMG,QACT,OAAOltD,KAAK85E,0BAA0B95E,KAAKoa,MAAM7a,OAEnD,KAAKwtD,EAAM8E,MACT,OAAO7xD,KAAK03E,mBAAmB,MAEjC,KAAK3qB,EAAM+E,MACT,OAAO9xD,KAAK03E,oBAAmB,GAEjC,KAAK3qB,EAAMgF,OACT,OAAO/xD,KAAK03E,oBAAmB,GAEjC,QACE,OAAOvD,MAAM4F,cAAclB,IAIjC,aAAat5E,EAAOpC,EAAM68E,EAAUC,GAClC,MAAMxnE,EAAO0hE,MAAM0D,aAAat4E,EAAOpC,EAAM68E,EAAUC,GAGvD,OAFAxnE,EAAKhX,IAAMgX,EAAKylE,MAAMz8E,WACfgX,EAAKylE,MACLzlE,EAGT,kBAAkBA,EAAMynE,EAAiBC,GAAW,GAClDhG,MAAMiG,kBAAkB3nE,EAAMynE,EAAiBC,GAC/C1nE,EAAKwlE,WAAgC,mBAAnBxlE,EAAKgxB,KAAKtmC,KAG9B,YAAYsV,EAAMuiE,EAAaD,EAASyE,EAAea,EAAkBl9E,EAAMm9E,GAAe,GAC5F,IAAIC,EAAWv6E,KAAKw6E,YAOpB,OANAD,EAASte,KAAOxpD,EAAKwpD,KACrBse,EAAWpG,MAAMuF,YAAYa,EAAUvF,EAAaD,EAASyE,EAAea,EAAkBl9E,EAAMm9E,GACpGC,EAASp9E,KAAO,4BACTo9E,EAASte,KAChBxpD,EAAKlT,MAAQg7E,EACbp9E,EAAgB,gBAATA,EAAyB,mBAAqBA,EAC9C6C,KAAKy6E,WAAWhoE,EAAMtV,GAG/B,kBAAkB2Z,EAAMk+D,EAAaD,EAAS2F,EAAWC,GACvD,MAAMloE,EAAO0hE,MAAMyG,kBAAkB9jE,EAAMk+D,EAAaD,EAAS2F,EAAWC,GAQ5E,OANIloE,IACFA,EAAKtV,KAAO,WACM,WAAdsV,EAAKwpD,OAAmBxpD,EAAKwpD,KAAO,QACxCxpD,EAAKooE,WAAY,GAGZpoE,EAGT,oBAAoBqE,EAAMkjE,EAAUC,EAAUS,EAAW7B,GACvD,MAAMpmE,EAAO0hE,MAAM2G,oBAAoBhkE,EAAMkjE,EAAUC,EAAUS,EAAW7B,GAO5E,OALIpmE,IACFA,EAAKwpD,KAAO,OACZxpD,EAAKtV,KAAO,YAGPsV,EAGT,aAAaA,GACX,OAAIupD,EAAiBvpD,IACnBzS,KAAK+6E,aAAatoE,EAAKlT,OAChBkT,GAGF0hE,MAAM4G,aAAatoE,GAG5B,iCAAiCqE,EAAMkkE,GACrC,GAAkB,QAAdlkE,EAAKmlD,MAAgC,QAAdnlD,EAAKmlD,KAC9B,MAAMj8D,KAAKmzE,MAAMr8D,EAAK1Z,IAAI8rB,MAAO4pC,EAAcsF,oBAC1C,GAAIthD,EAAKpX,OACd,MAAMM,KAAKmzE,MAAMr8D,EAAK1Z,IAAI8rB,MAAO4pC,EAAcuF,kBAE/C8b,MAAM8G,iCAAiCnkE,EAAMkkE,GAIjD,qBAAqBvoE,EAAMyoE,GAUzB,OATA/G,MAAMgH,qBAAqB1oE,EAAMyoE,GAER,WAArBzoE,EAAK+6B,OAAOrwC,OACdsV,EAAKtV,KAAO,mBACZsV,EAAKwG,OAASxG,EAAKmD,UAAU,UACtBnD,EAAKmD,iBACLnD,EAAK+6B,QAGP/6B,EAGT,qBAAqB2oE,EAAUC,GACxBD,GAILjH,MAAMmH,qBAAqBF,EAAUC,GAGvC,YAAY5oE,GAGV,OAFA0hE,MAAMoH,YAAY9oE,GAEVA,EAAKtV,MACX,IAAK,uBACHsV,EAAK+oE,SAAW,KAChB,MAEF,IAAK,yBAC4B,IAA3B/oE,EAAKgpE,WAAWr/E,QAA4C,6BAA5BqW,EAAKgpE,WAAW,GAAGt+E,OACrDsV,EAAKtV,KAAO,uBACZsV,EAAK+oE,SAAW/oE,EAAKgpE,WAAW,GAAGD,gBAC5B/oE,EAAKgpE,YAMlB,OAAOhpE,EAGT,eAAemkB,EAAMojD,EAAUC,EAAUyB,EAASthE,GAChD,MAAM3H,EAAO0hE,MAAMwH,eAAe/kD,EAAMojD,EAAUC,EAAUyB,EAASthE,GAErE,GAAIA,EAAMwhE,qBAKR,GAJkB,6BAAdnpE,EAAKtV,MAAqD,2BAAdsV,EAAKtV,OACnDsV,EAAKtV,KAAOsV,EAAKtV,KAAK0+E,UAAU,IAG9BzhE,EAAMzd,KAAM,CACd,MAAMm/E,EAAQ97E,KAAK+7E,gBAAgBtpE,GAEnC,OADAqpE,EAAM7D,WAAaxlE,EACZzS,KAAKy6E,WAAWqB,EAAO,wBAET,qBAAdrpE,EAAKtV,MAA6C,mBAAdsV,EAAKtV,OAClDsV,EAAKyoE,UAAW,GAGlB,OAAOzoE,IA44MTupE,IA1rGSxE,GAAc,cAAcA,EACrC,eACE,IAAIva,EAAM,GACNgf,EAAaj8E,KAAKoa,MAAMy0B,IAE5B,OAAS,CACP,GAAI7uC,KAAKoa,MAAMy0B,KAAO7uC,KAAK5D,OACzB,MAAM4D,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO0oD,EAAUK,wBAG/C,MAAMiK,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAE5C,OAAQqtC,GACN,KAAK,GACL,KAAK,IACH,OAAIl8E,KAAKoa,MAAMy0B,MAAQ7uC,KAAKoa,MAAM8O,MACrB,KAAPgzD,GAAal8E,KAAKoa,MAAM4iD,eACxBh9D,KAAKoa,MAAMy0B,IACN7uC,KAAKm8E,YAAYpvB,EAAM4lB,cAGzBwB,MAAMiI,iBAAiBF,IAGhCjf,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KACxC7uC,KAAKm8E,YAAYpvB,EAAM2lB,QAASzV,IAEzC,KAAK,GACHA,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAC/CouB,GAAOj9D,KAAKq8E,gBACZJ,EAAaj8E,KAAKoa,MAAMy0B,IACxB,MAEF,QACM0jB,EAAU2pB,IACZjf,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAC/CouB,GAAOj9D,KAAKs8E,gBAAe,GAC3BL,EAAaj8E,KAAKoa,MAAMy0B,OAEtB7uC,KAAKoa,MAAMy0B,MAOvB,eAAe0tC,GACb,MAAML,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAC5C,IAAIouB,EAYJ,QAXEj9D,KAAKoa,MAAMy0B,IAEF,KAAPqtC,GAAuD,KAA1Cl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,QAC9C7uC,KAAKoa,MAAMy0B,IACbouB,EAAMsf,EAAgB,KAAO,QAE7Btf,EAAM/lD,OAAOknD,aAAa8d,KAG1Bl8E,KAAKoa,MAAMoiE,QACbx8E,KAAKoa,MAAMqiE,UAAYz8E,KAAKoa,MAAMy0B,IAC3BouB,EAGT,cAAczoB,GACZ,IAAIyoB,EAAM,GACNgf,IAAej8E,KAAKoa,MAAMy0B,IAE9B,OAAS,CACP,GAAI7uC,KAAKoa,MAAMy0B,KAAO7uC,KAAK5D,OACzB,MAAM4D,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc4I,oBAGnD,MAAMwgB,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAC5C,GAAIqtC,IAAO1nC,EAAO,MAEP,KAAP0nC,GACFjf,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAC/CouB,GAAOj9D,KAAKq8E,gBACZJ,EAAaj8E,KAAKoa,MAAMy0B,KACf0jB,EAAU2pB,IACnBjf,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAC/CouB,GAAOj9D,KAAKs8E,gBAAe,GAC3BL,EAAaj8E,KAAKoa,MAAMy0B,OAEtB7uC,KAAKoa,MAAMy0B,IAKjB,OADAouB,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,OACxC7uC,KAAKm8E,YAAYpvB,EAAMK,OAAQ6P,GAGxC,gBACE,IAEIyf,EAFAn1B,EAAM,GACNo1B,EAAQ,EAERT,EAAKl8E,KAAKm+C,MAAMn+C,KAAKoa,MAAMy0B,KAC/B,MAAMmrC,IAAah6E,KAAKoa,MAAMy0B,IAE9B,KAAO7uC,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,QAAUugF,IAAU,IAAI,CAGnD,GAFAT,EAAKl8E,KAAKm+C,MAAMn+C,KAAKoa,MAAMy0B,OAEhB,MAAPqtC,EAAY,CACC,MAAX30B,EAAI,GACS,MAAXA,EAAI,IACNA,EAAMA,EAAI5Y,OAAO,GAEb+iC,EAAW7xD,KAAK0nC,KAClBm1B,EAASxlE,OAAO0lE,cAAcp9D,SAAS+nC,EAAK,QAG9CA,EAAMA,EAAI5Y,OAAO,GAEbgjC,EAAe9xD,KAAK0nC,KACtBm1B,EAASxlE,OAAO0lE,cAAcp9D,SAAS+nC,EAAK,OAIhDm1B,EAASva,EAAS5a,GAGpB,MAGFA,GAAO20B,EAGT,OAAKQ,IACH18E,KAAKoa,MAAMy0B,IAAMmrC,EACV,KAMX,cACE,IAAIkC,EACJ,MAAMhzD,EAAQlpB,KAAKoa,MAAMy0B,IAEzB,GACEqtC,EAAKl8E,KAAKm+C,MAAMjP,aAAalvC,KAAKoa,MAAMy0B,WACjCwvB,EAAiB6d,IAAc,KAAPA,GAEjC,OAAOl8E,KAAKm8E,YAAYpvB,EAAM0lB,QAASzyE,KAAKm+C,MAAM31C,MAAM0gB,EAAOlpB,KAAKoa,MAAMy0B,MAG5E,qBACE,MAAMp8B,EAAOzS,KAAKw6E,YAWlB,OATIx6E,KAAKqX,MAAM01C,EAAM0lB,SACnBhgE,EAAK7J,KAAO5I,KAAKoa,MAAM7a,MACdS,KAAKoa,MAAMjd,KAAKgvD,QACzB15C,EAAK7J,KAAO5I,KAAKoa,MAAMjd,KAAKgvD,QAE5BnsD,KAAK68E,aAGP78E,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,iBAG/B,yBACE,MAAMunE,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtBrxE,EAAO5I,KAAK88E,qBAClB,IAAK98E,KAAK+8E,IAAIhwB,EAAMoB,OAAQ,OAAOvlD,EACnC,MAAM6J,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAGxC,OAFAxnE,EAAK2/D,UAAYxpE,EACjB6J,EAAK7J,KAAO5I,KAAK88E,qBACV98E,KAAKy6E,WAAWhoE,EAAM,qBAG/B,sBACE,MAAMunE,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,IAAIxnE,EAAOzS,KAAKg9E,yBAEhB,GAAkB,sBAAdvqE,EAAKtV,KACP,OAAOsV,EAGT,KAAOzS,KAAK+8E,IAAIhwB,EAAMsB,MAAM,CAC1B,MAAM4uB,EAAUj9E,KAAKg4E,YAAYgC,EAAUC,GAC3CgD,EAAQp3E,OAAS4M,EACjBwqE,EAAQ5K,SAAWryE,KAAK88E,qBACxBrqE,EAAOzS,KAAKy6E,WAAWwC,EAAS,uBAGlC,OAAOxqE,EAGT,yBACE,IAAIA,EAEJ,OAAQzS,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMY,OAST,OARAl7C,EAAOzS,KAAKw6E,YACZx6E,KAAK2C,OACL8P,EAAOzS,KAAKk9E,4BAA4BzqE,GAEX,uBAAzBA,EAAKwlE,WAAW96E,MAClB6C,KAAKmzE,MAAM1gE,EAAKyW,MAAO0oD,EAAUC,kBAG5Bp/D,EAET,KAAKs6C,EAAM4lB,YACX,KAAK5lB,EAAMK,OACT,OAAOptD,KAAK+5E,gBAEd,QACE,MAAM/5E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO0oD,EAAUI,sBAInD,0BACE,MAAMv/D,EAAOzS,KAAKg4E,YAAYh4E,KAAKoa,MAAM+iE,WAAYn9E,KAAKoa,MAAMgjE,eAChE,OAAOp9E,KAAKm4E,aAAa1lE,EAAM,qBAAsBzS,KAAKoa,MAAM8O,MAAOlpB,KAAKoa,MAAM6/D,UAGpF,oBAAoBxnE,GAIlB,OAHAzS,KAAK2C,OACL8P,EAAKwlE,WAAaj4E,KAAKq9E,kBACvBr9E,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,kBAG/B,4BAA4BA,GAQ1B,OAPIzS,KAAKqX,MAAM01C,EAAMe,QACnBr7C,EAAKwlE,WAAaj4E,KAAKu9E,0BAEvB9qE,EAAKwlE,WAAaj4E,KAAKq9E,kBAGzBr9E,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,0BAG/B,oBACE,MAAMA,EAAOzS,KAAKw6E,YAElB,OAAIx6E,KAAK+8E,IAAIhwB,EAAMY,SACjB3tD,KAAKs9E,OAAOvwB,EAAM0B,UAClBh8C,EAAK+qE,SAAWx9E,KAAKy9E,0BACrBz9E,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,wBAG/BA,EAAK7J,KAAO5I,KAAKg9E,yBACjBvqE,EAAKlT,MAAQS,KAAK+8E,IAAIhwB,EAAMgC,IAAM/uD,KAAK09E,yBAA2B,KAC3D19E,KAAKy6E,WAAWhoE,EAAM,iBAG/B,yBAAyBunE,EAAUC,GACjC,MAAMxnE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAExC,OAAIj6E,KAAKqX,MAAM01C,EAAM6lB,YACnB5yE,KAAKs9E,OAAOvwB,EAAM6lB,WACX5yE,KAAKy6E,WAAWhoE,EAAM,wBAG/BA,EAAK7J,KAAO5I,KAAK29E,sBACV39E,KAAK49E,gCAAgCnrE,IAG9C,gCAAgCA,GAC9B,MAAMorE,EAAa,GAEnB,MAAQ79E,KAAKqX,MAAM01C,EAAMiD,SAAWhwD,KAAKqX,MAAM01C,EAAM6lB,YACnDiL,EAAW7hF,KAAKgE,KAAK89E,qBAMvB,OAHArrE,EAAKorE,WAAaA,EAClBprE,EAAKsrE,YAAc/9E,KAAK+8E,IAAIhwB,EAAMiD,OAClChwD,KAAKs9E,OAAOvwB,EAAM6lB,WACX5yE,KAAKy6E,WAAWhoE,EAAM,qBAG/B,yBAAyBunE,EAAUC,GACjC,MAAMxnE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAExC,OAAIj6E,KAAKqX,MAAM01C,EAAM6lB,YACnB5yE,KAAKs9E,OAAOvwB,EAAM6lB,WACX5yE,KAAKy6E,WAAWhoE,EAAM,wBAG/BA,EAAK7J,KAAO5I,KAAK29E,sBACjB39E,KAAKs9E,OAAOvwB,EAAM6lB,WACX5yE,KAAKy6E,WAAWhoE,EAAM,sBAG/B,kBAAkBunE,EAAUC,GAC1B,MAAMxnE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAClCzqE,EAAW,GACXwuE,EAAiBh+E,KAAKi+E,yBAAyBjE,EAAUC,GAC/D,IAAIiE,EAAiB,KAErB,IAAKF,EAAeD,YAAa,CAC/BI,EAAU,OACR,OAAQn+E,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAM4lB,YAKT,GAJAqH,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtBj6E,KAAK2C,OAED3C,KAAK+8E,IAAIhwB,EAAMiD,OAAQ,CACzBkuB,EAAiBl+E,KAAKo+E,yBAAyBpE,EAAUC,GACzD,MAAMkE,EAGR3uE,EAASxT,KAAKgE,KAAKq+E,kBAAkBrE,EAAUC,IAC/C,MAEF,KAAKltB,EAAM2lB,QACTljE,EAASxT,KAAKgE,KAAK+5E,iBACnB,MAEF,KAAKhtB,EAAMY,OACT,CACE,MAAMl7C,EAAOzS,KAAKw6E,YAClBx6E,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAM0B,UACnBj/C,EAASxT,KAAKgE,KAAKs+E,oBAAoB7rE,IAEvCjD,EAASxT,KAAKgE,KAAKk9E,4BAA4BzqE,IAGjD,MAGJ,QACE,MAAMzS,KAAK68E,aAIbh3D,EAAWm4D,KAAoBn4D,EAAWq4D,GAC5Cl+E,KAAKmzE,MAAM+K,EAAeh1D,MAAO0oD,EAAUE,4BACjCjsD,EAAWm4D,IAAmBn4D,EAAWq4D,GACnDl+E,KAAKmzE,MAAM+K,EAAeh1D,MAAO0oD,EAAUG,yBAA0BI,EAAoB6L,EAAep1E,OAC9Fid,EAAWm4D,IAAoBn4D,EAAWq4D,IAChD/L,EAAoB+L,EAAet1E,QAAUupE,EAAoB6L,EAAep1E,OAClF5I,KAAKmzE,MAAM+K,EAAeh1D,MAAO0oD,EAAUG,yBAA0BI,EAAoB6L,EAAep1E,OAe9G,GAVIid,EAAWm4D,IACbvrE,EAAK8rE,gBAAkBP,EACvBvrE,EAAK+rE,gBAAkBN,IAEvBzrE,EAAKurE,eAAiBA,EACtBvrE,EAAKyrE,eAAiBA,GAGxBzrE,EAAKjD,SAAWA,EAEZxP,KAAKy+E,aAAa,KACpB,MAAMz+E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO0oD,EAAUM,8BAG/C,OAAOrsD,EAAWm4D,GAAkBh+E,KAAKy6E,WAAWhoE,EAAM,eAAiBzS,KAAKy6E,WAAWhoE,EAAM,cAGnG,kBACE,MAAMunE,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAE5B,OADAj6E,KAAK2C,OACE3C,KAAKq+E,kBAAkBrE,EAAUC,GAG1C,cAAcpB,GACZ,OAAI74E,KAAKqX,MAAM01C,EAAM2lB,SACZ1yE,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,WAClCS,KAAKqX,MAAM01C,EAAM4lB,aACnB3yE,KAAK0+E,kBACH1+E,KAAKy+E,aAAa,MAAkD,KAA1Cz+E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,MACpE7uC,KAAKm8E,YAAYpvB,EAAM4lB,aAChB3yE,KAAK0+E,mBAELvK,MAAM4F,cAAclB,GAI/B,iBAAiBxuC,GACf,GAAIrqC,KAAKoa,MAAMukE,eAAgB,OAAOxK,MAAMiI,iBAAiB/xC,GAC7D,MAAMhoB,EAAUriB,KAAKk9D,aAErB,GAAI76C,IAAYi6C,EAAQkW,OACtB,OAAOxyE,KAAK4+E,eAGd,GAAIv8D,IAAYi6C,EAAQgW,QAAUjwD,IAAYi6C,EAAQiW,OAAQ,CAC5D,GAAIpU,EAAkB9zB,GACpB,OAAOrqC,KAAK6+E,cAGd,GAAa,KAATx0C,EAEF,QADErqC,KAAKoa,MAAMy0B,IACN7uC,KAAKm8E,YAAYpvB,EAAM6lB,WAGhC,IAAc,KAATvoC,GAAwB,KAATA,IAAgBhoB,IAAYi6C,EAAQgW,OACtD,OAAOtyE,KAAK8+E,cAAcz0C,GAI9B,OAAa,KAATA,GAAerqC,KAAKoa,MAAM4iD,aAA6D,KAA9Ch9D,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,MAChF7uC,KAAKoa,MAAMy0B,IACN7uC,KAAKm8E,YAAYpvB,EAAM4lB,cAGzBwB,MAAMiI,iBAAiB/xC,GAGhC,cAAc8yB,GACZ,GAAIn9D,KAAKqX,MAAM01C,EAAMY,QAAS,CAC5B,MAAMuP,EAAal9D,KAAKk9D,aAEpBA,IAAeZ,EAAQgW,OACzBtyE,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQE,iBACvBU,IAAeZ,EAAQkW,OAChCxyE,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQI,eAEhCyX,MAAMznB,cAAcyQ,GAGtBn9D,KAAKoa,MAAM4iD,aAAc,MACpB,KAAIh9D,KAAKqX,MAAM01C,EAAMiD,QAAUmN,IAAapQ,EAAM4lB,YAKvD,OAAOwB,MAAMznB,cAAcyQ,GAJ3Bn9D,KAAKoa,MAAMiI,QAAQjmB,QAAU,EAC7B4D,KAAKoa,MAAMiI,QAAQrmB,KAAKsgE,EAAQiW,QAChCvyE,KAAKoa,MAAM4iD,aAAc,KA4wF7B+hB,KA7oMUvH,GAGK,cAAcA,EAC3B,YAAYl8E,EAAS6iD,GACnBg2B,MAAM74E,EAAS6iD,GACfn+C,KAAKg/E,gBAAa,EAClBh/E,KAAKg/E,gBAAanjF,EAGpB,mBACE,OAAOmE,KAAKk3E,gBAAgB,OAAQ,QAA8B,SAApBl3E,KAAKg/E,WAGrD,mBACE,QAASh/E,KAAKk3E,gBAAgB,OAAQ,SAGxC,YAAY/5E,EAAMmH,GAOhB,OANInH,IAAS4vD,EAAMK,QAAUjwD,IAAS4vD,EAAMmB,MAAQ/wD,IAAS4vD,EAAM+B,2BACzCjzD,IAApBmE,KAAKg/E,aACPh/E,KAAKg/E,WAAa,MAIf7K,MAAMgI,YAAYh/E,EAAMmH,GAGjC,WAAW26E,GACT,QAAwBpjF,IAApBmE,KAAKg/E,WAA0B,CACjC,MAAMrmC,EAAUupB,EAAkBjvB,KAAKgsC,EAAQ1/E,OAE/C,GAAKo5C,EAAgB,GAAmB,SAAfA,EAAQ,GAC/B34C,KAAKg/E,WAAa,WACb,IAAmB,WAAfrmC,EAAQ,GAGjB,MAAM,IAAIpe,MAAM,0BAFhBv6B,KAAKg/E,WAAa,eAMtB,OAAO7K,MAAM+K,WAAWD,GAG1B,yBAAyBE,GACvB,MAAMC,EAAYp/E,KAAKoa,MAAMilE,OAC7Br/E,KAAKoa,MAAMilE,QAAS,EACpBr/E,KAAKs9E,OAAO6B,GAAOpyB,EAAMoB,OACzB,MAAMhxD,EAAO6C,KAAKs/E,gBAElB,OADAt/E,KAAKoa,MAAMilE,OAASD,EACbjiF,EAGT,qBACE,MAAMsV,EAAOzS,KAAKw6E,YACZ+E,EAAYv/E,KAAKoa,MAAM6/D,SACvBuF,EAAYx/E,KAAKoa,MAAM8O,MAC7BlpB,KAAKs9E,OAAOvwB,EAAM+C,QAClB,MAAM2vB,EAAYz/E,KAAKoa,MAAM6/D,SAO7B,OANAj6E,KAAK0/E,iBAAiB,UAElBH,EAAU/yC,OAASizC,EAAUjzC,MAAQ+yC,EAAU9yC,SAAWgzC,EAAUhzC,OAAS,GAC/EzsC,KAAKmzE,MAAMqM,EAAWtgB,EAAWiC,oCAG/BnhE,KAAK+8E,IAAIhwB,EAAMiB,SACjBv7C,EAAKlT,MAAQS,KAAKq9E,kBAClBr9E,KAAKs9E,OAAOvwB,EAAMkB,QACXjuD,KAAKy6E,WAAWhoE,EAAM,sBAEtBzS,KAAKy6E,WAAWhoE,EAAM,qBAIjC,uCACE,MAAM2sE,EAAYp/E,KAAKoa,MAAMilE,OAC7Br/E,KAAKoa,MAAMilE,QAAS,EACpBr/E,KAAKs9E,OAAOvwB,EAAMoB,OAClB,IAAIhxD,EAAO,KACPwiF,EAAY,KAchB,OAZI3/E,KAAKqX,MAAM01C,EAAM+C,SACnB9vD,KAAKoa,MAAMilE,OAASD,EACpBO,EAAY3/E,KAAK4/E,uBAEjBziF,EAAO6C,KAAKs/E,gBACZt/E,KAAKoa,MAAMilE,OAASD,EAEhBp/E,KAAKqX,MAAM01C,EAAM+C,UACnB6vB,EAAY3/E,KAAK4/E,uBAId,CAACziF,EAAMwiF,GAGhB,sBAAsBltE,GAGpB,OAFAzS,KAAK2C,OACL3C,KAAK6/E,sBAAsBptE,GAAM,GAC1BzS,KAAKy6E,WAAWhoE,EAAM,gBAG/B,yBAAyBA,GACvBzS,KAAK2C,OACL,MAAMtG,EAAKoW,EAAKpW,GAAK2D,KAAK8/E,kBACpBC,EAAW//E,KAAKw6E,YAChBwF,EAAgBhgF,KAAKw6E,YAEvBx6E,KAAKy+E,aAAa,KACpBsB,EAASpG,eAAiB35E,KAAKigF,oCAE/BF,EAASpG,eAAiB,KAG5B35E,KAAKs9E,OAAOvwB,EAAMiB,QAClB,MAAM3F,EAAMroD,KAAKkgF,8BASjB,OARAH,EAASryC,OAAS2a,EAAI3a,OACtBqyC,EAASI,KAAO93B,EAAI83B,KACpBngF,KAAKs9E,OAAOvwB,EAAMkB,SACjB8xB,EAASvpC,WAAY/jC,EAAKktE,WAAa3/E,KAAKogF,uCAC7CJ,EAAcK,eAAiBrgF,KAAKy6E,WAAWsF,EAAU,0BACzD1jF,EAAGgkF,eAAiBrgF,KAAKy6E,WAAWuF,EAAe,kBACnDhgF,KAAKsgF,iBAAiBjkF,GACtB2D,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,mBAG/B,iBAAiBA,EAAM+tE,GACrB,GAAIxgF,KAAKqX,MAAM01C,EAAM0E,QACnB,OAAOzxD,KAAKygF,sBAAsBhuE,GAC7B,GAAIzS,KAAKqX,MAAM01C,EAAM6D,WAC1B,OAAO5wD,KAAK0gF,yBAAyBjuE,GAChC,GAAIzS,KAAKqX,MAAM01C,EAAMmE,MAC1B,OAAOlxD,KAAK2gF,yBAAyBluE,GAChC,GAAIzS,KAAK4gF,cAAc,UAC5B,OAAI5gF,KAAKqX,MAAM01C,EAAMsB,KACZruD,KAAK6gF,8BAA8BpuE,IAEtC+tE,GACFxgF,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAc5hB,EAAWwB,qBAG1C1gE,KAAK+gF,uBAAuBtuE,IAEhC,GAAIzS,KAAKghF,aAAa,QAC3B,OAAOhhF,KAAKihF,0BAA0BxuE,GACjC,GAAIzS,KAAKghF,aAAa,UAC3B,OAAOhhF,KAAKkhF,2BAA2BzuE,GAClC,GAAIzS,KAAKghF,aAAa,aAC3B,OAAOhhF,KAAKmhF,0BAA0B1uE,GACjC,GAAIzS,KAAKqX,MAAM01C,EAAM4E,SAC1B,OAAO3xD,KAAKohF,kCAAkC3uE,EAAM+tE,GAEpD,MAAMxgF,KAAK68E,aAIf,yBAAyBpqE,GAKvB,OAJAzS,KAAK2C,OACL8P,EAAKpW,GAAK2D,KAAKqhF,oCAAmC,GAClDrhF,KAAK4zE,MAAMa,YAAYhiE,EAAKpW,GAAGuM,KArqCpB04E,EAqqCoC7uE,EAAKpW,GAAG6sB,OACvDlpB,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,mBAG/B,uBAAuBA,GACrBzS,KAAK4zE,MAAM7qD,MAjsCG,GAmsCV/oB,KAAKqX,MAAM01C,EAAMK,QACnB36C,EAAKpW,GAAK2D,KAAK+5E,gBAEftnE,EAAKpW,GAAK2D,KAAK8/E,kBAGjB,MAAMyB,EAAW9uE,EAAKgxB,KAAOzjC,KAAKw6E,YAC5B/2C,EAAO89C,EAAS99C,KAAO,GAG7B,IAFAzjC,KAAKs9E,OAAOvwB,EAAMY,SAEV3tD,KAAKqX,MAAM01C,EAAMe,SAAS,CAChC,IAAIyzB,EAAWvhF,KAAKw6E,YAEhBx6E,KAAKqX,MAAM01C,EAAM6E,UACnB5xD,KAAK2C,OAEA3C,KAAKghF,aAAa,SAAYhhF,KAAKqX,MAAM01C,EAAMmF,UAClDlyD,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAc5hB,EAAWsB,qCAGjDxgE,KAAKwhF,YAAYD,KAEjBvhF,KAAK0/E,iBAAiB,UAAWxgB,EAAWuC,qCAC5C8f,EAAWvhF,KAAKyhF,iBAAiBF,GAAU,IAG7C99C,EAAKznC,KAAKulF,GAGZvhF,KAAK4zE,MAAM8N,OACX1hF,KAAKs9E,OAAOvwB,EAAMe,QAClB9tD,KAAKy6E,WAAW8G,EAAU,kBAC1B,IAAItlB,EAAO,KACP0lB,GAAkB,EAsBtB,OArBAl+C,EAAKtlC,QAAQyjF,KAzOnB,SAAwBA,GACtB,MAA4B,gCAArBA,EAAYzkF,MAA+D,6BAArBykF,EAAYzkF,QAAyCykF,EAAYC,aAAgD,cAAjCD,EAAYC,YAAY1kF,MAAyD,yBAAjCykF,EAAYC,YAAY1kF,MAyO3M2kF,CAAeF,GAMa,yBAArBA,EAAYzkF,OACjBwkF,GACF3hF,KAAKmzE,MAAMyO,EAAY14D,MAAOg2C,EAAWM,+BAG9B,OAATvD,GACFj8D,KAAKmzE,MAAMyO,EAAY14D,MAAOg2C,EAAWE,4BAG3CnD,EAAO,WACP0lB,GAAkB,IAfL,aAAT1lB,GACFj8D,KAAKmzE,MAAMyO,EAAY14D,MAAOg2C,EAAWE,4BAG3CnD,EAAO,QAcXxpD,EAAKwpD,KAAOA,GAAQ,WACbj8D,KAAKy6E,WAAWhoE,EAAM,iBAG/B,kCAAkCA,EAAM+tE,GAGtC,GAFAxgF,KAAKs9E,OAAOvwB,EAAM4E,SAEd3xD,KAAK+8E,IAAIhwB,EAAMwD,UASjB,OARIvwD,KAAKqX,MAAM01C,EAAM6D,YAAc5wD,KAAKqX,MAAM01C,EAAM0E,QAClDh/C,EAAKovE,YAAc7hF,KAAKyhF,iBAAiBzhF,KAAKw6E,cAE9C/nE,EAAKovE,YAAc7hF,KAAKs/E,gBACxBt/E,KAAKugF,aAGP9tE,EAAK6D,SAAU,EACRtW,KAAKy6E,WAAWhoE,EAAM,4BAE7B,GAAIzS,KAAKqX,MAAM01C,EAAMoE,SAAWnxD,KAAK+hF,UAAY/hF,KAAKghF,aAAa,SAAWhhF,KAAKghF,aAAa,gBAAkBR,EAAc,CAC9H,MAAMv0B,EAAQjsD,KAAKoa,MAAM7a,MACnByiF,EAAalgB,EAAkB7V,GACrC,MAAMjsD,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAOg2C,EAAWsC,6BAA8BvV,EAAO+1B,GAGrF,GAAIhiF,KAAKqX,MAAM01C,EAAMmE,OAASlxD,KAAKqX,MAAM01C,EAAM6D,YAAc5wD,KAAKqX,MAAM01C,EAAM0E,SAAWzxD,KAAKghF,aAAa,UAGvG,OAFAvuE,EAAKovE,YAAc7hF,KAAKyhF,iBAAiBzhF,KAAKw6E,aAC9C/nE,EAAK6D,SAAU,EACRtW,KAAKy6E,WAAWhoE,EAAM,4BACxB,GAAIzS,KAAKqX,MAAM01C,EAAMgD,OAAS/vD,KAAKqX,MAAM01C,EAAMY,SAAW3tD,KAAKghF,aAAa,cAAgBhhF,KAAKghF,aAAa,SAAWhhF,KAAKghF,aAAa,UAUhJ,MAPkB,4BAFlBvuE,EAAOzS,KAAKu7E,YAAY9oE,IAEftV,OACPsV,EAAKtV,KAAO,oBACZsV,EAAK6D,SAAU,SACR7D,EAAKwvE,YAGdxvE,EAAKtV,KAAO,UAAYsV,EAAKtV,KACtBsV,EAIb,MAAMzS,KAAK68E,aAGb,8BAA8BpqE,GAK5B,OAJAzS,KAAK2C,OACL3C,KAAK0/E,iBAAiB,WACtBjtE,EAAK4tE,eAAiBrgF,KAAKkiF,0BAC3BliF,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,wBAG/B,0BAA0BA,GAIxB,OAHAzS,KAAK2C,OACL3C,KAAKmiF,mBAAmB1vE,GACxBA,EAAKtV,KAAO,mBACLsV,EAGT,2BAA2BA,GAIzB,OAHAzS,KAAK2C,OACL3C,KAAKoiF,oBAAoB3vE,GAAM,GAC/BA,EAAKtV,KAAO,oBACLsV,EAGT,0BAA0BA,GAGxB,OAFAzS,KAAK2C,OACL3C,KAAK6/E,sBAAsBptE,GACpBzS,KAAKy6E,WAAWhoE,EAAM,oBAG/B,sBAAsBA,EAAM4vE,GAAU,GAcpC,GAbA5vE,EAAKpW,GAAK2D,KAAKsiF,+BAA+BD,GAAS,GACvDriF,KAAK4zE,MAAMa,YAAYhiE,EAAKpW,GAAGuM,KAAMy5E,EA7yCrBf,GAFDA,EA+yC8D7uE,EAAKpW,GAAG6sB,OAEjFlpB,KAAKy+E,aAAa,KACpBhsE,EAAKknE,eAAiB35E,KAAKigF,oCAE3BxtE,EAAKknE,eAAiB,KAGxBlnE,EAAKnF,QAAU,GACfmF,EAAK8vE,WAAa,GAClB9vE,EAAKpF,OAAS,GAEVrN,KAAK+8E,IAAIhwB,EAAM2E,UACjB,GACEj/C,EAAKnF,QAAQtR,KAAKgE,KAAKwiF,oCACfH,GAAWriF,KAAK+8E,IAAIhwB,EAAMpS,QAGtC,GAAI36C,KAAKghF,aAAa,UAAW,CAC/BhhF,KAAK2C,OAEL,GACE8P,EAAKpF,OAAOrR,KAAKgE,KAAKwiF,mCACfxiF,KAAK+8E,IAAIhwB,EAAMpS,QAG1B,GAAI36C,KAAKghF,aAAa,cAAe,CACnChhF,KAAK2C,OAEL,GACE8P,EAAK8vE,WAAWvmF,KAAKgE,KAAKwiF,mCACnBxiF,KAAK+8E,IAAIhwB,EAAMpS,QAG1BloC,EAAKgxB,KAAOzjC,KAAKyiF,oBAAoB,CACnCC,YAAaL,EACbM,YAAY,EACZC,aAAa,EACbC,WAAYR,EACZS,cAAc,IAIlB,4BACE,MAAMrwE,EAAOzS,KAAKw6E,YASlB,OARA/nE,EAAKpW,GAAK2D,KAAK+iF,mCAEX/iF,KAAKy+E,aAAa,KACpBhsE,EAAKknE,eAAiB35E,KAAKgjF,sCAE3BvwE,EAAKknE,eAAiB,KAGjB35E,KAAKy6E,WAAWhoE,EAAM,oBAG/B,mBAAmBA,GAEjB,OADAzS,KAAK6/E,sBAAsBptE,GACpBzS,KAAKy6E,WAAWhoE,EAAM,wBAG/B,mBAAmBksD,GACJ,MAATA,GACF3+D,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAOg2C,EAAWgC,8BAI5C,kBAAkBvC,EAAMsb,EAAU4H,GAC3B5iB,EAActhE,IAAIghE,IACvB3+D,KAAKmzE,MAAM8G,EAAU4H,EAAc3iB,EAAWG,mBAAqBH,EAAW+B,uBAAwBtC,GAGxG,8BAA8BskB,EAASpB,GAErC,OADA7hF,KAAKkjF,kBAAkBljF,KAAKoa,MAAM7a,MAAOS,KAAKoa,MAAM8O,MAAO24D,GACpD7hF,KAAK8/E,gBAAgBmD,GAG9B,mBAAmBxwE,GAYjB,OAXAA,EAAKpW,GAAK2D,KAAKsiF,+BAA8B,GAAO,GACpDtiF,KAAK4zE,MAAMa,YAAYhiE,EAAKpW,GAAGuM,KA93ChB04E,EA83CoC7uE,EAAKpW,GAAG6sB,OAEvDlpB,KAAKy+E,aAAa,KACpBhsE,EAAKknE,eAAiB35E,KAAKigF,oCAE3BxtE,EAAKknE,eAAiB,KAGxBlnE,EAAKs1B,MAAQ/nC,KAAKmjF,yBAAyBp2B,EAAMgC,IACjD/uD,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,aAG/B,oBAAoBA,EAAM2wE,GAwBxB,OAvBApjF,KAAK0/E,iBAAiB,QACtBjtE,EAAKpW,GAAK2D,KAAKsiF,+BAA8B,GAAM,GACnDtiF,KAAK4zE,MAAMa,YAAYhiE,EAAKpW,GAAGuM,KA94ChB04E,EA84CoC7uE,EAAKpW,GAAG6sB,OAEvDlpB,KAAKy+E,aAAa,KACpBhsE,EAAKknE,eAAiB35E,KAAKigF,oCAE3BxtE,EAAKknE,eAAiB,KAGxBlnE,EAAK4wE,UAAY,KAEbrjF,KAAKqX,MAAM01C,EAAMoB,SACnB17C,EAAK4wE,UAAYrjF,KAAKmjF,yBAAyBp2B,EAAMoB,QAGvD17C,EAAK6wE,SAAW,KAEXF,IACH3wE,EAAK6wE,SAAWtjF,KAAKmjF,yBAAyBp2B,EAAMgC,KAGtD/uD,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,cAG/B,uBAAuB8wE,GAAiB,GACtC,MAAMC,EAAYxjF,KAAKoa,MAAM8O,MACvBzW,EAAOzS,KAAKw6E,YACZiJ,EAAWzjF,KAAK0jF,oBAChBC,EAAQ3jF,KAAKqhF,qCAcnB,OAbA5uE,EAAK7J,KAAO+6E,EAAM/6E,KAClB6J,EAAKgxE,SAAWA,EAChBhxE,EAAKmxE,MAAQD,EAAMtD,eAEfrgF,KAAKqX,MAAM01C,EAAMgC,KACnB/uD,KAAK+8E,IAAIhwB,EAAMgC,IACft8C,EAAK6D,QAAUtW,KAAKs/E,iBAEhBiE,GACFvjF,KAAKmzE,MAAMqQ,EAAWtkB,EAAWuB,yBAI9BzgE,KAAKy6E,WAAWhoE,EAAM,iBAG/B,oCACE,MAAM2sE,EAAYp/E,KAAKoa,MAAMilE,OACvB5sE,EAAOzS,KAAKw6E,YAClB/nE,EAAKi7B,OAAS,GACd1tC,KAAKoa,MAAMilE,QAAS,EAEhBr/E,KAAKy+E,aAAa,MAAQz+E,KAAKqX,MAAM01C,EAAM4lB,aAC7C3yE,KAAK2C,OAEL3C,KAAK68E,aAGP,IAAIgH,GAAkB,EAEtB,EAAG,CACD,MAAMC,EAAgB9jF,KAAK+jF,uBAAuBF,GAClDpxE,EAAKi7B,OAAO1xC,KAAK8nF,GAEbA,EAAcxtE,UAChButE,GAAkB,GAGf7jF,KAAKy+E,aAAa,MACrBz+E,KAAKs9E,OAAOvwB,EAAMpS,cAEZ36C,KAAKy+E,aAAa,MAI5B,OAFAz+E,KAAKgkF,iBAAiB,KACtBhkF,KAAKoa,MAAMilE,OAASD,EACbp/E,KAAKy6E,WAAWhoE,EAAM,4BAG/B,sCACE,MAAMA,EAAOzS,KAAKw6E,YACZ4E,EAAYp/E,KAAKoa,MAAMilE,OAC7B5sE,EAAKi7B,OAAS,GACd1tC,KAAKoa,MAAMilE,QAAS,EACpBr/E,KAAKgkF,iBAAiB,KACtB,MAAMC,EAAwBjkF,KAAKoa,MAAM8pE,mBAGzC,IAFAlkF,KAAKoa,MAAM8pE,oBAAqB,GAExBlkF,KAAKy+E,aAAa,MACxBhsE,EAAKi7B,OAAO1xC,KAAKgE,KAAKs/E,iBAEjBt/E,KAAKy+E,aAAa,MACrBz+E,KAAKs9E,OAAOvwB,EAAMpS,OAOtB,OAHA36C,KAAKoa,MAAM8pE,mBAAqBD,EAChCjkF,KAAKgkF,iBAAiB,KACtBhkF,KAAKoa,MAAMilE,OAASD,EACbp/E,KAAKy6E,WAAWhoE,EAAM,8BAG/B,+CACE,MAAMA,EAAOzS,KAAKw6E,YACZ4E,EAAYp/E,KAAKoa,MAAMilE,OAK7B,IAJA5sE,EAAKi7B,OAAS,GACd1tC,KAAKoa,MAAMilE,QAAS,EACpBr/E,KAAKgkF,iBAAiB,MAEdhkF,KAAKy+E,aAAa,MACxBhsE,EAAKi7B,OAAO1xC,KAAKgE,KAAKmkF,wCAEjBnkF,KAAKy+E,aAAa,MACrBz+E,KAAKs9E,OAAOvwB,EAAMpS,OAMtB,OAFA36C,KAAKgkF,iBAAiB,KACtBhkF,KAAKoa,MAAMilE,OAASD,EACbp/E,KAAKy6E,WAAWhoE,EAAM,8BAG/B,yBACE,MAAMA,EAAOzS,KAAKw6E,YAIlB,GAHAx6E,KAAK0/E,iBAAiB,aACtBjtE,EAAKnF,QAAU,GAEXtN,KAAK+8E,IAAIhwB,EAAM2E,UACjB,GACEj/C,EAAKnF,QAAQtR,KAAKgE,KAAKwiF,mCAChBxiF,KAAK+8E,IAAIhwB,EAAMpS,QAU1B,OAPAloC,EAAKgxB,KAAOzjC,KAAKyiF,oBAAoB,CACnCC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAET9iF,KAAKy6E,WAAWhoE,EAAM,2BAG/B,6BACE,OAAOzS,KAAKqX,MAAM01C,EAAMC,MAAQhtD,KAAKqX,MAAM01C,EAAMK,QAAUptD,KAAK+5E,gBAAkB/5E,KAAK8/E,iBAAgB,GAGzG,2BAA2BrtE,EAAM26B,EAAUq2C,GAczC,OAbAhxE,EAAK2xE,OAASh3C,EAEVptC,KAAKqkF,YAAYlnF,OAAS4vD,EAAMoB,OAClC17C,EAAKpW,GAAK2D,KAAKskF,6BACf7xE,EAAKrV,IAAM4C,KAAKmjF,6BAEhB1wE,EAAKpW,GAAK,KACVoW,EAAKrV,IAAM4C,KAAKs/E,iBAGlBt/E,KAAKs9E,OAAOvwB,EAAMU,UAClBh7C,EAAKlT,MAAQS,KAAKmjF,2BAClB1wE,EAAKgxE,SAAWA,EACTzjF,KAAKy6E,WAAWhoE,EAAM,qBAG/B,gCAAgCA,EAAM26B,GAoBpC,OAnBA36B,EAAK2xE,OAASh3C,EACd36B,EAAKpW,GAAK2D,KAAKskF,6BACftkF,KAAKs9E,OAAOvwB,EAAMU,UAClBztD,KAAKs9E,OAAOvwB,EAAMU,UAEdztD,KAAKy+E,aAAa,MAAQz+E,KAAKqX,MAAM01C,EAAMiB,SAC7Cv7C,EAAK/S,QAAS,EACd+S,EAAKyoE,UAAW,EAChBzoE,EAAKlT,MAAQS,KAAKukF,6BAA6BvkF,KAAKg4E,YAAYvlE,EAAKyW,MAAOzW,EAAK63B,IAAIphB,UAErFzW,EAAK/S,QAAS,EAEVM,KAAK+8E,IAAIhwB,EAAMuB,YACjB77C,EAAKyoE,UAAW,GAGlBzoE,EAAKlT,MAAQS,KAAKmjF,4BAGbnjF,KAAKy6E,WAAWhoE,EAAM,0BAG/B,6BAA6BA,GAW3B,IAVAA,EAAKi7B,OAAS,GACdj7B,EAAK0tE,KAAO,KACZ1tE,EAAKknE,eAAiB,KAElB35E,KAAKy+E,aAAa,OACpBhsE,EAAKknE,eAAiB35E,KAAKigF,qCAG7BjgF,KAAKs9E,OAAOvwB,EAAMiB,SAEVhuD,KAAKqX,MAAM01C,EAAMkB,UAAYjuD,KAAKqX,MAAM01C,EAAM0B,WACpDh8C,EAAKi7B,OAAO1xC,KAAKgE,KAAKwkF,8BAEjBxkF,KAAKqX,MAAM01C,EAAMkB,SACpBjuD,KAAKs9E,OAAOvwB,EAAMpS,OAUtB,OANI36C,KAAK+8E,IAAIhwB,EAAM0B,YACjBh8C,EAAK0tE,KAAOngF,KAAKwkF,8BAGnBxkF,KAAKs9E,OAAOvwB,EAAMkB,QAClBx7C,EAAK+jC,WAAax2C,KAAKmjF,2BAChBnjF,KAAKy6E,WAAWhoE,EAAM,0BAG/B,gCAAgCA,EAAM26B,GACpC,MAAMq3C,EAAYzkF,KAAKw6E,YAGvB,OAFA/nE,EAAK2xE,OAASh3C,EACd36B,EAAKlT,MAAQS,KAAKukF,6BAA6BE,GACxCzkF,KAAKy6E,WAAWhoE,EAAM,0BAG/B,qBAAoB,YAClBiwE,EAAW,WACXC,EAAU,YACVC,EAAW,WACXC,EAAU,aACVC,IAEA,MAAM1D,EAAYp/E,KAAKoa,MAAMilE,OAC7Br/E,KAAKoa,MAAMilE,QAAS,EACpB,MAAMmE,EAAYxjF,KAAKw6E,YAKvB,IAAIkK,EACA18C,EALJw7C,EAAUmB,eAAiB,GAC3BnB,EAAUv2C,WAAa,GACvBu2C,EAAUoB,SAAW,GACrBpB,EAAUqB,cAAgB,GAG1B,IAAIC,GAAU,EAcd,IAZInC,GAAc3iF,KAAKqX,MAAM01C,EAAMa,YACjC5tD,KAAKs9E,OAAOvwB,EAAMa,WAClB82B,EAAW33B,EAAMgB,UACjB/lB,GAAQ,IAERhoC,KAAKs9E,OAAOvwB,EAAMY,QAClB+2B,EAAW33B,EAAMe,OACjB9lB,GAAQ,GAGVw7C,EAAUx7C,MAAQA,GAEVhoC,KAAKqX,MAAMqtE,IAAW,CAC5B,IAAIt3C,GAAW,EACX23C,EAAa,KACbC,EAAe,KACnB,MAAMvyE,EAAOzS,KAAKw6E,YAElB,GAAIqI,GAAc7iF,KAAKghF,aAAa,SAAU,CAC5C,MAAMqD,EAAYrkF,KAAKqkF,YAEnBA,EAAUlnF,OAAS4vD,EAAMoB,OAASk2B,EAAUlnF,OAAS4vD,EAAMuB,WAC7DtuD,KAAK2C,OACLoiF,EAAa/kF,KAAKoa,MAAM8O,MACxBw5D,GAAc,GAIlB,GAAIA,GAAe1iF,KAAKghF,aAAa,UAAW,CAC9C,MAAMqD,EAAYrkF,KAAKqkF,YAEnBA,EAAUlnF,OAAS4vD,EAAMoB,OAASk2B,EAAUlnF,OAAS4vD,EAAMuB,WAC7DtuD,KAAK2C,OACLyqC,GAAW,GAIf,MAAMq2C,EAAWzjF,KAAK0jF,oBAEtB,GAAI1jF,KAAK+8E,IAAIhwB,EAAMO,UACC,MAAdy3B,GACF/kF,KAAK68E,WAAWkI,GAGd/kF,KAAK+8E,IAAIhwB,EAAMO,WACbm2B,GACFzjF,KAAK68E,WAAW4G,EAASv6D,OAG3Bs6D,EAAUqB,cAAc7oF,KAAKgE,KAAKilF,gCAAgCxyE,EAAM26B,KAExEo2C,EAAUoB,SAAS5oF,KAAKgE,KAAKklF,2BAA2BzyE,EAAM26B,EAAUq2C,SAErE,GAAIzjF,KAAKqX,MAAM01C,EAAMiB,SAAWhuD,KAAKy+E,aAAa,KACrC,MAAdsG,GACF/kF,KAAK68E,WAAWkI,GAGdtB,GACFzjF,KAAK68E,WAAW4G,EAASv6D,OAG3Bs6D,EAAUmB,eAAe3oF,KAAKgE,KAAKmlF,gCAAgC1yE,EAAM26B,QACpE,CACL,IAAI6uB,EAAO,OAEX,GAAIj8D,KAAKghF,aAAa,QAAUhhF,KAAKghF,aAAa,OAAQ,CACxD,MAAMqD,EAAYrkF,KAAKqkF,YAEnBA,EAAUlnF,OAAS4vD,EAAMnkD,MAAQy7E,EAAUlnF,OAAS4vD,EAAMK,QAAUi3B,EAAUlnF,OAAS4vD,EAAMC,MAC/FiP,EAAOj8D,KAAKoa,MAAM7a,MAClBS,KAAK2C,QAIT,MAAMyiF,EAAgBplF,KAAKqlF,4BAA4B5yE,EAAM26B,EAAU23C,EAAYtB,EAAUxnB,EAAM2mB,EAA6B,MAAhBE,EAAuBA,GAAgB96C,GAEjI,OAAlBo9C,GACFN,GAAU,EACVE,EAAehlF,KAAKoa,MAAM0mE,cAE1B0C,EAAUv2C,WAAWjxC,KAAKopF,GAI9BplF,KAAKslF,2BAEDN,GAAiBhlF,KAAKqX,MAAM01C,EAAMe,SAAY9tD,KAAKqX,MAAM01C,EAAMgB,YACjE/tD,KAAKmzE,MAAM6R,EAAc9lB,EAAW8B,mCAIxChhE,KAAKs9E,OAAOoH,GAER9B,IACFY,EAAUsB,QAAUA,GAGtB,MAAM7nB,EAAMj9D,KAAKy6E,WAAW+I,EAAW,wBAEvC,OADAxjF,KAAKoa,MAAMilE,OAASD,EACbniB,EAGT,4BAA4BxqD,EAAM26B,EAAU23C,EAAYtB,EAAUxnB,EAAM2mB,EAAaE,GACnF,GAAI9iF,KAAK+8E,IAAIhwB,EAAM0B,UAAW,CAG5B,OAFuBzuD,KAAKqX,MAAM01C,EAAMpS,QAAU36C,KAAKqX,MAAM01C,EAAMmB,OAASluD,KAAKqX,MAAM01C,EAAMe,SAAW9tD,KAAKqX,MAAM01C,EAAMgB,YAGlH60B,EAEOE,GACV9iF,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAc5hB,EAAWmB,oBAF/CrgE,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAc5hB,EAAWoB,wBAK7CmjB,GACFzjF,KAAKmzE,MAAMsQ,EAASv6D,MAAOg2C,EAAWqB,iBAGjC,OAGJqiB,GACH5iF,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAc5hB,EAAWkC,sBAG/B,MAAd2jB,GACF/kF,KAAK68E,WAAWkI,GAGdtB,GACFzjF,KAAKmzE,MAAMsQ,EAASv6D,MAAOg2C,EAAW2B,gBAGxCpuD,EAAK+qE,SAAWx9E,KAAKs/E,gBACdt/E,KAAKy6E,WAAWhoE,EAAM,6BACxB,CACLA,EAAKrV,IAAM4C,KAAKskF,6BAChB7xE,EAAK2xE,OAASh3C,EACd36B,EAAK8yE,MAAsB,MAAdR,EACbtyE,EAAKwpD,KAAOA,EACZ,IAAIif,GAAW,EA+Bf,OA7BIl7E,KAAKy+E,aAAa,MAAQz+E,KAAKqX,MAAM01C,EAAMiB,SAC7Cv7C,EAAK/S,QAAS,EAEI,MAAdqlF,GACF/kF,KAAK68E,WAAWkI,GAGdtB,GACFzjF,KAAK68E,WAAW4G,EAASv6D,OAG3BzW,EAAKlT,MAAQS,KAAKukF,6BAA6BvkF,KAAKg4E,YAAYvlE,EAAKyW,MAAOzW,EAAK63B,IAAIphB,QAExE,QAAT+yC,GAA2B,QAATA,GACpBj8D,KAAKwlF,4BAA4B/yE,KAGtB,SAATwpD,GAAiBj8D,KAAK68E,aAC1BpqE,EAAK/S,QAAS,EAEVM,KAAK+8E,IAAIhwB,EAAMuB,YACjB4sB,GAAW,GAGbzoE,EAAKlT,MAAQS,KAAKmjF,2BAClB1wE,EAAKgxE,SAAWA,GAGlBhxE,EAAKyoE,SAAWA,EACTl7E,KAAKy6E,WAAWhoE,EAAM,uBAIjC,4BAA4B4/D,GAC1B,MAAMoT,EAA+B,QAAlBpT,EAASpW,KAAiB,EAAI,EAC3C/yC,EAAQmpD,EAASnpD,MACRmpD,EAAS9yE,MAAMmuC,OAAOtxC,QAAUi2E,EAAS9yE,MAAM4gF,KAAO,EAAI,KAE1DsF,IACS,QAAlBpT,EAASpW,KACXj8D,KAAKmzE,MAAMjqD,EAAO4pC,EAAcQ,gBAEhCtzD,KAAKmzE,MAAMjqD,EAAO4pC,EAAcS,iBAId,QAAlB8e,EAASpW,MAAkBoW,EAAS9yE,MAAM4gF,MAC5CngF,KAAKmzE,MAAMjqD,EAAO4pC,EAAcU,wBAIpC,0BACOxzD,KAAK+8E,IAAIhwB,EAAMmB,OAAUluD,KAAK+8E,IAAIhwB,EAAMpS,QAAW36C,KAAKqX,MAAM01C,EAAMe,SAAY9tD,KAAKqX,MAAM01C,EAAMgB,YACpG/tD,KAAK68E,aAIT,iCAAiC7C,EAAUC,EAAU59E,GACnD29E,EAAWA,GAAYh6E,KAAKoa,MAAM8O,MAClC+wD,EAAWA,GAAYj6E,KAAKoa,MAAM6/D,SAClC,IAAIxnE,EAAOpW,GAAM2D,KAAKsiF,+BAA8B,GAEpD,KAAOtiF,KAAK+8E,IAAIhwB,EAAMsB,MAAM,CAC1B,MAAMq3B,EAAQ1lF,KAAKg4E,YAAYgC,EAAUC,GACzCyL,EAAMC,cAAgBlzE,EACtBizE,EAAMrpF,GAAK2D,KAAKsiF,+BAA8B,GAC9C7vE,EAAOzS,KAAKy6E,WAAWiL,EAAO,2BAGhC,OAAOjzE,EAGT,qBAAqBunE,EAAUC,EAAU59E,GACvC,MAAMoW,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAQxC,OAPAxnE,EAAKknE,eAAiB,KACtBlnE,EAAKpW,GAAK2D,KAAK+iF,iCAAiC/I,EAAUC,EAAU59E,GAEhE2D,KAAKy+E,aAAa,OACpBhsE,EAAKknE,eAAiB35E,KAAKgjF,uCAGtBhjF,KAAKy6E,WAAWhoE,EAAM,yBAG/B,sBACE,MAAMA,EAAOzS,KAAKw6E,YAGlB,OAFAx6E,KAAKs9E,OAAOvwB,EAAMmF,SAClBz/C,EAAK+qE,SAAWx9E,KAAK4lF,uBACd5lF,KAAKy6E,WAAWhoE,EAAM,wBAG/B,qBACE,MAAMA,EAAOzS,KAAKw6E,YAIlB,IAHA/nE,EAAKs6C,MAAQ,GACb/sD,KAAKs9E,OAAOvwB,EAAMO,UAEXttD,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,SAAW4D,KAAKqX,MAAM01C,EAAMU,YACvDh7C,EAAKs6C,MAAM/wD,KAAKgE,KAAKs/E,kBACjBt/E,KAAKqX,MAAM01C,EAAMU,YACrBztD,KAAKs9E,OAAOvwB,EAAMpS,OAIpB,OADA36C,KAAKs9E,OAAOvwB,EAAMU,UACXztD,KAAKy6E,WAAWhoE,EAAM,uBAG/B,6BACE,IAAI7J,EAAO,KACPsyE,GAAW,EACXmF,EAAiB,KACrB,MAAM5tE,EAAOzS,KAAKw6E,YACZqL,EAAK7lF,KAAKqkF,YAiBhB,OAfIwB,EAAG1oF,OAAS4vD,EAAMoB,OAAS03B,EAAG1oF,OAAS4vD,EAAMuB,UAC/C1lD,EAAO5I,KAAK8/E,kBAER9/E,KAAK+8E,IAAIhwB,EAAMuB,YACjB4sB,GAAW,GAGbmF,EAAiBrgF,KAAKmjF,4BAEtB9C,EAAiBrgF,KAAKs/E,gBAGxB7sE,EAAK7J,KAAOA,EACZ6J,EAAKyoE,SAAWA,EAChBzoE,EAAK4tE,eAAiBA,EACfrgF,KAAKy6E,WAAWhoE,EAAM,qBAG/B,mCAAmCtV,GACjC,MAAMsV,EAAOzS,KAAKg4E,YAAY76E,EAAK+rB,MAAO/rB,EAAKmtC,IAAIphB,OAInD,OAHAzW,EAAK7J,KAAO,KACZ6J,EAAKyoE,UAAW,EAChBzoE,EAAK4tE,eAAiBljF,EACf6C,KAAKy6E,WAAWhoE,EAAM,qBAG/B,4BAA4Bi7B,EAAS,IACnC,IAAIyyC,EAAO,KAEX,MAAQngF,KAAKqX,MAAM01C,EAAMkB,UAAYjuD,KAAKqX,MAAM01C,EAAM0B,WACpD/gB,EAAO1xC,KAAKgE,KAAKwkF,8BAEZxkF,KAAKqX,MAAM01C,EAAMkB,SACpBjuD,KAAKs9E,OAAOvwB,EAAMpS,OAQtB,OAJI36C,KAAK+8E,IAAIhwB,EAAM0B,YACjB0xB,EAAOngF,KAAKwkF,8BAGP,CACL92C,SACAyyC,QAIJ,0BAA0BnG,EAAUC,EAAUxnE,EAAMpW,GAClD,OAAQA,EAAGuM,MACT,IAAK,MACH,OAAO5I,KAAKy6E,WAAWhoE,EAAM,qBAE/B,IAAK,OACL,IAAK,UACH,OAAOzS,KAAKy6E,WAAWhoE,EAAM,yBAE/B,IAAK,QACH,OAAOzS,KAAKy6E,WAAWhoE,EAAM,uBAE/B,IAAK,QACH,OAAOzS,KAAKy6E,WAAWhoE,EAAM,uBAE/B,IAAK,SACH,OAAOzS,KAAKy6E,WAAWhoE,EAAM,wBAE/B,IAAK,SACH,OAAOzS,KAAKy6E,WAAWhoE,EAAM,wBAE/B,IAAK,SACH,OAAOzS,KAAKy6E,WAAWhoE,EAAM,wBAE/B,QAEE,OADAzS,KAAK8lF,mBAAmBzpF,EAAGuM,MACpB5I,KAAK+lF,qBAAqB/L,EAAUC,EAAU59E,IAI3D,uBACE,MAAM29E,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtBxnE,EAAOzS,KAAKw6E,YAClB,IAAInyB,EACAlrD,EACA6oF,GAAgB,EACpB,MAAM/B,EAAwBjkF,KAAKoa,MAAM8pE,mBAEzC,OAAQlkF,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMnkD,KACT,OAAI5I,KAAKghF,aAAa,aACbhhF,KAAKimF,yBAGPjmF,KAAKkmF,0BAA0BlM,EAAUC,EAAUxnE,EAAMzS,KAAK8/E,mBAEvE,KAAK/yB,EAAMY,OACT,OAAO3tD,KAAKyiF,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAK/1B,EAAMa,UACT,OAAO5tD,KAAKyiF,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAK/1B,EAAMO,SAIT,OAHAttD,KAAKoa,MAAM8pE,oBAAqB,EAChC/mF,EAAO6C,KAAKmmF,qBACZnmF,KAAKoa,MAAM8pE,mBAAqBD,EACzB9mF,EAET,KAAK4vD,EAAM4C,WACT,GAAyB,MAArB3vD,KAAKoa,MAAM7a,MASb,OARAkT,EAAKknE,eAAiB35E,KAAKigF,oCAC3BjgF,KAAKs9E,OAAOvwB,EAAMiB,QAClB3F,EAAMroD,KAAKkgF,8BACXztE,EAAKi7B,OAAS2a,EAAI3a,OAClBj7B,EAAK0tE,KAAO93B,EAAI83B,KAChBngF,KAAKs9E,OAAOvwB,EAAMkB,QAClBjuD,KAAKs9E,OAAOvwB,EAAMyB,OAClB/7C,EAAK+jC,WAAax2C,KAAKs/E,gBAChBt/E,KAAKy6E,WAAWhoE,EAAM,0BAG/B,MAEF,KAAKs6C,EAAMiB,OAGT,GAFAhuD,KAAK2C,QAEA3C,KAAKqX,MAAM01C,EAAMkB,UAAYjuD,KAAKqX,MAAM01C,EAAM0B,UACjD,GAAIzuD,KAAKqX,MAAM01C,EAAMnkD,MAAO,CAC1B,MAAMikD,EAAQ7sD,KAAKqkF,YAAYlnF,KAC/B6oF,EAAgBn5B,IAAUE,EAAMuB,UAAYzB,IAAUE,EAAMoB,WAE5D63B,GAAgB,EAIpB,GAAIA,EAAe,CAKjB,GAJAhmF,KAAKoa,MAAM8pE,oBAAqB,EAChC/mF,EAAO6C,KAAKs/E,gBACZt/E,KAAKoa,MAAM8pE,mBAAqBD,EAE5BjkF,KAAKoa,MAAM8pE,sBAAwBlkF,KAAKqX,MAAM01C,EAAMpS,QAAU36C,KAAKqX,MAAM01C,EAAMkB,SAAWjuD,KAAKqkF,YAAYlnF,OAAS4vD,EAAMyB,OAE5H,OADAxuD,KAAKs9E,OAAOvwB,EAAMkB,QACX9wD,EAEP6C,KAAK+8E,IAAIhwB,EAAMpS,OAgBnB,OAXE0N,EADElrD,EACI6C,KAAKkgF,4BAA4B,CAAClgF,KAAKomF,mCAAmCjpF,KAE1E6C,KAAKkgF,8BAGbztE,EAAKi7B,OAAS2a,EAAI3a,OAClBj7B,EAAK0tE,KAAO93B,EAAI83B,KAChBngF,KAAKs9E,OAAOvwB,EAAMkB,QAClBjuD,KAAKs9E,OAAOvwB,EAAMyB,OAClB/7C,EAAK+jC,WAAax2C,KAAKs/E,gBACvB7sE,EAAKknE,eAAiB,KACf35E,KAAKy6E,WAAWhoE,EAAM,0BAE/B,KAAKs6C,EAAMK,OACT,OAAOptD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,+BAE7C,KAAKwtD,EAAM+E,MACX,KAAK/E,EAAMgF,OAGT,OAFAt/C,EAAKlT,MAAQS,KAAKqX,MAAM01C,EAAM+E,OAC9B9xD,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,gCAE/B,KAAKs6C,EAAM8C,QACT,GAAyB,MAArB7vD,KAAKoa,MAAM7a,MAAe,CAG5B,GAFAS,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMC,KACnB,OAAOhtD,KAAK63E,cAAc73E,KAAKoa,MAAM7a,MAAO,8BAA+BkT,EAAKyW,MAAOzW,EAAK63B,IAAIphB,OAGlG,GAAIlpB,KAAKqX,MAAM01C,EAAME,QACnB,OAAOjtD,KAAK63E,cAAc73E,KAAKoa,MAAM7a,MAAO,8BAA+BkT,EAAKyW,MAAOzW,EAAK63B,IAAIphB,OAGlG,MAAMlpB,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAOg2C,EAAWmC,8BAGhD,MAAMrhE,KAAK68E,aAEb,KAAK9vB,EAAMC,IACT,OAAOhtD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,+BAE7C,KAAKwtD,EAAME,OACT,OAAOjtD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,+BAE7C,KAAKwtD,EAAMoF,MAET,OADAnyD,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,sBAE/B,KAAKs6C,EAAM8E,MAET,OADA7xD,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,6BAE/B,KAAKs6C,EAAMwE,MAET,OADAvxD,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,sBAE/B,KAAKs6C,EAAMgD,KAET,OADA/vD,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,wBAE/B,QACE,GAAgC,WAA5BzS,KAAKoa,MAAMjd,KAAKgvD,QAClB,OAAOnsD,KAAKqmF,sBACP,GAAIrmF,KAAKoa,MAAMjd,KAAKgvD,QAAS,CAClC,MAAMF,EAAQjsD,KAAKoa,MAAMjd,KAAK8uD,MAE9B,OADAjsD,KAAK2C,OACEwxE,MAAMmS,iBAAiB7zE,EAAMw5C,IAK1C,MAAMjsD,KAAK68E,aAGb,uBACE,MAAM7C,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,IAAI98E,EAAO6C,KAAK4lF,uBAEhB,KAAO5lF,KAAKqX,MAAM01C,EAAMO,YAActtD,KAAKumF,sBAAsB,CAC/D,MAAM9zE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GACxCxnE,EAAK+zE,YAAcrpF,EACnB6C,KAAKs9E,OAAOvwB,EAAMO,UAClBttD,KAAKs9E,OAAOvwB,EAAMU,UAClBtwD,EAAO6C,KAAKy6E,WAAWhoE,EAAM,uBAG/B,OAAOtV,EAGT,sBACE,MAAMsV,EAAOzS,KAAKw6E,YAElB,OAAIx6E,KAAK+8E,IAAIhwB,EAAMuB,WACjB77C,EAAK4tE,eAAiBrgF,KAAKymF,sBACpBzmF,KAAKy6E,WAAWhoE,EAAM,2BAEtBzS,KAAK0mF,uBAIhB,qCACE,MAAMC,EAAQ3mF,KAAKymF,sBAEnB,IAAKzmF,KAAKoa,MAAM8pE,oBAAsBlkF,KAAK+8E,IAAIhwB,EAAMyB,OAAQ,CAC3D,MAAM/7C,EAAOzS,KAAKg4E,YAAY2O,EAAMz9D,MAAOy9D,EAAMr8C,IAAIphB,OAKrD,OAJAzW,EAAKi7B,OAAS,CAAC1tC,KAAKomF,mCAAmCO,IACvDl0E,EAAK0tE,KAAO,KACZ1tE,EAAK+jC,WAAax2C,KAAKs/E,gBACvB7sE,EAAKknE,eAAiB,KACf35E,KAAKy6E,WAAWhoE,EAAM,0BAG/B,OAAOk0E,EAGT,4BACE,MAAMl0E,EAAOzS,KAAKw6E,YAClBx6E,KAAK+8E,IAAIhwB,EAAM0C,YACf,MAAMtyD,EAAO6C,KAAK4mF,qCAGlB,IAFAn0E,EAAKs6C,MAAQ,CAAC5vD,GAEP6C,KAAK+8E,IAAIhwB,EAAM0C,aACpBh9C,EAAKs6C,MAAM/wD,KAAKgE,KAAK4mF,sCAGvB,OAA6B,IAAtBn0E,EAAKs6C,MAAM3wD,OAAee,EAAO6C,KAAKy6E,WAAWhoE,EAAM,8BAGhE,qBACE,MAAMA,EAAOzS,KAAKw6E,YAClBx6E,KAAK+8E,IAAIhwB,EAAMwC,WACf,MAAMpyD,EAAO6C,KAAK6mF,4BAGlB,IAFAp0E,EAAKs6C,MAAQ,CAAC5vD,GAEP6C,KAAK+8E,IAAIhwB,EAAMwC,YACpB98C,EAAKs6C,MAAM/wD,KAAKgE,KAAK6mF,6BAGvB,OAA6B,IAAtBp0E,EAAKs6C,MAAM3wD,OAAee,EAAO6C,KAAKy6E,WAAWhoE,EAAM,uBAGhE,gBACE,MAAM2sE,EAAYp/E,KAAKoa,MAAMilE,OAC7Br/E,KAAKoa,MAAMilE,QAAS,EACpB,MAAMliF,EAAO6C,KAAK8mF,qBAGlB,OAFA9mF,KAAKoa,MAAMilE,OAASD,EACpBp/E,KAAKoa,MAAM4iD,YAAch9D,KAAKoa,MAAM4iD,aAAeh9D,KAAKoa,MAAM8pE,mBACvD/mF,EAGT,uCACE,GAAI6C,KAAKoa,MAAMjd,OAAS4vD,EAAMnkD,MAA6B,MAArB5I,KAAKoa,MAAM7a,MAAe,CAC9D,MAAMy6E,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtBxnE,EAAOzS,KAAK8/E,kBAClB,OAAO9/E,KAAK+lF,qBAAqB/L,EAAUC,EAAUxnE,GAErD,OAAOzS,KAAKs/E,gBAIhB,0BACE,MAAM7sE,EAAOzS,KAAKw6E,YAElB,OADA/nE,EAAK4tE,eAAiBrgF,KAAKmjF,2BACpBnjF,KAAKy6E,WAAWhoE,EAAM,kBAG/B,mCAAmCs0E,GACjC,MAAMpD,EAAQoD,EAAyB/mF,KAAK8/E,kBAAoB9/E,KAAKsiF,gCAOrE,OALItiF,KAAKqX,MAAM01C,EAAMoB,SACnBw1B,EAAMtD,eAAiBrgF,KAAKkiF,0BAC5BliF,KAAKsgF,iBAAiBqD,IAGjBA,EAGT,oBAAoBlxE,GAGlB,OAFAA,EAAKwlE,WAAWoI,eAAiB5tE,EAAK4tE,eACtCrgF,KAAKsgF,iBAAiB7tE,EAAKwlE,WAAYxlE,EAAK4tE,eAAev6D,IAAKrT,EAAK4tE,eAAe/1C,IAAIxkB,KACjFrT,EAAKwlE,WAGd,oBACE,IAAIwL,EAAW,KAef,OAbIzjF,KAAKqX,MAAM01C,EAAM8C,WACnB4zB,EAAWzjF,KAAKw6E,YAES,MAArBx6E,KAAKoa,MAAM7a,MACbkkF,EAASxnB,KAAO,OAEhBwnB,EAASxnB,KAAO,QAGlBj8D,KAAK2C,OACL3C,KAAKy6E,WAAWgJ,EAAU,aAGrBA,EAGT,kBAAkBhxE,EAAMu0E,EAAqB7M,GAAW,GACtD,OAAI6M,EACKhnF,KAAKinF,iCAAiCx0E,EAAM,IAAM0hE,MAAMiG,kBAAkB3nE,GAAM,EAAM0nE,IAGxFhG,MAAMiG,kBAAkB3nE,GAAM,EAAO0nE,GAG9C,2BAA2B1nE,EAAMtV,EAAMg9E,GAAW,GAChD,GAAIn6E,KAAKqX,MAAM01C,EAAMoB,OAAQ,CAC3B,MAAM4xB,EAAW//E,KAAKw6E,aACrBuF,EAASM,eAAgB5tE,EAAKktE,WAAa3/E,KAAKogF,uCACjD3tE,EAAK+jC,WAAaupC,EAASM,eAAiBrgF,KAAKy6E,WAAWsF,EAAU,kBAAoB,KAG5F5L,MAAM+S,2BAA2Bz0E,EAAMtV,EAAMg9E,GAG/C,eAAe93D,EAAS82D,GACtB,GAAIn5E,KAAKoa,MAAM+sE,QAAUnnF,KAAKqX,MAAM01C,EAAMnkD,OAA8B,cAArB5I,KAAKoa,MAAM7a,MAAuB,CACnF,MAAMkT,EAAOzS,KAAKw6E,YAElB,OADAx6E,KAAK2C,OACE3C,KAAKonF,mBAAmB30E,GAC1B,GAAIzS,KAAKqnF,oBAAsBrnF,KAAKghF,aAAa,QAAS,CAC/D,MAAMvuE,EAAOzS,KAAKw6E,YAElB,OADAx6E,KAAK2C,OACE3C,KAAKsnF,yBAAyB70E,GAChC,CACL,MAAMslE,EAAO5D,MAAMoT,eAAellE,EAAS82D,GAM3C,YAJwBt9E,IAApBmE,KAAKg/E,YAA6Bh/E,KAAKwnF,iBAAiBzP,KAC1D/3E,KAAKg/E,WAAa,MAGbjH,GAIX,yBAAyBtlE,EAAM6lE,GAC7B,GAAkB,eAAdA,EAAKn7E,KACP,GAAkB,YAAdm7E,EAAK1vE,MACP,GAAI5I,KAAKqX,MAAM01C,EAAM0E,SAAWzxD,KAAKqX,MAAM01C,EAAMnkD,OAAS5I,KAAKqX,MAAM01C,EAAM6D,YAAc5wD,KAAKqX,MAAM01C,EAAMmE,OAASlxD,KAAKqX,MAAM01C,EAAM4E,SAClI,OAAO3xD,KAAKyhF,iBAAiBhvE,QAE1B,GAAIzS,KAAKqX,MAAM01C,EAAMnkD,MAAO,CACjC,GAAkB,cAAd0vE,EAAK1vE,KACP,OAAO5I,KAAKonF,mBAAmB30E,GAC1B,GAAkB,SAAd6lE,EAAK1vE,KACd,OAAO5I,KAAKmiF,mBAAmB1vE,GAC1B,GAAkB,WAAd6lE,EAAK1vE,KACd,OAAO5I,KAAKoiF,oBAAoB3vE,GAAM,GAK5C,OAAO0hE,MAAMsT,yBAAyBh1E,EAAM6lE,GAG9C,+BACE,OAAOt4E,KAAKghF,aAAa,SAAWhhF,KAAKghF,aAAa,cAAgBhhF,KAAKghF,aAAa,WAAahhF,KAAKqnF,oBAAsBrnF,KAAKghF,aAAa,SAAW7M,MAAMuT,+BAGrK,2BACE,QAAI1nF,KAAKqX,MAAM01C,EAAMnkD,SAA+B,SAArB5I,KAAKoa,MAAM7a,OAAyC,cAArBS,KAAKoa,MAAM7a,OAA8C,WAArBS,KAAKoa,MAAM7a,OAAsBS,KAAKqnF,oBAA2C,SAArBrnF,KAAKoa,MAAM7a,SAIlK40E,MAAMwT,2BAGf,+BACE,GAAI3nF,KAAKqnF,oBAAsBrnF,KAAKghF,aAAa,QAAS,CACxD,MAAMvuE,EAAOzS,KAAKw6E,YAElB,OADAx6E,KAAK2C,OACE3C,KAAKsnF,yBAAyB70E,GAGvC,OAAO0hE,MAAMyT,+BAGf,iBAAiBtP,EAAM0B,EAAUC,EAAU4N,GACzC,IAAK7nF,KAAKqX,MAAM01C,EAAMuB,UAAW,OAAOgqB,EAExC,GAAIuP,EAAkB,CACpB,MAAMtnF,EAASP,KAAK8nF,SAAS,IAAM3T,MAAM4T,iBAAiBzP,EAAM0B,EAAUC,IAE1E,OAAK15E,EAAOkS,MAKRlS,EAAOoJ,QAAO3J,KAAKoa,MAAQ7Z,EAAOynF,WAC/BznF,EAAOkS,OALZo1E,EAAiB3+D,MAAQ3oB,EAAOoJ,MAAMklC,KAAO7uC,KAAKoa,MAAM8O,MACjDovD,GAOXt4E,KAAKs9E,OAAOvwB,EAAMuB,UAClB,MAAMl0C,EAAQpa,KAAKoa,MAAMgD,QACnB6qE,EAAoBjoF,KAAKoa,MAAM8tE,UAC/Bz1E,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GACxC,IAAI,WACFlsC,EAAU,OACVo6C,GACEnoF,KAAKooF,iCACJC,EAAOC,GAAWtoF,KAAKuoF,wBAAwBx6C,GAEpD,GAAIo6C,GAAUG,EAAQlsF,OAAS,EAAG,CAChC,MAAM8rF,EAAY,IAAID,GAEtB,GAAIK,EAAQlsF,OAAS,EAAG,CACtB4D,KAAKoa,MAAQA,EACbpa,KAAKoa,MAAM8tE,UAAYA,EAEvB,IAAK,IAAIrrF,EAAI,EAAGA,EAAIyrF,EAAQlsF,OAAQS,IAClCqrF,EAAUlsF,KAAKssF,EAAQzrF,GAAGqsB,SAI1B6kB,aACAo6C,UACEnoF,KAAKooF,kCACRC,EAAOC,GAAWtoF,KAAKuoF,wBAAwBx6C,GAG9Co6C,GAAUE,EAAMjsF,OAAS,GAC3B4D,KAAKmzE,MAAM/4D,EAAM8O,MAAOg2C,EAAWC,2BAGjCgpB,GAA2B,IAAjBE,EAAMjsF,SAClB4D,KAAKoa,MAAQA,EACbpa,KAAKoa,MAAM8tE,UAAYA,EAAU/4E,OAAOk5E,EAAM,GAAGn/D,SAE/C6kB,aACAo6C,UACEnoF,KAAKooF,kCAUb,OANApoF,KAAKuoF,wBAAwBx6C,GAAY,GACzC/tC,KAAKoa,MAAM8tE,UAAYD,EACvBjoF,KAAKs9E,OAAOvwB,EAAMoB,OAClB17C,EAAKoN,KAAOy4D,EACZ7lE,EAAKs7B,WAAaA,EAClBt7B,EAAKu7B,UAAYhuC,KAAKinF,iCAAiCx0E,EAAM,IAAMzS,KAAKwoF,sBAAiB3sF,OAAWA,OAAWA,IACxGmE,KAAKy6E,WAAWhoE,EAAM,yBAG/B,gCACEzS,KAAKoa,MAAMquE,0BAA0BzsF,KAAKgE,KAAKoa,MAAM8O,OACrD,MAAM6kB,EAAa/tC,KAAKy9E,0BAClB0K,GAAUnoF,KAAKqX,MAAM01C,EAAMoB,OAEjC,OADAnuD,KAAKoa,MAAMquE,0BAA0BvsF,MAC9B,CACL6xC,aACAo6C,UAIJ,wBAAwB11E,EAAMi2E,GAC5B,MAAMniF,EAAQ,CAACkM,GACTk2E,EAAS,GAEf,KAAwB,IAAjBpiF,EAAMnK,QAAc,CACzB,MAAMqW,EAAOlM,EAAMrK,MAED,4BAAduW,EAAKtV,MACHsV,EAAKknE,iBAAmBlnE,EAAK+jC,WAC/Bx2C,KAAK4oF,sBAAsBn2E,GAE3Bk2E,EAAO3sF,KAAKyW,GAGdlM,EAAMvK,KAAKyW,EAAKgxB,OACO,0BAAdhxB,EAAKtV,OACdoJ,EAAMvK,KAAKyW,EAAKs7B,YAChBxnC,EAAMvK,KAAKyW,EAAKu7B,YAIpB,OAAI06C,GACFC,EAAOxqF,QAAQsU,GAAQzS,KAAK4oF,sBAAsBn2E,IAC3C,CAACk2E,EAAQ,KAj6CxB,SAAmB7wC,EAAMj4B,GACvB,MAAMgpE,EAAQ,GACRC,EAAQ,GAEd,IAAK,IAAIjsF,EAAI,EAAGA,EAAIi7C,EAAK17C,OAAQS,KAC9BgjB,EAAKi4B,EAAKj7C,GAAIA,EAAGi7C,GAAQ+wC,EAAQC,GAAO9sF,KAAK87C,EAAKj7C,IAGrD,MAAO,CAACgsF,EAAOC,GA45CJC,CAAUJ,EAAQl2E,GAAQA,EAAKi7B,OAAOs7C,MAAMrC,GAAS3mF,KAAKipF,aAAatC,GAAO,KAGvF,sBAAsBl0E,GACpB,IAAIy2E,EAEJlpF,KAAKmpF,iBAAiB12E,EAAKi7B,OAAsC,OAA7Bw7C,EAAcz2E,EAAKylE,YAAiB,EAASgR,EAAYE,eAC7FppF,KAAK4zE,MAAM7qD,MAAMsgE,GACjBlV,MAAMmV,YAAY72E,GAAM,GAAO,GAC/BzS,KAAK4zE,MAAM8N,OAGb,iCAAiCjvE,EAAM82E,GACrC,IAAIhpF,EAUJ,OARkE,IAA9DP,KAAKoa,MAAMquE,0BAA0B7oE,QAAQnN,EAAKyW,QACpDlpB,KAAKoa,MAAMquE,0BAA0BzsF,KAAKgE,KAAKoa,MAAM8O,OACrD3oB,EAASgpF,IACTvpF,KAAKoa,MAAMquE,0BAA0BvsF,OAErCqE,EAASgpF,IAGJhpF,EAGT,eAAekS,EAAMunE,EAAUC,GAQ7B,GAPAxnE,EAAO0hE,MAAMqV,eAAe/2E,EAAMunE,EAAUC,GAExCj6E,KAAK+8E,IAAIhwB,EAAMuB,YACjB77C,EAAKyoE,UAAW,EAChBl7E,KAAKsgF,iBAAiB7tE,IAGpBzS,KAAKqX,MAAM01C,EAAMoB,OAAQ,CAC3B,MAAMs7B,EAAezpF,KAAKg4E,YAAYgC,EAAUC,GAGhD,OAFAwP,EAAaxR,WAAaxlE,EAC1Bg3E,EAAapJ,eAAiBrgF,KAAKkiF,0BAC5BliF,KAAKy6E,WAAWgP,EAAc,sBAGvC,OAAOh3E,EAGT,wBAAwBA,GACJ,sBAAdA,EAAKtV,OAAqD,SAApBsV,EAAKmvD,YAA6C,WAApBnvD,EAAKmvD,aAA0C,2BAAdnvD,EAAKtV,MAAyD,SAApBsV,EAAKwvE,YAAuC,yBAAdxvE,EAAKtV,MAAuD,SAApBsV,EAAKwvE,YAI9N9N,MAAMuV,wBAAwBj3E,GAGhC,YAAYA,GACV,MAAMk3E,EAAOxV,MAAMoH,YAAY9oE,GAM/B,MAJkB,2BAAdk3E,EAAKxsF,MAAmD,yBAAdwsF,EAAKxsF,OACjDwsF,EAAK1H,WAAa0H,EAAK1H,YAAc,SAGhC0H,EAGT,uBAAuBl3E,GACrB,GAAIzS,KAAKghF,aAAa,QAAS,CAC7BvuE,EAAKwvE,WAAa,OAClB,MAAM2H,EAAkB5pF,KAAKw6E,YAG7B,OAFAx6E,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMY,SACnBl7C,EAAKgpE,WAAaz7E,KAAK6pF,wBACvB7pF,KAAK8pF,gBAAgBr3E,GACd,MAEAzS,KAAKmiF,mBAAmByH,GAE5B,GAAI5pF,KAAKghF,aAAa,UAAW,CACtCvuE,EAAKwvE,WAAa,OAClB,MAAM2H,EAAkB5pF,KAAKw6E,YAE7B,OADAx6E,KAAK2C,OACE3C,KAAKoiF,oBAAoBwH,GAAiB,GAC5C,GAAI5pF,KAAKghF,aAAa,aAAc,CACzCvuE,EAAKwvE,WAAa,OAClB,MAAM2H,EAAkB5pF,KAAKw6E,YAE7B,OADAx6E,KAAK2C,OACE3C,KAAKonF,mBAAmBwC,GAC1B,GAAI5pF,KAAKqnF,oBAAsBrnF,KAAKghF,aAAa,QAAS,CAC/DvuE,EAAKwvE,WAAa,QAClB,MAAM2H,EAAkB5pF,KAAKw6E,YAE7B,OADAx6E,KAAK2C,OACE3C,KAAKsnF,yBAAyBsC,GAErC,OAAOzV,MAAM4V,uBAAuBt3E,GAIxC,cAAcA,GACZ,QAAI0hE,MAAM6V,iBAAiBp0E,eAEvB5V,KAAKghF,aAAa,SAAWhhF,KAAKqkF,YAAYlnF,OAAS4vD,EAAMgD,QAC/Dt9C,EAAKwvE,WAAa,OAClBjiF,KAAK2C,OACL3C,KAAK2C,QACE,GAMX,mCAAmC8P,GACjC,MAAMo8B,EAAM7uC,KAAKoa,MAAM8O,MACjB+gE,EAAe9V,MAAM+V,mCAAmCz3E,GAM9D,OAJIw3E,GAAoC,SAApBx3E,EAAKwvE,YACvBjiF,KAAK68E,WAAWhuC,GAGXo7C,EAGT,aAAax3E,EAAM03E,EAAaC,GAC9BjW,MAAMkW,aAAa53E,EAAM03E,EAAaC,GAElCpqF,KAAKy+E,aAAa,OACpBhsE,EAAKknE,eAAiB35E,KAAKigF,qCAI/B,iBAAiB1G,EAAW+Q,EAAQlwE,GAClC,MAAMy0B,EAAM7uC,KAAKoa,MAAM8O,MAEvB,GAAIlpB,KAAKghF,aAAa,WAAY,CAChC,GAAIhhF,KAAKuqF,6BAA6BhR,EAAW+Q,GAC/C,OAGFA,EAAOlH,SAAU,EAGnBjP,MAAMqW,iBAAiBjR,EAAW+Q,EAAQlwE,GAEtCkwE,EAAOlH,UACW,kBAAhBkH,EAAOntF,MAA4C,yBAAhBmtF,EAAOntF,KAC5C6C,KAAKmzE,MAAMtkC,EAAKqwB,EAAWI,qBAClBgrB,EAAO/qF,OAChBS,KAAKmzE,MAAMmX,EAAO/qF,MAAM2pB,MAAOg2C,EAAWK,+BAKhD,iBAAiBl1B,GACf,MAAM1nC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEpD,OAAa,MAATxE,GAAyB,MAAT1nC,EACX3C,KAAKyqF,SAAS19B,EAAMa,UAAW,IAC7B5tD,KAAKoa,MAAMilE,QAAoB,KAATh1C,GAAwB,KAATA,EAErCrqC,KAAKoa,MAAMilE,QAAmB,KAATh1C,EACvBrqC,KAAKyqF,SAAS19B,EAAMuB,SAAU,GApoD7C,SAAyBrwC,EAAStb,GAChC,OAAmB,KAAZsb,GAA2B,KAATtb,EAooDV+nF,CAAgBrgD,EAAM1nC,IAC/B3C,KAAKoa,MAAMmjD,YAAa,EACjB4W,MAAMwW,YAENxW,MAAMiI,iBAAiB/xC,GAPvBrqC,KAAKyqF,SAAS19B,EAAM4C,WAAY,GAW3C,aAAal9C,EAAMm4E,GACjB,OAAQn4E,EAAKtV,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,OAAO,EAET,IAAK,mBACH,CACE,MAAMH,EAAOyV,EAAKw6B,WAAW7wC,OAAS,EACtC,OAAOqW,EAAKw6B,WAAW+7C,MAAM,CAAClyE,EAAMja,IACb,iBAAdia,EAAK3Z,OAA4BN,IAAMG,GAAsB,kBAAd8Z,EAAK3Z,OAA6B6C,KAAKipF,aAAanyE,IAIhH,IAAK,iBACH,OAAO9W,KAAKipF,aAAax2E,EAAKlT,OAEhC,IAAK,gBACH,OAAOS,KAAKipF,aAAax2E,EAAK+qE,UAEhC,IAAK,kBACH,OAAO/qE,EAAKs6B,SAASi8C,MAAMx1C,GAAWxzC,KAAKipF,aAAaz1C,IAE1D,IAAK,uBACH,MAAyB,MAAlB/gC,EAAKo4E,SAEd,IAAK,0BACL,IAAK,qBACH,OAAO7qF,KAAKipF,aAAax2E,EAAKwlE,YAEhC,IAAK,mBACL,IAAK,2BACH,OAAQ2S,EAEV,QACE,OAAO,GAIb,aAAan4E,GACX,MAAkB,uBAAdA,EAAKtV,KACAg3E,MAAM4G,aAAa/6E,KAAK8qF,oBAAoBr4E,IAE5C0hE,MAAM4G,aAAatoE,GAI9B,iBAAiB2oE,EAAU2P,GACzB,IAAK,IAAIluF,EAAI,EAAGA,EAAIu+E,EAASh/E,OAAQS,IAAK,CACxC,MAAMy7E,EAAO8C,EAASv+E,GAEsB,wBAA/B,MAARy7E,OAAe,EAASA,EAAKn7E,QAChCi+E,EAASv+E,GAAKmD,KAAK8qF,oBAAoBxS,IAI3C,OAAOnE,MAAMgV,iBAAiB/N,EAAU2P,GAG1C,iBAAiB3P,EAAUC,GACzB,IAAK,IAAIx+E,EAAI,EAAGA,EAAIu+E,EAASh/E,OAAQS,IAAK,CACxC,IAAImuF,EAEJ,MAAM1S,EAAO8C,EAASv+E,GAElBy7E,GAAsB,uBAAdA,EAAKn7E,QAAiE,OAA7B6tF,EAAc1S,EAAKJ,YAAiB,EAAS8S,EAAYhS,iBAAmBoC,EAASh/E,OAAS,IAAMi/E,IACvJr7E,KAAKmzE,MAAMmF,EAAK+H,eAAen3D,MAAOg2C,EAAW6B,mBAIrD,OAAOqa,EAGT,UAAU9C,EAAMzE,EAxoFF,GAwoF2B0E,EAAcC,GACrD,GAAkB,uBAAdF,EAAKn7E,KACP,OAAOg3E,MAAMuE,UAAUJ,EAAMzE,EAAa0E,EAAcC,GAI5D,mBAAmB/lE,GAKjB,OAJIzS,KAAKqX,MAAM01C,EAAMoB,SACnB17C,EAAK4tE,eAAiBrgF,KAAKkiF,2BAGtB/N,MAAM8W,mBAAmBx4E,GAGlC,0BAA0BA,GAKxB,OAJIzS,KAAKqX,MAAM01C,EAAMoB,SACnB17C,EAAK4tE,eAAiBrgF,KAAKkiF,2BAGtB/N,MAAM+W,0BAA0Bz4E,GAGzC,gBACE,OAAOzS,KAAKy+E,aAAa,MAAQtK,MAAMgX,gBAGzC,kBACE,OAAOnrF,KAAKqX,MAAM01C,EAAMoB,QAAUgmB,MAAMiX,kBAG1C,uBAAuB1rF,GACrB,OAAQM,KAAKqX,MAAM01C,EAAMoB,QAAUgmB,MAAMkX,uBAAuB3rF,GAGlE,gBAAgB65E,EAAW75E,EAAQs1E,EAAaD,EAASyE,EAAeC,GAClE/5E,EAAO+jF,UACTzjF,KAAK68E,WAAWn9E,EAAO+jF,SAASv6D,cAG3BxpB,EAAO+jF,SAEVzjF,KAAKy+E,aAAa,OACpB/+E,EAAOi6E,eAAiB35E,KAAKigF,qCAG/B9L,MAAMmX,gBAAgB/R,EAAW75E,EAAQs1E,EAAaD,EAASyE,EAAeC,GAGhF,uBAAuBF,EAAW75E,EAAQs1E,EAAaD,GACjDr1E,EAAO+jF,UACTzjF,KAAK68E,WAAWn9E,EAAO+jF,SAASv6D,cAG3BxpB,EAAO+jF,SAEVzjF,KAAKy+E,aAAa,OACpB/+E,EAAOi6E,eAAiB35E,KAAKigF,qCAG/B9L,MAAMoX,uBAAuBhS,EAAW75E,EAAQs1E,EAAaD,GAG/D,gBAAgBtiE,GAOd,GANA0hE,MAAMqX,gBAAgB/4E,GAElBA,EAAK+kE,YAAcx3E,KAAKy+E,aAAa,OACvChsE,EAAKg5E,oBAAsBzrF,KAAKgjF,uCAG9BhjF,KAAKghF,aAAa,cAAe,CACnChhF,KAAK2C,OACL,MAAM+oF,EAAcj5E,EAAK8vE,WAAa,GAEtC,EAAG,CACD,MAAM9vE,EAAOzS,KAAKw6E,YAClB/nE,EAAKpW,GAAK2D,KAAKsiF,+BAA8B,GAEzCtiF,KAAKy+E,aAAa,KACpBhsE,EAAKknE,eAAiB35E,KAAKgjF,sCAE3BvwE,EAAKknE,eAAiB,KAGxB+R,EAAY1vF,KAAKgE,KAAKy6E,WAAWhoE,EAAM,0BAChCzS,KAAK+8E,IAAIhwB,EAAMpS,SAI5B,kBAAkBloC,EAAMk5E,GACtB,MAAMlI,EAAWzjF,KAAK0jF,oBAChBtmF,EAAM+2E,MAAMyX,kBAAkBn5E,EAAMk5E,GAE1C,OADAl5E,EAAKgxE,SAAWA,EACTrmF,EAGT,kBAAkB0Z,EAAMkjE,EAAUC,EAAUjF,EAAaD,EAAS2F,EAAWC,EAAY9B,GAMvF,IAAIc,EALA7iE,EAAK2sE,UACPzjF,KAAK68E,WAAW/lE,EAAK2sE,SAASv6D,cAGzBpS,EAAK2sE,SAGRzjF,KAAKy+E,aAAa,OAAS9D,IAC7BhB,EAAiB35E,KAAKigF,oCACjBjgF,KAAKqX,MAAM01C,EAAMiB,SAAShuD,KAAK68E,cAGtC1I,MAAM0X,kBAAkB/0E,EAAMkjE,EAAUC,EAAUjF,EAAaD,EAAS2F,EAAWC,EAAY9B,GAE3Fc,KACD7iE,EAAKvX,OAASuX,GAAM6iE,eAAiBA,GAI1C,6BAA6BgN,GAc3B,OAbI3mF,KAAK+8E,IAAIhwB,EAAMuB,YACE,eAAfq4B,EAAMxpF,MACR6C,KAAKmzE,MAAMwT,EAAMz9D,MAAOg2C,EAAW0B,wBAGrC+lB,EAAMzL,UAAW,GAGfl7E,KAAKqX,MAAM01C,EAAMoB,SACnBw4B,EAAMtG,eAAiBrgF,KAAKkiF,2BAG9BliF,KAAKsgF,iBAAiBqG,GACfA,EAGT,kBAAkB3M,EAAUC,EAAU51C,GACpC,MAAM5xB,EAAO0hE,MAAM2X,kBAAkB9R,EAAUC,EAAU51C,GAMzD,MAJkB,sBAAd5xB,EAAKtV,MAAgCsV,EAAK4tE,gBAAkB5tE,EAAKs1B,MAAM7e,MAAQzW,EAAK4tE,eAAen3D,OACrGlpB,KAAKmzE,MAAM1gE,EAAK4tE,eAAen3D,MAAOg2C,EAAW4B,uBAG5CruD,EAGT,yBAAyBA,GACvB,OAAKkvD,EAAkBlvD,GAIhBovD,EAAqB7hE,KAAKoa,OAHxB+5D,MAAM4X,yBAAyBt5E,GAM1C,0BAA0BA,EAAMu5E,EAAW7uF,EAAMq7E,GAC/CwT,EAAUC,MAAQtqB,EAAkBlvD,GAAQzS,KAAKsiF,+BAA8B,GAAM,GAAQtiF,KAAK8/E,kBAClG9/E,KAAK04E,UAAUsT,EAAUC,MAvyFV3K,OAuyF+BzlF,EAAW28E,GACzD/lE,EAAKgpE,WAAWz/E,KAAKgE,KAAKy6E,WAAWuR,EAAW7uF,IAGlD,iCAAiCsV,GAC/BA,EAAKmvD,WAAa,QAClB,IAAI3F,EAAO,KAQX,GANIj8D,KAAKqX,MAAM01C,EAAMmF,SACnB+J,EAAO,SACEj8D,KAAKghF,aAAa,UAC3B/kB,EAAO,QAGLA,EAAM,CACR,MAAM4pB,EAAK7lF,KAAKqkF,YAEH,SAATpoB,GAAmB4pB,EAAG1oF,OAAS4vD,EAAMgD,MACvC/vD,KAAK68E,WAAWgJ,EAAG38D,QAGjB24C,EAAqBgkB,IAAOA,EAAG1oF,OAAS4vD,EAAMY,QAAUk4B,EAAG1oF,OAAS4vD,EAAMgD,QAC5E/vD,KAAK2C,OACL8P,EAAKmvD,WAAa3F,GAItB,OAAOkY,MAAM+X,iCAAiCz5E,GAGhD,qBAAqBA,GACnB,MAAMu5E,EAAYhsF,KAAKw6E,YACjB2R,EAAgBnsF,KAAKoa,MAAM8O,MAC3BkjE,EAAapsF,KAAK8/E,iBAAgB,GACxC,IAAIuM,EAAoB,KAEA,SAApBD,EAAWxjF,KACbyjF,EAAoB,OACS,WAApBD,EAAWxjF,OACpByjF,EAAoB,UAGtB,IAAIzB,GAAY,EAEhB,GAAI5qF,KAAKghF,aAAa,QAAUhhF,KAAKssF,sBAAsB,MAAO,CAChE,MAAMC,EAAWvsF,KAAK8/E,iBAAgB,GAEZ,OAAtBuM,GAA+BrsF,KAAKqX,MAAM01C,EAAMnkD,OAAU5I,KAAKoa,MAAMjd,KAAKgvD,SAK5E6/B,EAAUQ,SAAWJ,EACrBJ,EAAUpqB,WAAa,KACvBoqB,EAAUC,MAAQjsF,KAAK8/E,oBANvBkM,EAAUQ,SAAWD,EACrBP,EAAUpqB,WAAayqB,EACvBL,EAAUC,MAAQM,EAASE,gBAME,OAAtBJ,IAA+BrsF,KAAKqX,MAAM01C,EAAMnkD,OAAS5I,KAAKoa,MAAMjd,KAAKgvD,UAClF6/B,EAAUQ,SAAWxsF,KAAK8/E,iBAAgB,GAC1CkM,EAAUpqB,WAAayqB,EAEnBrsF,KAAK4gF,cAAc,MACrBoL,EAAUC,MAAQjsF,KAAK8/E,mBAEvB8K,GAAY,EACZoB,EAAUC,MAAQD,EAAUQ,SAASC,aAGvC7B,GAAY,EACZoB,EAAUQ,SAAWJ,EACrBJ,EAAUpqB,WAAa,KACvBoqB,EAAUC,MAAQD,EAAUQ,SAASC,WAGvC,MAAMC,EAAmB/qB,EAAkBlvD,GACrCk6E,EAAwBhrB,EAAkBqqB,GAE5CU,GAAoBC,GACtB3sF,KAAKmzE,MAAMgZ,EAAejtB,EAAWkB,sCAGnCssB,GAAoBC,IACtB3sF,KAAKkjF,kBAAkB8I,EAAUC,MAAMrjF,KAAMojF,EAAUC,MAAM/iE,OAAO,IAGlE0hE,GAAc8B,GAAqBC,GACrC3sF,KAAK4sF,kBAAkBZ,EAAUC,MAAMrjF,KAAMojF,EAAU9iE,OAAO,GAAM,GAGtElpB,KAAK04E,UAAUsT,EAAUC,MA/3FV3K,OA+3F+BzlF,EAAW,oBACzD4W,EAAKgpE,WAAWz/E,KAAKgE,KAAKy6E,WAAWuR,EAAW,oBAGlD,oBAAoBv5E,EAAMo6E,GACxB,MAAM5wB,EAAOxpD,EAAKwpD,KAEL,QAATA,GAA2B,QAATA,GAAkBj8D,KAAKy+E,aAAa,OACxDhsE,EAAKknE,eAAiB35E,KAAKigF,qCAG7B9L,MAAM2Y,oBAAoBr6E,EAAMo6E,GAGlC,WAAWlD,EAAM1tB,GACfkY,MAAM4Y,WAAWpD,EAAM1tB,GAEnBj8D,KAAKqX,MAAM01C,EAAMoB,SACnBw7B,EAAKttF,GAAGgkF,eAAiBrgF,KAAKkiF,0BAC9BliF,KAAKsgF,iBAAiBqJ,EAAKttF,KAI/B,kCAAkCoW,EAAMhR,GACtC,GAAIzB,KAAKqX,MAAM01C,EAAMoB,OAAQ,CAC3B,MAAM81B,EAAwBjkF,KAAKoa,MAAM8pE,mBACzClkF,KAAKoa,MAAM8pE,oBAAqB,EAChCzxE,EAAK+jC,WAAax2C,KAAKkiF,0BACvBliF,KAAKoa,MAAM8pE,mBAAqBD,EAGlC,OAAO9P,MAAM6Y,kCAAkCv6E,EAAMhR,GAGvD,wBACE,OAAOzB,KAAKqX,MAAM01C,EAAMoB,QAAUgmB,MAAM8Y,wBAG1C,iBAAiBpU,EAAqBqU,EAAgBrF,GACpD,IAAIsF,EAEJ,IACInR,EADA5hE,EAAQ,KAGZ,GAAIpa,KAAKg3E,UAAU,SAAWh3E,KAAKqX,MAAM01C,EAAM4lB,cAAgB3yE,KAAKy+E,aAAa,MAAO,CAGtF,GAFArkE,EAAQpa,KAAKoa,MAAMgD,QACnB4+D,EAAMh8E,KAAK8nF,SAAS,IAAM3T,MAAMqU,iBAAiB3P,EAAqBqU,EAAgBrF,GAAmBztE,IACpG4hE,EAAIryE,MAAO,OAAOqyE,EAAIvpE,KAC3B,MAAM,QACJ4P,GACEriB,KAAKoa,MAELiI,EAAQA,EAAQjmB,OAAS,KAAOkgE,EAAQgW,OAC1CjwD,EAAQjmB,QAAU,EACTimB,EAAQA,EAAQjmB,OAAS,KAAOkgE,EAAQkW,SACjDnwD,EAAQjmB,QAAU,GAItB,IAAqB,OAAf+wF,EAAOnR,QAAe,EAASmR,EAAKxjF,QAAU3J,KAAKy+E,aAAa,KAAM,CAC1E,IAAI2O,EAAOC,EAGX,IAAI1T,EADJv/D,EAAQA,GAASpa,KAAKoa,MAAMgD,QAE5B,MAAMoxC,EAAQxuD,KAAK8nF,SAASwF,IAC1B,IAAIC,EAEJ5T,EAAiB35E,KAAKigF,oCACtB,MAAMuN,EAAkBxtF,KAAKinF,iCAAiCtN,EAAgB,KAC5E,MAAMp5E,EAAS4zE,MAAMqU,iBAAiB3P,EAAqBqU,EAAgBrF,GAE3E,OADA7nF,KAAKytF,2BAA2BltF,EAAQo5E,GACjCp5E,IAGoB,4BAAzBitF,EAAgBrwF,OAA0F,OAAlDowF,EAAwBC,EAAgBtV,YAAiB,EAASqV,EAAsBvU,gBAClJsU,IAGF,MAAMhV,EAAOt4E,KAAK0tF,8BAA8BF,GAGhD,OAFAlV,EAAKqB,eAAiBA,EACtB35E,KAAKytF,2BAA2BnV,EAAMqB,GAC/B6T,GACNpzE,GACH,IAAIozE,EAAkB,KAEtB,GAAIh/B,EAAM/7C,MAAgE,4BAAxDzS,KAAK0tF,8BAA8Bl/B,EAAM/7C,MAAMtV,KAAoC,CACnG,IAAKqxD,EAAM7kD,QAAU6kD,EAAMm/B,QAKzB,OAJIn/B,EAAM/7C,KAAKm7E,OACb5tF,KAAKmzE,MAAMwG,EAAezwD,MAAOg2C,EAAWqC,iDAGvC/S,EAAM/7C,KAGf+6E,EAAkBh/B,EAAM/7C,KAG1B,GAAqB,OAAhB26E,EAAQpR,QAAe,EAASoR,EAAM36E,KAEzC,OADAzS,KAAKoa,MAAQ4hE,EAAIgM,UACVhM,EAAIvpE,KAGb,GAAI+6E,EAEF,OADAxtF,KAAKoa,MAAQo0C,EAAMw5B,UACZwF,EAGT,GAAqB,OAAhBH,EAAQrR,QAAe,EAASqR,EAAMQ,OAAQ,MAAM7R,EAAIryE,MAC7D,GAAI6kD,EAAMq/B,OAAQ,MAAMr/B,EAAM7kD,MAC9B,MAAM3J,KAAKmzE,MAAMwG,EAAezwD,MAAOg2C,EAAWoC,mCAGpD,OAAO6S,MAAMqU,iBAAiB3P,EAAqBqU,EAAgBrF,GAGrE,WAAWp1E,GACT,GAAIzS,KAAKqX,MAAM01C,EAAMoB,OAAQ,CAC3B,MAAM5tD,EAASP,KAAK8nF,SAAS,KAC3B,MAAM7D,EAAwBjkF,KAAKoa,MAAM8pE,mBACzClkF,KAAKoa,MAAM8pE,oBAAqB,EAChC,MAAMnE,EAAW//E,KAAKw6E,YAKtB,OAJCuF,EAASM,eAAgB5tE,EAAKktE,WAAa3/E,KAAKogF,uCACjDpgF,KAAKoa,MAAM8pE,mBAAqBD,EAC5BjkF,KAAKumF,sBAAsBvmF,KAAK68E,aAC/B78E,KAAKqX,MAAM01C,EAAMyB,QAAQxuD,KAAK68E,aAC5BkD,IAET,GAAIx/E,EAAOstF,OAAQ,OAAO,KACtBttF,EAAOoJ,QAAO3J,KAAKoa,MAAQ7Z,EAAOynF,WACtCv1E,EAAK+jC,WAAaj2C,EAAOkS,KAAK4tE,eAAiBrgF,KAAKy6E,WAAWl6E,EAAOkS,KAAM,kBAAoB,KAGlG,OAAO0hE,MAAM2Z,WAAWr7E,GAG1B,mBACE,OAAOzS,KAAKqX,MAAM01C,EAAMoB,QAAUgmB,MAAM4Z,mBAG1C,2BAA2Bt7E,EAAMi7B,IACmC,IAA9D1tC,KAAKoa,MAAMquE,0BAA0B7oE,QAAQnN,EAAKyW,OACpDzW,EAAKi7B,OAASA,EAEdymC,MAAM6Z,2BAA2Bv7E,EAAMi7B,GAI3C,YAAYj7B,EAAMw7E,EAAiBC,GACjC,IAAIA,IAAiF,IAA9DluF,KAAKoa,MAAMquE,0BAA0B7oE,QAAQnN,EAAKyW,OAIzE,OAAOirD,MAAMmV,eAAe1zE,WAG9B,mCAAmCu4E,GACjC,OAAOha,MAAMia,mCAAmCD,IAAkE,IAApDnuF,KAAKoa,MAAM8tE,UAAUtoE,QAAQ5f,KAAKoa,MAAM8O,QAGxG,gBAAgB0N,EAAMojD,EAAUC,EAAUyB,GACxC,GAAkB,eAAd9kD,EAAKz5B,MAAuC,UAAdy5B,EAAKhuB,OAAgE,IAA5C5I,KAAKoa,MAAM8tE,UAAUtoE,QAAQo6D,GAAkB,CACxGh6E,KAAK2C,OACL,MAAM8P,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GACxCxnE,EAAK+6B,OAAS5W,EACdnkB,EAAKmD,UAAY5V,KAAKquF,6BAA6BthC,EAAMkB,QAAQ,GACjEr3B,EAAO52B,KAAKy6E,WAAWhoE,EAAM,uBACxB,GAAkB,eAAdmkB,EAAKz5B,MAAuC,UAAdy5B,EAAKhuB,MAAoB5I,KAAKy+E,aAAa,KAAM,CACxF,MAAMrkE,EAAQpa,KAAKoa,MAAMgD,QACnBoxC,EAAQxuD,KAAK8nF,SAASwF,GAASttF,KAAKsuF,kCAAkCtU,EAAUC,IAAaqT,IAASlzE,GAC5G,IAAKo0C,EAAM7kD,QAAU6kD,EAAMm/B,QAAS,OAAOn/B,EAAM/7C,KACjD,MAAMlS,EAASP,KAAK8nF,SAAS,IAAM3T,MAAMoa,gBAAgB33D,EAAMojD,EAAUC,EAAUyB,GAAUthE,GAC7F,GAAI7Z,EAAOkS,OAASlS,EAAOoJ,MAAO,OAAOpJ,EAAOkS,KAEhD,GAAI+7C,EAAM/7C,KAER,OADAzS,KAAKoa,MAAQo0C,EAAMw5B,UACZx5B,EAAM/7C,KAGf,GAAIlS,EAAOkS,KAET,OADAzS,KAAKoa,MAAQ7Z,EAAOynF,UACbznF,EAAOkS,KAGhB,MAAM+7C,EAAM7kD,OAASpJ,EAAOoJ,MAG9B,OAAOwqE,MAAMoa,gBAAgB33D,EAAMojD,EAAUC,EAAUyB,GAGzD,eAAe9kD,EAAMojD,EAAUC,EAAUyB,EAAS8S,GAChD,GAAIxuF,KAAKqX,MAAM01C,EAAMwB,cAAgBvuD,KAAKyuF,sBAAuB,CAG/D,GAFAD,EAAe5S,qBAAsB,EAEjCF,EAEF,OADA8S,EAAe7xF,MAAO,EACfi6B,EAGT52B,KAAK2C,OACL,MAAM8P,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAMxC,OALAxnE,EAAK+6B,OAAS5W,EACdnkB,EAAKi8E,cAAgB1uF,KAAKgjF,sCAC1BhjF,KAAKs9E,OAAOvwB,EAAMiB,QAClBv7C,EAAKmD,UAAY5V,KAAKquF,6BAA6BthC,EAAMkB,QAAQ,GACjEx7C,EAAKyoE,UAAW,EACTl7E,KAAKm7E,qBAAqB1oE,GAAM,GAClC,IAAKipE,GAAW17E,KAAK2uF,oBAAsB3uF,KAAKy+E,aAAa,KAAM,CACxE,MAAMhsE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GACxCxnE,EAAK+6B,OAAS5W,EACd,MAAMr2B,EAASP,KAAK8nF,SAAS,KAC3Br1E,EAAKi8E,cAAgB1uF,KAAK4uF,+CAC1B5uF,KAAKs9E,OAAOvwB,EAAMiB,QAClBv7C,EAAKmD,UAAY5V,KAAKquF,6BAA6BthC,EAAMkB,QAAQ,GAC7DugC,EAAe5S,sBAAqBnpE,EAAKyoE,UAAW,GACjDl7E,KAAKm7E,qBAAqB1oE,EAAM+7E,EAAe5S,uBAGxD,GAAIr7E,EAAOkS,KAET,OADIlS,EAAOoJ,QAAO3J,KAAKoa,MAAQ7Z,EAAOynF,WAC/BznF,EAAOkS,KAIlB,OAAO0hE,MAAMwH,eAAe/kD,EAAMojD,EAAUC,EAAUyB,EAAS8S,GAGjE,kBAAkB/7E,GAChB,IAAIo8E,EAAQ,KAER7uF,KAAK2uF,oBAAsB3uF,KAAKy+E,aAAa,OAC/CoQ,EAAQ7uF,KAAK8nF,SAAS,IAAM9nF,KAAK4uF,gDAAgDn8E,MAGnFA,EAAKi8E,cAAgBG,EACrB1a,MAAM2a,kBAAkBr8E,GAG1B,kCAAkCunE,EAAUC,GAC1C,MAAMxnE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAExC,GADAj6E,KAAK8sF,oBAAoBr6E,GACpBzS,KAAK8tF,WAAWr7E,GACrB,OAAOzS,KAAK+uF,qBAAqBt8E,OAAM5W,GAAW,GAGpD,sBAAsBwuC,GACpB,MAAM1nC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEpD,GAAa,KAATxE,GAAwB,KAAT1nC,GAAe3C,KAAKoa,MAAM40E,eAI3C,OAHAhvF,KAAKoa,MAAM40E,gBAAiB,EAC5BhvF,KAAKoa,MAAMy0B,KAAO,OAClB7uC,KAAKivF,YAIP9a,MAAM+a,sBAAsB7kD,GAG9B,mBAAmBA,GACjB,MAAM1nC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEvC,MAATxE,GAAyB,MAAT1nC,EAKpBwxE,MAAMgb,mBAAmB9kD,GAJvBrqC,KAAKyqF,SAAS19B,EAAMgB,UAAW,GAOnC,cAAcqhC,EAAMC,GAClB,MAAMC,EAAWnb,MAAMob,cAAcH,EAAMC,GAM3C,OAJIrvF,KAAKoa,MAAM40E,gBACbhvF,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKqwB,EAAWwC,yBAGjC4tB,EAGT,mBACE,GAAItvF,KAAKg3E,UAAU,iBAAmBh3E,KAAKwvF,kBAQzC,OAPIxvF,KAAKoa,MAAM40E,gBACbhvF,KAAK68E,WAAW,KAAM3d,EAAWyB,mBAGnC3gE,KAAKyvF,2BACLzvF,KAAKoa,MAAMy0B,KAAO7uC,KAAKwvF,uBACvBxvF,KAAKoa,MAAM40E,gBAAiB,GAI9B,GAAIhvF,KAAKoa,MAAM40E,eAAf,CACE,MAAMlpE,EAAM9lB,KAAKm+C,MAAMv+B,QAAQ,MAAO5f,KAAKoa,MAAMy0B,KAAO,GAExD,IAAa,IAAT/oB,EACF,MAAM9lB,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAM,EAAGikB,EAAc0I,qBAGrDx7D,KAAKoa,MAAMy0B,IAAM/oB,EAAM,OAIzBquD,MAAMub,mBAGR,kBACE,MAAM,IACJ7gD,GACE7uC,KAAKoa,MACT,IAAIu1E,EAA4B,EAEhC,KAAO,CAAC,GAAI,GAAG7zF,SAASkE,KAAKm+C,MAAMjP,WAAWL,EAAM8gD,KAClDA,IAGF,MAAMt/D,EAAMrwB,KAAKm+C,MAAMjP,WAAWygD,EAA4B9gD,GACxD+gD,EAAM5vF,KAAKm+C,MAAMjP,WAAWygD,EAA4B9gD,EAAM,GAEpE,OAAY,KAARxe,GAAsB,KAARu/D,EACTD,EAA4B,EAG2D,iBAA5F3vF,KAAKm+C,MAAM31C,MAAMmnF,EAA4B9gD,EAAK8gD,EAA4B9gD,EAAM,IAC/E8gD,EAA4B,GAGzB,KAARt/D,GAAsB,KAARu/D,GACTD,EAMX,2BAGE,IAAa,IAFD3vF,KAAKm+C,MAAMv+B,QAAQ,KAAM5f,KAAKoa,MAAMy0B,KAG9C,MAAM7uC,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAc0I,qBAInD,yCAAyC3sB,GAAK,SAC5CghD,EAAQ,WACRC,IAEA9vF,KAAKmzE,MAAMtkC,EAAKqwB,EAAWO,gCAAiCqwB,EAAYD,GAG1E,+BAA+BhhD,GAAK,SAClCghD,EAAQ,WACRC,IAEA,MAAM9N,EAAa8N,EAAW,GAAGx2D,cAAgBw2D,EAAWtnF,MAAM,GAClExI,KAAKmzE,MAAMtkC,EAAKqwB,EAAWe,sBAAuB6vB,EAAY9N,EAAY6N,GAG5E,iCAAiChhD,GAAK,SACpCghD,EAAQ,WACRC,IAEA9vF,KAAKmzE,MAAMtkC,EAAKqwB,EAAWQ,wBAAyBowB,EAAYD,GAGlE,sCAAsChhD,GAAK,SACzCghD,IAEA7vF,KAAKmzE,MAAMtkC,EAAKqwB,EAAWS,6BAA8BkwB,GAG3D,iCAAiChhD,GAAK,SACpCghD,EAAQ,aACRE,IAEA,OAAO/vF,KAAKmzE,MAAMtkC,EAAsB,OAAjBkhD,EAAwB7wB,EAAWW,uCAAyCX,EAAWU,wBAAyBiwB,EAAUE,GAGnJ,sCAAsClhD,GAAK,SACzCghD,EAAQ,aACRG,EAAY,WACZF,IAEA,IAAIG,EAAU,KAEd,OAAQD,GACN,IAAK,UACL,IAAK,SACL,IAAK,SACHC,EAAU/wB,EAAWY,wCACrB,MAEF,IAAK,SACHmwB,EAAU/wB,EAAWa,uCACrB,MAEF,QACEkwB,EAAU/wB,EAAWc,wCAGzB,OAAOhgE,KAAKmzE,MAAMtkC,EAAKohD,EAASJ,EAAUC,EAAYE,GAGxD,wCAAwCnhD,GAAK,SAC3CghD,EAAQ,WACRC,IAEA9vF,KAAKmzE,MAAMtkC,EAAKqwB,EAAWgB,+BAAgC2vB,EAAUC,GAGvE,mDAAmDjhD,GAAK,SACtDghD,IAEA7vF,KAAKmzE,MAAMtkC,EAAKqwB,EAAWiB,0CAA2C0vB,GAGxE,qBACE,MAAM7V,EAAWh6E,KAAKoa,MAAM8O,MAEtBgnE,EAAY,IAAMlwF,KAAKqX,MAAM01C,EAAMpS,QAAU36C,KAAKqX,MAAM01C,EAAMe,QAEpE,OAAQ9tD,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMC,IACT,CACE,MAAMmjC,EAAUnwF,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,kBAEpD,OAAI2wF,IACK,CACL/yF,KAAM,SACN0xC,IAAKshD,EAAQjnE,MACb3pB,MAAO4wF,GAIJ,CACLhzF,KAAM,UACN0xC,IAAKmrC,GAIX,KAAKjtB,EAAMK,OACT,CACE,MAAM+iC,EAAUnwF,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,iBAEpD,OAAI2wF,IACK,CACL/yF,KAAM,SACN0xC,IAAKshD,EAAQjnE,MACb3pB,MAAO4wF,GAIJ,CACLhzF,KAAM,UACN0xC,IAAKmrC,GAIX,KAAKjtB,EAAM+E,MACX,KAAK/E,EAAMgF,OACT,CACE,MAAMo+B,EAAUnwF,KAAKowF,sBAErB,OAAIF,IACK,CACL/yF,KAAM,UACN0xC,IAAKshD,EAAQjnE,MACb3pB,MAAO4wF,GAIJ,CACLhzF,KAAM,UACN0xC,IAAKmrC,GAIX,QACE,MAAO,CACL78E,KAAM,UACN0xC,IAAKmrC,IAKb,oBACE,MAAMnrC,EAAM7uC,KAAKoa,MAAM8O,MAMvB,MAAO,CACL7sB,GANS2D,KAAK8/E,iBAAgB,GAO9BuQ,KANWrwF,KAAK+8E,IAAIhwB,EAAMgC,IAAM/uD,KAAKswF,qBAAuB,CAC5DnzF,KAAM,OACN0xC,QAQJ,kCAAkCA,EAAKxsB,EAASkf,GAC9C,MAAM,aACJyuD,GACE3tE,EAEiB,OAAjB2tE,GAIAA,IAAiBzuD,GACnBvhC,KAAKuwF,sCAAsC1hD,EAAKxsB,GAIpD,iBAAgB,SACdwtE,EAAQ,aACRG,IAEA,MAAMQ,EAAY,IAAI9yF,IAChB+yF,EAAU,CACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,IAGpB,MAAQ7wF,KAAKqX,MAAM01C,EAAMe,SAAS,CAChC,MAAMgjC,EAAa9wF,KAAKw6E,aAClB,GACJn+E,EAAE,KACFg0F,GACErwF,KAAK+wF,oBACHjB,EAAazzF,EAAGuM,KAEtB,GAAmB,KAAfknF,EACF,SAGE,SAASjwE,KAAKiwE,IAChB9vF,KAAKgxF,+BAA+B30F,EAAG6sB,MAAO,CAC5C2mE,WACAC,eAIAU,EAAU7yF,IAAImyF,IAChB9vF,KAAKixF,iCAAiC50F,EAAG6sB,MAAO,CAC9C2mE,WACAC,eAIJU,EAAU5yF,IAAIkyF,GACd,MAAMztE,EAAU,CACdwtE,WACAG,eACAF,cAIF,OAFAgB,EAAWz0F,GAAKA,EAERg0F,EAAKlzF,MACX,IAAK,UAED6C,KAAKkxF,kCAAkCb,EAAKxhD,IAAKxsB,EAAS,WAC1DyuE,EAAWT,KAAOA,EAAK9wF,MACvBkxF,EAAQC,eAAe10F,KAAKgE,KAAKy6E,WAAWqW,EAAY,sBACxD,MAGJ,IAAK,SAED9wF,KAAKkxF,kCAAkCb,EAAKxhD,IAAKxsB,EAAS,UAC1DyuE,EAAWT,KAAOA,EAAK9wF,MACvBkxF,EAAQE,cAAc30F,KAAKgE,KAAKy6E,WAAWqW,EAAY,qBACvD,MAGJ,IAAK,SAED9wF,KAAKkxF,kCAAkCb,EAAKxhD,IAAKxsB,EAAS,UAC1DyuE,EAAWT,KAAOA,EAAK9wF,MACvBkxF,EAAQG,cAAc50F,KAAKgE,KAAKy6E,WAAWqW,EAAY,qBACvD,MAGJ,IAAK,UAED,MAAM9wF,KAAKuwF,sCAAsCF,EAAKxhD,IAAKxsB,GAG/D,IAAK,OAED,OAAQ2tE,GACN,IAAK,UACHhwF,KAAKmxF,yCAAyCd,EAAKxhD,IAAKxsB,GACxD,MAEF,IAAK,SACHriB,KAAKoxF,wCAAwCf,EAAKxhD,IAAKxsB,GACvD,MAEF,QACEouE,EAAQI,iBAAiB70F,KAAKgE,KAAKy6E,WAAWqW,EAAY,yBAK/D9wF,KAAKqX,MAAM01C,EAAMe,SACpB9tD,KAAKs9E,OAAOvwB,EAAMpS,OAItB,OAAO81C,EAGT,sBAAsBY,EAAoBR,GAAkB,SAC1DhB,IAEA,GAAkC,IAA9BwB,EAAmBj1F,OACrB,OAAOy0F,EACF,GAAgC,IAA5BA,EAAiBz0F,OAC1B,OAAOi1F,EACF,GAAIR,EAAiBz0F,OAASi1F,EAAmBj1F,OAAQ,CAC9D,IAAK,IAAIk1F,EAAK,EAAGA,EAAKD,EAAmBj1F,OAAQk1F,IAAM,CACrD,MAAMhH,EAAS+G,EAAmBC,GAClCtxF,KAAKuxF,mDAAmDjH,EAAOphE,MAAO,CACpE2mE,aAIJ,OAAOgB,EAEP,IAAK,IAAIW,EAAM,EAAGA,EAAMX,EAAiBz0F,OAAQo1F,IAAO,CACtD,MAAMlH,EAASuG,EAAiBW,GAChCxxF,KAAKuxF,mDAAmDjH,EAAOphE,MAAO,CACpE2mE,aAIJ,OAAOwB,EAIX,2BAA0B,SACxBxB,IAEA,GAAI7vF,KAAK4gF,cAAc,MAAO,CAC5B,IAAK5gF,KAAKqX,MAAM01C,EAAMnkD,MACpB,MAAM5I,KAAKyxF,iCAAiCzxF,KAAKoa,MAAM8O,MAAO,CAC5D2mE,WACAE,aAAc,OAIlB,MAAM,MACJxwF,GACES,KAAKoa,MAUT,OATApa,KAAK2C,OAES,YAAVpD,GAAiC,WAAVA,GAAgC,WAAVA,GAAgC,WAAVA,GACrES,KAAKyxF,iCAAiCzxF,KAAKoa,MAAM8O,MAAO,CACtD2mE,WACAE,aAAcxwF,IAIXA,EAGT,OAAO,KAGT,aAAakT,GAAM,SACjBo9E,EAAQ,QACR6B,IAEA,MAAM1B,EAAehwF,KAAK2xF,0BAA0B,CAClD9B,aAEF7vF,KAAKs9E,OAAOvwB,EAAMY,QAClB,MAAM8iC,EAAUzwF,KAAK4xF,gBAAgB,CACnC/B,WACAG,iBAGF,OAAQA,GACN,IAAK,UAIH,OAHAv9E,EAAKu9E,cAAe,EACpBv9E,EAAKg+E,QAAUA,EAAQC,eACvB1wF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,mBAE/B,IAAK,SAIH,OAHAA,EAAKu9E,cAAe,EACpBv9E,EAAKg+E,QAAUA,EAAQE,cACvB3wF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,kBAE/B,IAAK,SAMH,OALAA,EAAKu9E,cAAe,EACpBv9E,EAAKg+E,QAAUzwF,KAAK6xF,sBAAsBpB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFhB,aAEF7vF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,kBAE/B,IAAK,SAGH,OAFAA,EAAKg+E,QAAUA,EAAQI,iBACvB7wF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,kBAE/B,QACE,CACE,MAAMo8D,EAAQ,KACZp8D,EAAKg+E,QAAU,GACfzwF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,mBAG/BA,EAAKu9E,cAAe,EACpB,MAAM8B,EAAWrB,EAAQC,eAAet0F,OAClC21F,EAAUtB,EAAQE,cAAcv0F,OAChC41F,EAAUvB,EAAQG,cAAcx0F,OAChC61F,EAAexB,EAAQI,iBAAiBz0F,OAE9C,GAAK01F,GAAaC,GAAYC,GAAYC,EAEnC,IAAKH,GAAaC,EAMlB,KAAKA,IAAYC,GAAWF,GAAYG,EAAc,CAC3D,IAAK,IAAIC,EAAM,EAAGC,EAAwB1B,EAAQI,iBAAkBqB,EAAMC,EAAsB/1F,OAAQ81F,IAAO,CAC7G,MAAM5H,EAAS6H,EAAsBD,GACrClyF,KAAKmxF,yCAAyC7G,EAAOphE,MAAO,CAC1D2mE,WACAC,WAAYxF,EAAOjuF,GAAGuM,OAM1B,OAFA6J,EAAKg+E,QAAUA,EAAQC,eACvB1wF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,mBACxB,IAAKq/E,IAAaE,GAAWD,GAAWE,EAAc,CAC3D,IAAK,IAAIG,EAAM,EAAGC,EAAyB5B,EAAQI,iBAAkBuB,EAAMC,EAAuBj2F,OAAQg2F,IAAO,CAC/G,MAAM9H,EAAS+H,EAAuBD,GACtCpyF,KAAKoxF,wCAAwC9G,EAAOphE,MAAO,CACzD2mE,WACAC,WAAYxF,EAAOjuF,GAAGuM,OAM1B,OAFA6J,EAAKg+E,QAAUA,EAAQE,cACvB3wF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,kBAK7B,OAHAzS,KAAKsyF,sCAAsCZ,EAAS,CAClD7B,aAEKhhB,IA7BP,OAJAp8D,EAAKg+E,QAAUzwF,KAAK6xF,sBAAsBpB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFhB,aAEF7vF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,kBAN7B,OAAOo8D,MAyCjB,yBAAyBp8D,GACvB,MAAMpW,EAAK2D,KAAK8/E,kBAMhB,OALArtE,EAAKpW,GAAKA,EACVoW,EAAKgxB,KAAOzjC,KAAKuyF,aAAavyF,KAAKw6E,YAAa,CAC9CqV,SAAUxzF,EAAGuM,KACb8oF,QAASr1F,EAAG6sB,QAEPlpB,KAAKy6E,WAAWhoE,EAAM,mBAG/B,cAAc0qD,GACRn9D,KAAKqX,MAAM01C,EAAMnkD,OAA8B,OAArB5I,KAAKoa,MAAM7a,OAAkB49D,IAAapQ,EAAMnkD,MAA6E,cAArE5I,KAAKm+C,MAAM31C,MAAMxI,KAAKoa,MAAM0mE,aAAc9gF,KAAKoa,MAAM+iE,YACzIn9E,KAAKoa,MAAM4iD,aAAc,EAEzBmX,MAAMznB,cAAcyQ,GAIxB,sBACE,MAAMx6D,EAAO3C,KAAKwyF,iBAElB,GAAoC,KAAhCxyF,KAAKm+C,MAAMjP,WAAWvsC,GAAc,CACtC,MAAM8vF,EAAYzyF,KAAKm+C,MAAMjP,WAAWvsC,EAAO,GAC/C,OAAqB,KAAd8vF,GAAkC,KAAdA,EAG7B,OAAO,EAGT,8BAA8BhgF,GAC5B,MAAqB,uBAAdA,EAAKtV,KAAgCsV,EAAKwlE,WAAaxlE,IA6/GlEigF,WAx6EgBlb,GAAc,cAAcA,EAC5C,kBACE,OAAOhD,GAGT,iBACE,OAAOx0E,KAAKqX,MAAM01C,EAAMnkD,MAG1B,+BAEE,OADA5I,KAAK2C,SACG3C,KAAK09D,yBAA4B19D,KAAKqX,MAAM01C,EAAMiB,SAAYhuD,KAAKqX,MAAM01C,EAAMkB,SAAYjuD,KAAKqX,MAAM01C,EAAMoB,QAAWnuD,KAAKqX,MAAM01C,EAAMgC,KAAQ/uD,KAAKqX,MAAM01C,EAAMuB,WAActuD,KAAKqX,MAAM01C,EAAMkC,OAG1M,gBAAgB0jC,GACd,IAAK3yF,KAAKqX,MAAM01C,EAAMnkD,MACpB,OAGF,MAAMi5C,EAAW7hD,KAAKoa,MAAM7a,MAE5B,OAA4C,IAAxCozF,EAAiB/yE,QAAQiiC,IAAoB7hD,KAAK4yF,WAAW5yF,KAAK6yF,6BAA6B9nF,KAAK/K,OAC/F6hD,OADT,EAOF,iBAAiBixC,EAAUH,GACzB,OAAS,CACP,MAAM3Y,EAAWh6E,KAAKoa,MAAM8O,MACtB24B,EAAW7hD,KAAK+yF,gBAAgBJ,GACtC,IAAK9wC,EAAU,MAEXxjD,OAAO4qD,eAAexnD,KAAKqxF,EAAUjxC,IACvC7hD,KAAKmzE,MAAM6G,EAAU5E,GAASM,kBAAmB7zB,GAGnDixC,EAASjxC,IAAY,GAIzB,mBAAmBoa,GACjB,OAAQA,GACN,IAAK,cACL,IAAK,cACH,OAAOj8D,KAAKqX,MAAM01C,EAAMe,QAE1B,IAAK,wBACH,OAAO9tD,KAAKqX,MAAM01C,EAAMY,QAE1B,IAAK,oBACH,OAAO3tD,KAAKqX,MAAM01C,EAAMU,UAE1B,IAAK,4BACH,OAAOztD,KAAKy+E,aAAa,KAG7B,MAAM,IAAIlkD,MAAM,eAGlB,YAAY0hC,EAAMppB,GAChB,MAAMtyC,EAAS,GAEf,MAAQP,KAAKgzF,mBAAmB/2B,IAC9B17D,EAAOvE,KAAK62C,KAGd,OAAOtyC,EAGT,qBAAqB07D,EAAMppB,GACzB,OAAOoiC,GAAQj1E,KAAKizF,2BAA2Bh3B,EAAMppB,GAAc,IAGrE,2BAA2BopB,EAAMppB,EAAcqgD,GAC7C,MAAM3yF,EAAS,GAEf,MACMP,KAAKgzF,mBAAmB/2B,IADrB,CAKP,MAAMzoB,EAAUX,IAEhB,GAAe,MAAXW,EACF,OAKF,GAFAjzC,EAAOvE,KAAKw3C,IAERxzC,KAAK+8E,IAAIhwB,EAAMpS,OAAnB,CAIA,GAAI36C,KAAKgzF,mBAAmB/2B,GAC1B,MAOF,YAJIi3B,GACFlzF,KAAKs9E,OAAOvwB,EAAMpS,SAMtB,OAAOp6C,EAGT,qBAAqB07D,EAAMppB,EAAcsgD,EAASC,GAC3CA,IACCD,EACFnzF,KAAKs9E,OAAOvwB,EAAMO,UAElBttD,KAAKgkF,iBAAiB,MAI1B,MAAMzjF,EAASP,KAAKqzF,qBAAqBp3B,EAAMppB,GAQ/C,OANIsgD,EACFnzF,KAAKs9E,OAAOvwB,EAAMU,UAElBztD,KAAKgkF,iBAAiB,KAGjBzjF,EAGT,oBACE,MAAMkS,EAAOzS,KAAKw6E,YAmBlB,OAlBAx6E,KAAKs9E,OAAOvwB,EAAM6E,SAClB5xD,KAAKs9E,OAAOvwB,EAAMiB,QAEbhuD,KAAKqX,MAAM01C,EAAMK,SACpBptD,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAOksD,GAASyB,+BAGxCpkE,EAAK+qE,SAAWx9E,KAAK+5E,gBACrB/5E,KAAKs9E,OAAOvwB,EAAMkB,QAEdjuD,KAAK+8E,IAAIhwB,EAAMsB,OACjB57C,EAAK6gF,UAAYtzF,KAAKuzF,mBAAkB,IAGtCvzF,KAAKy+E,aAAa,OACpBhsE,EAAKknE,eAAiB35E,KAAKwzF,wBAGtBxzF,KAAKy6E,WAAWhoE,EAAM,gBAG/B,kBAAkBghF,GAChB,IAAI/W,EAAS18E,KAAK8/E,kBAElB,KAAO9/E,KAAK+8E,IAAIhwB,EAAMsB,MAAM,CAC1B,MAAM57C,EAAOzS,KAAK+7E,gBAAgBW,GAClCjqE,EAAK4xB,KAAOq4C,EACZjqE,EAAKs1B,MAAQ/nC,KAAK8/E,gBAAgB2T,GAClC/W,EAAS18E,KAAKy6E,WAAWhoE,EAAM,mBAGjC,OAAOiqE,EAGT,uBACE,MAAMjqE,EAAOzS,KAAKw6E,YAOlB,OANA/nE,EAAKihF,SAAW1zF,KAAKuzF,mBAAkB,IAElCvzF,KAAK09D,yBAA2B19D,KAAKy+E,aAAa,OACrDhsE,EAAKknE,eAAiB35E,KAAKwzF,wBAGtBxzF,KAAKy6E,WAAWhoE,EAAM,mBAG/B,yBAAyBkhF,GACvB3zF,KAAK2C,OACL,MAAM8P,EAAOzS,KAAK+7E,gBAAgB4X,GAGlC,OAFAlhF,EAAKmhF,cAAgBD,EACrBlhF,EAAK4tE,eAAiBrgF,KAAK6zF,uBAAsB,GAC1C7zF,KAAKy6E,WAAWhoE,EAAM,mBAG/B,sBACE,MAAMA,EAAOzS,KAAKw6E,YAElB,OADAx6E,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,cAG/B,mBACE,MAAMA,EAAOzS,KAAKw6E,YASlB,OARAx6E,KAAKs9E,OAAOvwB,EAAMmF,SAEdlyD,KAAKqX,MAAM01C,EAAM6E,SACnBn/C,EAAKqhF,SAAW9zF,KAAK+zF,oBAErBthF,EAAKqhF,SAAW9zF,KAAKuzF,mBAAkB,GAGlCvzF,KAAKy6E,WAAWhoE,EAAM,eAG/B,uBACE,MAAMA,EAAOzS,KAAKw6E,YAIlB,OAHA/nE,EAAK7J,KAAO5I,KAAKg0F,oBAAoBvhF,EAAKyW,OAC1CzW,EAAKwhF,WAAaj0F,KAAKk0F,mBAAmBnnC,EAAM2E,UAChDj/C,EAAK6D,QAAUtW,KAAKk0F,mBAAmBnnC,EAAMgC,IACtC/uD,KAAKy6E,WAAWhoE,EAAM,mBAG/B,2BACE,GAAIzS,KAAKy+E,aAAa,KACpB,OAAOz+E,KAAKm0F,wBAIhB,wBACE,MAAM1hF,EAAOzS,KAAKw6E,YAclB,OAZIx6E,KAAKy+E,aAAa,MAAQz+E,KAAKqX,MAAM01C,EAAM4lB,aAC7C3yE,KAAK2C,OAEL3C,KAAK68E,aAGPpqE,EAAKi7B,OAAS1tC,KAAKo0F,qBAAqB,4BAA6Bp0F,KAAKq0F,qBAAqBtpF,KAAK/K,OAAO,GAAO,GAEvF,IAAvByS,EAAKi7B,OAAOtxC,QACd4D,KAAKmzE,MAAM1gE,EAAKyW,MAAOksD,GAASS,qBAG3B71E,KAAKy6E,WAAWhoE,EAAM,8BAG/B,gCACE,OAAIzS,KAAKqkF,YAAYlnF,OAAS4vD,EAAMoE,QAClCnxD,KAAK2C,OACE3C,KAAKs0F,wBAGP,KAGT,gBAAgBC,EAAaC,GAC3B,MAAMC,EAAsBF,IAAgBxnC,EAAMyB,MAClDgmC,EAAU7a,eAAiB35E,KAAK00F,2BAChC10F,KAAKs9E,OAAOvwB,EAAMiB,QAClBwmC,EAAUG,WAAa30F,KAAK40F,kCAExBH,GAEOz0F,KAAKqX,MAAMk9E,MADpBC,EAAUnU,eAAiBrgF,KAAK60F,qCAAqCN,IAMzE,iCACE,OAAOv0F,KAAK80F,iBAAiB/nC,EAAMkB,OAAQ,IAAI1vD,IAAImhB,IAC5B,eAAjBA,EAAQviB,MAA0C,gBAAjBuiB,EAAQviB,MAA2C,kBAAjBuiB,EAAQviB,MAA6C,iBAAjBuiB,EAAQviB,MACjH6C,KAAKmzE,MAAMzzD,EAAQwJ,MAAOksD,GAAS2B,kCAAmCr3D,EAAQviB,MAGzEuiB,IAIX,6BACO1f,KAAK+8E,IAAIhwB,EAAMpS,QAClB36C,KAAKugF,YAIT,uBAAuBtkB,EAAMxpD,GAG3B,OAFAzS,KAAK+0F,gBAAgBhoC,EAAMoB,MAAO17C,GAClCzS,KAAKg1F,6BACEh1F,KAAKy6E,WAAWhoE,EAAMwpD,GAG/B,kCAEE,OADAj8D,KAAK2C,OACE3C,KAAK+8E,IAAIhwB,EAAMnkD,OAAS5I,KAAKqX,MAAM01C,EAAMoB,OAGlD,yBAAyB17C,GACvB,IAAMzS,KAAKqX,MAAM01C,EAAMO,YAAattD,KAAKi1F,YAAYj1F,KAAKk1F,gCAAgCnqF,KAAK/K,OAC7F,OAGFA,KAAKs9E,OAAOvwB,EAAMO,UAClB,MAAMjxD,EAAK2D,KAAK8/E,kBAChBzjF,EAAGgkF,eAAiBrgF,KAAK6zF,wBACzB7zF,KAAKsgF,iBAAiBjkF,GACtB2D,KAAKs9E,OAAOvwB,EAAMU,UAClBh7C,EAAKkiF,WAAa,CAACt4F,GACnB,MAAMc,EAAO6C,KAAKm1F,2BAGlB,OAFIh4F,IAAMsV,EAAK4tE,eAAiBljF,GAChC6C,KAAKg1F,6BACEh1F,KAAKy6E,WAAWhoE,EAAM,oBAG/B,iCAAiCA,EAAMjT,GACjCQ,KAAK+8E,IAAIhwB,EAAMuB,YAAW77C,EAAKyoE,UAAW,GAC9C,MAAMka,EAAU3iF,EAEhB,GAAKjT,IAAaQ,KAAKqX,MAAM01C,EAAMiB,UAAWhuD,KAAKy+E,aAAa,KAKzD,CACL,MAAMpM,EAAW+iB,EACb51F,IAAU6yE,EAAS7yE,UAAW,GAClC,MAAMrC,EAAO6C,KAAKm1F,2BAGlB,OAFIh4F,IAAMk1E,EAASgO,eAAiBljF,GACpC6C,KAAKg1F,6BACEh1F,KAAKy6E,WAAWpI,EAAU,uBAXoC,CACrE,MAAM3yE,EAAS01F,EAGf,OAFAp1F,KAAK+0F,gBAAgBhoC,EAAMoB,MAAOzuD,GAClCM,KAAKg1F,6BACEh1F,KAAKy6E,WAAW/6E,EAAQ,sBAWnC,oBACE,MAAM+S,EAAOzS,KAAKw6E,YAElB,GAAIx6E,KAAKqX,MAAM01C,EAAMiB,SAAWhuD,KAAKy+E,aAAa,KAChD,OAAOz+E,KAAKq1F,uBAAuB,6BAA8B5iF,GAGnE,GAAIzS,KAAKqX,MAAM01C,EAAMuE,MAAO,CAC1B,MAAMj1D,EAAK2D,KAAKw6E,YAGhB,OAFAx6E,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMiB,SAAWhuD,KAAKy+E,aAAa,KACzCz+E,KAAKq1F,uBAAuB,kCAAmC5iF,IAEtEA,EAAKrV,IAAM4C,KAAKsmF,iBAAiBjqF,EAAI,OAC9B2D,KAAKs1F,iCAAiC7iF,GAAM,IAIvD,MAAMjT,IAAaQ,KAAK+yF,gBAAgB,CAAC,aACnCwC,EAAMv1F,KAAKw1F,yBAAyB/iF,GAE1C,OAAI8iF,GACE/1F,IAAUiT,EAAKjT,UAAW,GACvB+1F,IAGTv1F,KAAK4rF,kBAAkBn5E,GAAM,GACtBzS,KAAKs1F,iCAAiC7iF,EAAMjT,IAGrD,qBACE,MAAMiT,EAAOzS,KAAKw6E,YAElB,OADA/nE,EAAKg+E,QAAUzwF,KAAKy1F,2BACbz1F,KAAKy6E,WAAWhoE,EAAM,iBAG/B,2BACEzS,KAAKs9E,OAAOvwB,EAAMY,QAClB,MAAM8iC,EAAUzwF,KAAK01F,YAAY,cAAe11F,KAAK21F,kBAAkB5qF,KAAK/K,OAE5E,OADAA,KAAKs9E,OAAOvwB,EAAMe,QACX2iC,EAGT,wBAGE,OAFAzwF,KAAK2C,OAED3C,KAAK+8E,IAAIhwB,EAAM8C,SACV7vD,KAAKghF,aAAa,aAGvBhhF,KAAKghF,aAAa,aACpBhhF,KAAK2C,SAGF3C,KAAKqX,MAAM01C,EAAMO,YAItBttD,KAAK2C,SAEA3C,KAAK41F,mBAIV51F,KAAK2C,OACE3C,KAAKqX,MAAM01C,EAAMiF,QAG1B,6BACE,MAAMv/C,EAAOzS,KAAKw6E,YAGlB,OAFA/nE,EAAK7J,KAAO5I,KAAKg0F,oBAAoBvhF,EAAKyW,OAC1CzW,EAAKwhF,WAAaj0F,KAAK61F,sBAAsB9oC,EAAMiF,KAC5ChyD,KAAKy6E,WAAWhoE,EAAM,mBAG/B,oBACE,MAAMA,EAAOzS,KAAKw6E,YA2BlB,OA1BAx6E,KAAKs9E,OAAOvwB,EAAMY,QAEd3tD,KAAKqX,MAAM01C,EAAM8C,UACnBp9C,EAAKjT,SAAWQ,KAAKoa,MAAM7a,MAC3BS,KAAK2C,OACL3C,KAAK0/E,iBAAiB,aACb1/E,KAAK4gF,cAAc,cAC5BnuE,EAAKjT,UAAW,GAGlBQ,KAAKs9E,OAAOvwB,EAAMO,UAClB76C,EAAKqxE,cAAgB9jF,KAAK81F,6BAC1BrjF,EAAKsjF,SAAW/1F,KAAK4gF,cAAc,MAAQ5gF,KAAKg2F,cAAgB,KAChEh2F,KAAKs9E,OAAOvwB,EAAMU,UAEdztD,KAAKqX,MAAM01C,EAAM8C,UACnBp9C,EAAKyoE,SAAWl7E,KAAKoa,MAAM7a,MAC3BS,KAAK2C,OACL3C,KAAKs9E,OAAOvwB,EAAMuB,WACTtuD,KAAK+8E,IAAIhwB,EAAMuB,YACxB77C,EAAKyoE,UAAW,GAGlBzoE,EAAK4tE,eAAiBrgF,KAAKi2F,iBAC3Bj2F,KAAKugF,YACLvgF,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,gBAG/B,mBACE,MAAMA,EAAOzS,KAAKw6E,YAClB/nE,EAAKyjF,aAAel2F,KAAKo0F,qBAAqB,oBAAqBp0F,KAAKm2F,wBAAwBprF,KAAK/K,OAAO,GAAM,GAClH,IAAIo2F,GAAsB,EACtBC,EAAkB,KA0BtB,OAzBA5jF,EAAKyjF,aAAa/3F,QAAQm4F,IACxB,IAAIC,EAEJ,IAAI,KACFp5F,GACEm5F,GAEAF,GAAgC,eAATj5F,GAAkC,mBAATA,GAAwC,uBAATA,GAAiCm5F,EAAYpb,UAC9Hl7E,KAAKmzE,MAAMmjB,EAAYptE,MAAOksD,GAASgB,4BAGzCggB,EAAsBA,GAAgC,uBAATj5F,GAAiCm5F,EAAYpb,UAAqB,mBAAT/9E,EAEzF,eAATA,IAEFA,GADAm5F,EAAcA,EAAYjW,gBACPljF,MAGrB,MAAMq5F,EAAqB,uBAATr5F,EAClBk5F,EAA0D,OAAvCE,EAAmBF,GAA2BE,EAAmBC,EAEhFH,IAAoBG,GACtBx2F,KAAKmzE,MAAMmjB,EAAYptE,MAAOksD,GAASe,oCAGpCn2E,KAAKy6E,WAAWhoE,EAAM,eAG/B,0BACE,MACEyW,MAAO8wD,EAAQ,SACfC,GACEj6E,KAAKoa,MACH+lE,EAAOngF,KAAK+8E,IAAIhwB,EAAM0B,UAC5B,IAAItxD,EAAO6C,KAAKg2F,cAChB,MAAM9a,EAAWl7E,KAAK+8E,IAAIhwB,EAAMuB,UAGhC,GAFgBtuD,KAAK+8E,IAAIhwB,EAAMoB,OAElB,CACX,MAAMsoC,EAAcz2F,KAAK+7E,gBAAgB5+E,GACzCs5F,EAAYvb,SAAWA,EAEL,oBAAd/9E,EAAKA,MAA+BA,EAAKw8E,gBAAyC,eAAvBx8E,EAAKu2F,SAASv2F,MAG3E6C,KAAKmzE,MAAMh2E,EAAK+rB,MAAOksD,GAASc,yBAChCugB,EAAYxqC,MAAQ9uD,GAHpBs5F,EAAYxqC,MAAQ9uD,EAAKu2F,SAM3B+C,EAAYjQ,YAAcxmF,KAAKg2F,cAC/B74F,EAAO6C,KAAKy6E,WAAWgc,EAAa,2BAC/B,GAAIvb,EAAU,CACnB,MAAMwb,EAAmB12F,KAAK+7E,gBAAgB5+E,GAC9Cu5F,EAAiBrW,eAAiBljF,EAClCA,EAAO6C,KAAKy6E,WAAWic,EAAkB,kBAG3C,GAAIvW,EAAM,CACR,MAAMwW,EAAW32F,KAAKg4E,YAAYgC,EAAUC,GAC5C0c,EAAStW,eAAiBljF,EAC1BA,EAAO6C,KAAKy6E,WAAWkc,EAAU,cAGnC,OAAOx5F,EAGT,2BACE,MAAMsV,EAAOzS,KAAKw6E,YAIlB,OAHAx6E,KAAKs9E,OAAOvwB,EAAMiB,QAClBv7C,EAAK4tE,eAAiBrgF,KAAKg2F,cAC3Bh2F,KAAKs9E,OAAOvwB,EAAMkB,QACXjuD,KAAKy6E,WAAWhoE,EAAM,uBAG/B,iCAAiCtV,GAC/B,MAAMsV,EAAOzS,KAAKw6E,YAOlB,MALa,sBAATr9E,GACF6C,KAAKs9E,OAAOvwB,EAAMuE,MAGpBtxD,KAAK+0F,gBAAgBhoC,EAAMyB,MAAO/7C,GAC3BzS,KAAKy6E,WAAWhoE,EAAMtV,GAG/B,yBACE,MAAMsV,EAAOzS,KAAKw6E,YAgBlB,OAdA/nE,EAAK09E,QAAU,MACb,OAAQnwF,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMC,IACX,KAAKD,EAAME,OACX,KAAKF,EAAMK,OACX,KAAKL,EAAM+E,MACX,KAAK/E,EAAMgF,OACT,OAAO/xD,KAAK+5E,gBAEd,QACE,MAAM/5E,KAAK68E,eAVF,GAcR78E,KAAKy6E,WAAWhoE,EAAM,iBAG/B,6BACE,MAAMA,EAAOzS,KAAKw6E,YAElB,OADA/nE,EAAK09E,QAAUnwF,KAAK42F,eAAc,GAC3B52F,KAAKy6E,WAAWhoE,EAAM,iBAG/B,4BACE,OAAIzS,KAAKoa,MAAMilE,OAAer/E,KAAKg2F,cAC5B7hB,MAAM0iB,4BAGf,qCACE,MAAMC,EAAc92F,KAAK+2F,sBAEzB,OAAI/2F,KAAKghF,aAAa,QAAUhhF,KAAK09D,wBAC5B19D,KAAKg3F,yBAAyBF,GAE9BA,EAIX,sBACE,OAAQ92F,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMnkD,KACX,KAAKmkD,EAAMoF,MACX,KAAKpF,EAAM8E,MACT,CACE,MAAM10D,EAAO6C,KAAKqX,MAAM01C,EAAMoF,OAAS,gBAAkBnyD,KAAKqX,MAAM01C,EAAM8E,OAAS,gBAzlB7F,SAA6BtyD,GAC3B,OAAQA,GACN,IAAK,MACH,MAAO,eAET,IAAK,UACH,MAAO,mBAET,IAAK,SACH,MAAO,kBAET,IAAK,QACH,MAAO,iBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,YACH,MAAO,qBAET,IAAK,UACH,MAAO,mBAET,QACE,QAwjByG03F,CAAoBj3F,KAAKoa,MAAM7a,OAEpI,QAAa1D,IAATsB,GAAmD,KAA7B6C,KAAKk3F,oBAA4B,CACzD,MAAMzkF,EAAOzS,KAAKw6E,YAElB,OADAx6E,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAMtV,GAG/B,OAAO6C,KAAKs0F,uBAGhB,KAAKvnC,EAAMK,OACX,KAAKL,EAAMC,IACX,KAAKD,EAAME,OACX,KAAKF,EAAM+E,MACX,KAAK/E,EAAMgF,OACT,OAAO/xD,KAAKm3F,yBAEd,KAAKpqC,EAAM8C,QACT,GAAyB,MAArB7vD,KAAKoa,MAAM7a,MAAe,CAC5B,MAAMkT,EAAOzS,KAAKw6E,YACZyU,EAAYjvF,KAAKqkF,YAEvB,GAAI4K,EAAU9xF,OAAS4vD,EAAMC,KAAOiiC,EAAU9xF,OAAS4vD,EAAME,OAC3D,MAAMjtD,KAAK68E,aAIb,OADApqE,EAAK09E,QAAUnwF,KAAKo3F,kBACbp3F,KAAKy6E,WAAWhoE,EAAM,iBAG/B,MAEF,KAAKs6C,EAAMwE,MACT,OAAOvxD,KAAKq3F,qCAEd,KAAKtqC,EAAMmF,QACT,OAAOlyD,KAAKs3F,mBAEd,KAAKvqC,EAAM6E,QACT,OAAO5xD,KAAK+zF,oBAEd,KAAKhnC,EAAMY,OACT,OAAO3tD,KAAKi1F,YAAYj1F,KAAKu3F,sBAAsBxsF,KAAK/K,OAASA,KAAKw3F,oBAAsBx3F,KAAKy3F,qBAEnG,KAAK1qC,EAAMO,SACT,OAAOttD,KAAK03F,mBAEd,KAAK3qC,EAAMiB,OACT,OAAOhuD,KAAK23F,2BAEd,KAAK5qC,EAAM2B,UACT,OAAO1uD,KAAK43F,6BAGhB,MAAM53F,KAAK68E,aAGb,2BACE,IAAI1/E,EAAO6C,KAAK63F,sBAEhB,MAAQ73F,KAAK09D,yBAA2B19D,KAAK+8E,IAAIhwB,EAAMO,WACrD,GAAIttD,KAAKqX,MAAM01C,EAAMU,UAAW,CAC9B,MAAMh7C,EAAOzS,KAAK+7E,gBAAgB5+E,GAClCsV,EAAK+zE,YAAcrpF,EACnB6C,KAAKs9E,OAAOvwB,EAAMU,UAClBtwD,EAAO6C,KAAKy6E,WAAWhoE,EAAM,mBACxB,CACL,MAAMA,EAAOzS,KAAK+7E,gBAAgB5+E,GAClCsV,EAAKqlF,WAAa36F,EAClBsV,EAAKslF,UAAY/3F,KAAKg2F,cACtBh2F,KAAKs9E,OAAOvwB,EAAMU,UAClBtwD,EAAO6C,KAAKy6E,WAAWhoE,EAAM,uBAIjC,OAAOtV,EAGT,oBAAoB0tF,GAClB,MAAMp4E,EAAOzS,KAAKw6E,YASlB,OARAx6E,KAAK0/E,iBAAiBmL,GACtBp4E,EAAKo4E,SAAWA,EAChBp4E,EAAK4tE,eAAiBrgF,KAAKg4F,8BAEV,aAAbnN,GACF7qF,KAAKi4F,iCAAiCxlF,GAGjCzS,KAAKy6E,WAAWhoE,EAAM,kBAG/B,iCAAiCA,GAC/B,OAAQA,EAAK4tE,eAAeljF,MAC1B,IAAK,cACL,IAAK,cACH,OAEF,QACE6C,KAAKmzE,MAAM1gE,EAAKyW,MAAOksD,GAASsB,qBAItC,mBACE,MAAMjkE,EAAOzS,KAAKw6E,YAClBx6E,KAAK0/E,iBAAiB,SACtB,MAAMoE,EAAgB9jF,KAAKw6E,YAG3B,OAFAsJ,EAAcl7E,KAAO5I,KAAKg0F,oBAAoBlQ,EAAc56D,OAC5DzW,EAAKqxE,cAAgB9jF,KAAKy6E,WAAWqJ,EAAe,mBAC7C9jF,KAAKy6E,WAAWhoE,EAAM,eAG/B,8BACE,MAAMo4E,EAAW,CAAC,QAAS,SAAU,YAAY1T,KAAK+gB,GAAMl4F,KAAKghF,aAAakX,IAC9E,OAAOrN,EAAW7qF,KAAKm4F,oBAAoBtN,GAAY7qF,KAAKghF,aAAa,SAAWhhF,KAAKo4F,mBAAqBp4F,KAAKq4F,2BAGrH,+BAA+Bp8B,EAAMq8B,EAAsBzN,GACzD7qF,KAAK+8E,IAAI8N,GACT,IAAI1tF,EAAOm7F,IAEX,GAAIt4F,KAAKqX,MAAMwzE,GAAW,CACxB,MAAM99B,EAAQ,CAAC5vD,GAEf,KAAO6C,KAAK+8E,IAAI8N,IACd99B,EAAM/wD,KAAKs8F,KAGb,MAAM7lF,EAAOzS,KAAK+7E,gBAAgB5+E,GAClCsV,EAAKs6C,MAAQA,EACb5vD,EAAO6C,KAAKy6E,WAAWhoE,EAAMwpD,GAG/B,OAAO9+D,EAGT,kCACE,OAAO6C,KAAKu4F,+BAA+B,qBAAsBv4F,KAAKg4F,4BAA4BjtF,KAAK/K,MAAO+sD,EAAM0C,YAGtH,2BACE,OAAOzvD,KAAKu4F,+BAA+B,cAAev4F,KAAKw4F,gCAAgCztF,KAAK/K,MAAO+sD,EAAMwC,WAGnH,0BACE,QAAIvvD,KAAKy+E,aAAa,MAIfz+E,KAAKqX,MAAM01C,EAAMiB,SAAWhuD,KAAKi1F,YAAYj1F,KAAKy4F,qCAAqC1tF,KAAK/K,OAGrG,uBACE,GAAIA,KAAKqX,MAAM01C,EAAMnkD,OAAS5I,KAAKqX,MAAM01C,EAAMwE,OAE7C,OADAvxD,KAAK2C,QACE,EAGT,GAAI3C,KAAKqX,MAAM01C,EAAMY,QAAS,CAC5B,IAAI+qC,EAAoB,EAGxB,IAFA14F,KAAK2C,OAEE+1F,EAAoB,GACrB14F,KAAKqX,MAAM01C,EAAMY,UACjB+qC,EACO14F,KAAKqX,MAAM01C,EAAMe,WACxB4qC,EAGJ14F,KAAK2C,OAGP,OAAO,EAGT,GAAI3C,KAAKqX,MAAM01C,EAAMO,UAAW,CAC9B,IAAIorC,EAAoB,EAGxB,IAFA14F,KAAK2C,OAEE+1F,EAAoB,GACrB14F,KAAKqX,MAAM01C,EAAMO,YACjBorC,EACO14F,KAAKqX,MAAM01C,EAAMU,aACxBirC,EAGJ14F,KAAK2C,OAGP,OAAO,EAGT,OAAO,EAGT,uCAGE,GAFA3C,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMkB,SAAWjuD,KAAKqX,MAAM01C,EAAM0B,UAC/C,OAAO,EAGT,GAAIzuD,KAAK24F,uBAAwB,CAC/B,GAAI34F,KAAKqX,MAAM01C,EAAMoB,QAAUnuD,KAAKqX,MAAM01C,EAAMpS,QAAU36C,KAAKqX,MAAM01C,EAAMuB,WAAatuD,KAAKqX,MAAM01C,EAAMgC,IACvG,OAAO,EAGT,GAAI/uD,KAAKqX,MAAM01C,EAAMkB,UACnBjuD,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMyB,QACnB,OAAO,EAKb,OAAO,EAGT,qCAAqC+lC,GACnC,OAAOv0F,KAAK44F,SAAS,KACnB,MAAMC,EAAI74F,KAAKw6E,YACfx6E,KAAKs9E,OAAOiX,GACZ,MAAMuE,IAAY94F,KAAK4yF,WAAW5yF,KAAK+4F,4BAA4BhuF,KAAK/K,OAExE,GAAI84F,GAAW94F,KAAKqX,MAAM01C,EAAMwE,OAAQ,CACtC,IAAIynC,EAAoBh5F,KAAKq3F,qCAE7B,GAA+B,eAA3B2B,EAAkB77F,KAAuB,CAC3C,MAAMsV,EAAOzS,KAAK+7E,gBAAgB8c,GAClCpmF,EAAKmhF,cAAgBoF,EACrBvmF,EAAKqmF,SAAU,EACfE,EAAoBh5F,KAAKy6E,WAAWhoE,EAAM,wBAE1CumF,EAAkBF,SAAU,EAI9B,OADAD,EAAExY,eAAiB2Y,EACZh5F,KAAKy6E,WAAWoe,EAAG,oBAG5B,MAAMI,EAAwBj5F,KAAK41F,kBAAoB51F,KAAK4yF,WAAW5yF,KAAKk5F,2BAA2BnuF,KAAK/K,OAE5G,IAAKi5F,EAAuB,CAC1B,IAAKH,EACH,OAAO94F,KAAK6zF,uBAAsB,EAAOgF,GAG3C,MAAMpmF,EAAOzS,KAAK+7E,gBAAgB8c,GAIlC,OAHApmF,EAAKmhF,cAAgB5zF,KAAK8/E,kBAC1BrtE,EAAKqmF,QAAUA,EACfD,EAAExY,eAAiBrgF,KAAKy6E,WAAWhoE,EAAM,mBAClCzS,KAAKy6E,WAAWoe,EAAG,oBAG5B,MAAM17F,EAAO6C,KAAK6zF,uBAAsB,GAClCphF,EAAOzS,KAAK+7E,gBAAgB8c,GAKlC,OAJApmF,EAAKmhF,cAAgBqF,EACrBxmF,EAAK4tE,eAAiBljF,EACtBsV,EAAKqmF,QAAUA,EACfD,EAAExY,eAAiBrgF,KAAKy6E,WAAWhoE,EAAM,mBAClCzS,KAAKy6E,WAAWoe,EAAG,sBAI9B,0CACE,OAAO74F,KAAKqX,MAAM01C,EAAMoB,OAASnuD,KAAK60F,qCAAqC9nC,EAAMoB,YAAStyD,EAG5F,2BACE,OAAOmE,KAAKqX,MAAM01C,EAAMoB,OAASnuD,KAAK6zF,6BAA0Bh4F,EAGlE,iBACE,OAAOmE,KAAKk0F,mBAAmBnnC,EAAMoB,OAGvC,6BACE,MAAM9xD,EAAK2D,KAAK8/E,kBAEhB,GAAI9/E,KAAKghF,aAAa,QAAUhhF,KAAK09D,wBAEnC,OADA19D,KAAK2C,OACEtG,EAIX,8BACE,IAAK2D,KAAKqX,MAAM01C,EAAMnkD,OAA8B,YAArB5I,KAAKoa,MAAM7a,OAAuBS,KAAK09D,wBACpE,OAAO,EAGT,MAAMy7B,EAAcn5F,KAAKoa,MAAM++E,YAG/B,OAFAn5F,KAAK2C,UAEA3C,KAAKqX,MAAM01C,EAAMnkD,QAAU5I,KAAKqX,MAAM01C,EAAMwE,UAI7C4nC,GACFn5F,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAchuB,EAAcoD,2BAA4B,YAGzE,GAGT,sBAAsBkjC,GAAW,EAAMP,EAAI74F,KAAKw6E,aAK9C,OAJAx6E,KAAK44F,SAAS,KACRQ,GAAUp5F,KAAKs9E,OAAOvwB,EAAMoB,OAChC0qC,EAAExY,eAAiBrgF,KAAKg2F,gBAEnBh2F,KAAKy6E,WAAWoe,EAAG,oBAG5B,cACE1jB,GAAOn1E,KAAKoa,MAAMilE,QAClB,MAAMliF,EAAO6C,KAAKq5F,4BAElB,GAAIr5F,KAAK09D,0BAA4B19D,KAAK+8E,IAAIhwB,EAAM2E,UAClD,OAAOv0D,EAGT,MAAMsV,EAAOzS,KAAK+7E,gBAAgB5+E,GAOlC,OANAsV,EAAK6mF,UAAYn8F,EACjBsV,EAAK8mF,YAAcv5F,KAAKq5F,4BACxBr5F,KAAKs9E,OAAOvwB,EAAMuB,UAClB77C,EAAK+mF,SAAWx5F,KAAKg2F,cACrBh2F,KAAKs9E,OAAOvwB,EAAMoB,OAClB17C,EAAKgnF,UAAYz5F,KAAKg2F,cACfh2F,KAAKy6E,WAAWhoE,EAAM,qBAG/B,4BACE,OAAIzS,KAAK05F,0BACA15F,KAAK25F,iCAAiC,kBAG3C35F,KAAKqX,MAAM01C,EAAMuE,MACZtxD,KAAK25F,iCAAiC,qBAGxC35F,KAAK45F,2BAGd,uBACE,MAAMnnF,EAAOzS,KAAKw6E,YAEZrpB,EAASnxD,KAAK65F,gCAKpB,OAHApnF,EAAK4tE,eAAiBlvB,GAAUnxD,KAAK85F,sBACrC95F,KAAKgkF,iBAAiB,KACtBvxE,EAAKwlE,WAAaj4E,KAAKo3F,kBAChBp3F,KAAKy6E,WAAWhoE,EAAM,mBAG/B,sBAAsBsnF,GACpB,MAAMC,EAAgBh6F,KAAKoa,MAAM8O,MAC3B+wE,EAAgBj6F,KAAKqzF,qBAAqB,wBAAyBrzF,KAAKk6F,mCAAmCnvF,KAAK/K,OAMtH,OAJKi6F,EAAc79F,QACjB4D,KAAKmzE,MAAM6mB,EAAe5kB,GAASO,wBAAyBokB,GAGvDE,EAGT,qCACE,MAAMxnF,EAAOzS,KAAKw6E,YAOlB,OANA/nE,EAAKwlE,WAAaj4E,KAAKuzF,mBAAkB,GAErCvzF,KAAKy+E,aAAa,OACpBhsE,EAAKknE,eAAiB35E,KAAKwzF,wBAGtBxzF,KAAKy6E,WAAWhoE,EAAM,iCAG/B,4BAA4BA,GAC1BA,EAAKpW,GAAK2D,KAAK8/E,kBACf9/E,KAAK04E,UAAUjmE,EAAKpW,GAvpLE,SAupLqBR,EAAW,oCACtD4W,EAAKknE,eAAiB35E,KAAK00F,2BAEvB10F,KAAK+8E,IAAIhwB,EAAM2E,YACjBj/C,EAAKnF,QAAUtN,KAAKm6F,sBAAsB,YAG5C,MAAM12D,EAAOzjC,KAAKw6E,YAGlB,OAFA/2C,EAAKA,KAAOzjC,KAAK44F,SAAS54F,KAAKy1F,yBAAyB1qF,KAAK/K,OAC7DyS,EAAKgxB,KAAOzjC,KAAKy6E,WAAWh3C,EAAM,mBAC3BzjC,KAAKy6E,WAAWhoE,EAAM,0BAG/B,4BAA4BA,GAgB1B,OAfAA,EAAKpW,GAAK2D,KAAK8/E,kBACf9/E,KAAK04E,UAAUjmE,EAAKpW,GArqLH,OAqqLqBR,EAAW,yBACjD4W,EAAKknE,eAAiB35E,KAAK00F,2BAC3BjiF,EAAK4tE,eAAiBrgF,KAAK44F,SAAS,KAGlC,GAFA54F,KAAKs9E,OAAOvwB,EAAMgC,IAEd/uD,KAAKghF,aAAa,cAAgBhhF,KAAKqkF,YAAYlnF,OAAS4vD,EAAMsB,IAAK,CACzE,MAAM57C,EAAOzS,KAAKw6E,YAElB,OADAx6E,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,sBAG/B,OAAOzS,KAAKg2F,gBAEdh2F,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,0BAG/B,cAAcpH,GACZ,MAAM+uF,EAAap6F,KAAKoa,MAAMiI,QAC9BriB,KAAKoa,MAAMiI,QAAU,CAAC+3E,EAAW,IAEjC,IACE,OAAO/uF,IACP,QACArL,KAAKoa,MAAMiI,QAAU+3E,GAIzB,SAAS/uF,GACP,MAAM+zE,EAAYp/E,KAAKoa,MAAMilE,OAC7Br/E,KAAKoa,MAAMilE,QAAS,EAEpB,IACE,OAAOh0E,IACP,QACArL,KAAKoa,MAAMilE,OAASD,GAIxB,mBAAmBvyB,GACjB,OAAQ7sD,KAAKqX,MAAMw1C,GAAqB7sD,KAAK85F,2BAAjBj+F,EAG9B,sBAAsBgxD,GACpB,OAAO7sD,KAAKq6F,kBAAkB,IAAMr6F,KAAKs9E,OAAOzwB,IAGlD,sBACE,OAAO7sD,KAAKq6F,kBAAkB,IAAMr6F,KAAK2C,QAG3C,kBAAkB0I,GAChB,OAAOrL,KAAK44F,SAAS,KACnBvtF,IACOrL,KAAKg2F,gBAIhB,oBACE,MAAMvjF,EAAOzS,KAAKw6E,YAOlB,OANA/nE,EAAKpW,GAAK2D,KAAKqX,MAAM01C,EAAMK,QAAUptD,KAAK+5E,gBAAkB/5E,KAAK8/E,iBAAgB,GAE7E9/E,KAAK+8E,IAAIhwB,EAAMgC,MACjBt8C,EAAK6nF,YAAct6F,KAAKy9E,2BAGnBz9E,KAAKy6E,WAAWhoE,EAAM,gBAG/B,uBAAuBA,EAAM8nF,GAO3B,OANIA,IAAS9nF,EAAKsvD,OAAQ,GAC1BtvD,EAAKpW,GAAK2D,KAAK8/E,kBACf9/E,KAAK04E,UAAUjmE,EAAKpW,GAAIk+F,EAxuLDC,IAJNlZ,SA4uLoDzlF,EAAW,+BAChFmE,KAAKs9E,OAAOvwB,EAAMY,QAClBl7C,EAAKg+E,QAAUzwF,KAAKqzF,qBAAqB,cAAerzF,KAAKy6F,kBAAkB1vF,KAAK/K,OACpFA,KAAKs9E,OAAOvwB,EAAMe,QACX9tD,KAAKy6E,WAAWhoE,EAAM,qBAG/B,qBACE,MAAMA,EAAOzS,KAAKw6E,YAKlB,OAJAx6E,KAAK4zE,MAAM7qD,MA/wLK,GAgxLhB/oB,KAAKs9E,OAAOvwB,EAAMY,QAClB3tD,KAAK06F,4BAA4BjoF,EAAKgxB,KAAO,QAAI5nC,GAAW,EAAMkxD,EAAMe,QACxE9tD,KAAK4zE,MAAM8N,OACJ1hF,KAAKy6E,WAAWhoE,EAAM,iBAG/B,oCAAoCA,EAAMkoF,GAAS,GAOjD,GANAloF,EAAKpW,GAAK2D,KAAK8/E,kBAEV6a,GACH36F,KAAK04E,UAAUjmE,EAAKpW,GA3vLA,KA2vLuB,KAAM,mCAG/C2D,KAAK+8E,IAAIhwB,EAAMsB,KAAM,CACvB,MAAMusC,EAAQ56F,KAAKw6E,YACnBx6E,KAAK66F,oCAAoCD,GAAO,GAChDnoF,EAAKgxB,KAAOm3D,OAEZ56F,KAAK4zE,MAAM7qD,MA1xLO,KA2xLlB/oB,KAAKq9D,UAAUt0C,MA9pCP,GA+pCRtW,EAAKgxB,KAAOzjC,KAAK86F,qBACjB96F,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,OAGb,OAAO1hF,KAAKy6E,WAAWhoE,EAAM,uBAG/B,wCAAwCA,GAoBtC,OAnBIzS,KAAKghF,aAAa,WACpBvuE,EAAKq5C,QAAS,EACdr5C,EAAKpW,GAAK2D,KAAK8/E,mBACN9/E,KAAKqX,MAAM01C,EAAMK,QAC1B36C,EAAKpW,GAAK2D,KAAK+5E,gBAEf/5E,KAAK68E,aAGH78E,KAAKqX,MAAM01C,EAAMY,SACnB3tD,KAAK4zE,MAAM7qD,MA/yLO,KAgzLlB/oB,KAAKq9D,UAAUt0C,MAnrCP,GAorCRtW,EAAKgxB,KAAOzjC,KAAK86F,qBACjB96F,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,QAEX1hF,KAAKugF,YAGAvgF,KAAKy6E,WAAWhoE,EAAM,uBAG/B,+BAA+BA,EAAMsoF,GAOnC,OANAtoF,EAAKsoF,SAAWA,IAAY,EAC5BtoF,EAAKpW,GAAK2D,KAAK8/E,kBACf9/E,KAAK04E,UAAUjmE,EAAKpW,GAjzLHilF,OAizLqBzlF,EAAW,6BACjDmE,KAAKs9E,OAAOvwB,EAAMgC,IAClBt8C,EAAKuoF,gBAAkBh7F,KAAKi7F,yBAC5Bj7F,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,6BAG/B,8BACE,OAAOzS,KAAKghF,aAAa,YAA2C,KAA7BhhF,KAAKk3F,oBAG9C,yBACE,OAAOl3F,KAAKk7F,8BAAgCl7F,KAAKm7F,iCAAmCn7F,KAAKuzF,mBAAkB,GAG7G,iCACE,MAAM9gF,EAAOzS,KAAKw6E,YAIlB,GAHAx6E,KAAK0/E,iBAAiB,WACtB1/E,KAAKs9E,OAAOvwB,EAAMiB,SAEbhuD,KAAKqX,MAAM01C,EAAMK,QACpB,MAAMptD,KAAK68E,aAKb,OAFApqE,EAAKwlE,WAAaj4E,KAAK+5E,gBACvB/5E,KAAKs9E,OAAOvwB,EAAMkB,QACXjuD,KAAKy6E,WAAWhoE,EAAM,6BAG/B,YAAY2oF,GACV,MAAMhhF,EAAQpa,KAAKoa,MAAMgD,QACnB/d,EAAM+7F,IAEZ,OADAp7F,KAAKoa,MAAQA,EACN/a,EAGT,mBAAmB+7F,GACjB,MAAM76F,EAASP,KAAK8nF,SAASwF,GAAS8N,KAAO9N,KAC7C,IAAI/sF,EAAOotF,SAAYptF,EAAOkS,KAE9B,OADIlS,EAAOoJ,QAAO3J,KAAKoa,MAAQ7Z,EAAOynF,WAC/BznF,EAAOkS,KAGhB,WAAW2oF,GACT,MAAMhhF,EAAQpa,KAAKoa,MAAMgD,QACnB7c,EAAS66F,IAEf,YAAev/F,IAAX0E,IAAmC,IAAXA,EACnBA,OAEPP,KAAKoa,MAAQA,GAKjB,kBAAkBihF,GAChB,GAAIr7F,KAAKs7F,mBACP,OAGF,IACIr/B,EADAs/B,EAAYv7F,KAAKoa,MAAMjd,KAQ3B,OALI6C,KAAKghF,aAAa,SACpBua,EAAYxuC,EAAMmE,KAClB+K,EAAO,OAGFj8D,KAAKw7F,mBAAmB,KAC7B,OAAQD,GACN,KAAKxuC,EAAM6D,UAET,OADAyqC,EAAKjY,SAAU,EACRpjF,KAAKy7F,uBAAuBJ,GAAM,GAAO,GAElD,KAAKtuC,EAAM0E,OAET,OADA4pC,EAAKjY,SAAU,EACRpjF,KAAK07F,WAAWL,GAAM,GAAM,GAErC,KAAKtuC,EAAMoE,OACT,GAAInxD,KAAKqX,MAAM01C,EAAMoE,SAAWnxD,KAAKssF,sBAAsB,QAGzD,OAFAtsF,KAAKs9E,OAAOvwB,EAAMoE,QAClBnxD,KAAK0/E,iBAAiB,QACf1/E,KAAK27F,uBAAuBN,GAAM,GAG7C,KAAKtuC,EAAMmE,KAET,OADA+K,EAAOA,GAAQj8D,KAAKoa,MAAM7a,MACnBS,KAAK47F,kBAAkBP,EAAMp/B,GAEtC,KAAKlP,EAAMnkD,KACT,CACE,MAAMrJ,EAAQS,KAAKoa,MAAM7a,MAEzB,MAAc,WAAVA,EACKS,KAAK67F,wCAAwCR,GAE7Cr7F,KAAK87F,mBAAmBT,EAAM97F,GAAO,OAOxD,8BACE,OAAOS,KAAK87F,mBAAmB97F,KAAKw6E,YAAax6E,KAAKoa,MAAM7a,OAAO,GAGrE,2BAA2BkT,EAAM6lE,GAC/B,OAAQA,EAAK1vE,MACX,IAAK,UACH,CACE,MAAMi5E,EAAc7hF,KAAK+7F,kBAAkBtpF,GAE3C,GAAIovE,EAEF,OADAA,EAAYuB,SAAU,EACfvB,EAGT,MAGJ,IAAK,SACH,GAAI7hF,KAAKqX,MAAM01C,EAAMY,QAAS,CAC5B3tD,KAAK4zE,MAAM7qD,MAz7LG,KA07Ld/oB,KAAKq9D,UAAUt0C,MA7zCX,GA8zCJ,MAAMgW,EAAMtsB,EAMZ,OALAssB,EAAI+sB,QAAS,EACb/sB,EAAI1iC,GAAKi8E,EACTv5C,EAAI0E,KAAOzjC,KAAK86F,qBAChB96F,KAAK4zE,MAAM8N,OACX1hF,KAAKq9D,UAAUqkB,OACR1hF,KAAKy6E,WAAW17C,EAAK,uBAG9B,MAEF,QACE,OAAO/+B,KAAK87F,mBAAmBrpF,EAAM6lE,EAAK1vE,MAAM,IAItD,mBAAmB6J,EAAMlT,EAAOoD,GAC9B,OAAQpD,GACN,IAAK,WACH,GAAIS,KAAKg8F,8BAA8BjvC,EAAM0E,OAAQ9uD,GAAO,CAC1D,MAAMw+B,EAAM1uB,EAWZ,OAVA0uB,EAAI86D,UAAW,EAEXt5F,IACF3C,KAAK2C,OAEA3C,KAAKqX,MAAM01C,EAAM0E,SACpBzxD,KAAK68E,WAAW,KAAM9vB,EAAM0E,SAIzBzxD,KAAK07F,WAAWv6D,GAAK,GAAM,GAGpC,MAEF,IAAK,OACH,GAAIx+B,GAAQ3C,KAAKqX,MAAM01C,EAAMnkD,MAE3B,OADIjG,GAAM3C,KAAK2C,OACR3C,KAAK27F,uBAAuBlpF,GAAM,GAG3C,MAEF,IAAK,YACH,GAAIzS,KAAKg8F,8BAA8BjvC,EAAMnkD,KAAMjG,GAEjD,OADIA,GAAM3C,KAAK2C,OACR3C,KAAKk8F,4BAA4BzpF,GAG1C,MAEF,IAAK,SAGH,GAFI9P,GAAM3C,KAAK2C,OAEX3C,KAAKqX,MAAM01C,EAAMK,QACnB,OAAOptD,KAAK67F,wCAAwCppF,GAC/C,GAAIzS,KAAKg8F,8BAA8BjvC,EAAMnkD,KAAMjG,GACxD,OAAO3C,KAAK66F,oCAAoCpoF,GAGlD,MAEF,IAAK,YACH,GAAIzS,KAAKg8F,8BAA8BjvC,EAAMnkD,KAAMjG,GAEjD,OADIA,GAAM3C,KAAK2C,OACR3C,KAAK66F,oCAAoCpoF,GAGlD,MAEF,IAAK,OACH,GAAIzS,KAAKg8F,8BAA8BjvC,EAAMnkD,KAAMjG,GAEjD,OADIA,GAAM3C,KAAK2C,OACR3C,KAAKm8F,4BAA4B1pF,IAOhD,8BAA8B2pF,EAAWz5F,GACvC,OAAQA,GAAQ3C,KAAKqX,MAAM+kF,MAAgBp8F,KAAKs7F,mBAGlD,oCAAoCthB,EAAUC,GAC5C,IAAKj6E,KAAKy+E,aAAa,KACrB,OAGF,MAAM4d,EAA4Br8F,KAAKoa,MAAMkiF,uBACvCC,EAAcv8F,KAAKoa,MAAMoiF,SACzBC,EAAcz8F,KAAKoa,MAAMsiF,SAC/B18F,KAAKoa,MAAMkiF,wBAAyB,EACpCt8F,KAAKoa,MAAMoiF,UAAY,EACvBx8F,KAAKoa,MAAMsiF,UAAY,EACvB,MAAMr9F,EAAMW,KAAK28F,mBAAmB,KAClC,MAAMlqF,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAKxC,OAJAxnE,EAAKknE,eAAiB35E,KAAKm0F,wBAC3BhgB,MAAM2Y,oBAAoBr6E,GAC1BA,EAAK+jC,WAAax2C,KAAK48F,0CACvB58F,KAAKs9E,OAAOvwB,EAAMyB,OACX/7C,IAMT,OAJAzS,KAAKoa,MAAMkiF,uBAAyBD,EACpCr8F,KAAKoa,MAAMoiF,SAAWD,EACtBv8F,KAAKoa,MAAMsiF,SAAWD,EAEjBp9F,EAIEW,KAAK+uF,qBAAqB1vF,EAAK,MAAM,QAJ5C,EAOF,uBACE,MAAMoT,EAAOzS,KAAKw6E,YAYlB,OAXA/nE,EAAKi7B,OAAS1tC,KAAK44F,SAAS,IAAM54F,KAAK68F,cAAc,KACnD78F,KAAKgkF,iBAAiB,KACfhkF,KAAKqzF,qBAAqB,4BAA6BrzF,KAAKg2F,YAAYjrF,KAAK/K,UAG3D,IAAvByS,EAAKi7B,OAAOtxC,QACd4D,KAAKmzE,MAAM1gE,EAAKyW,MAAOksD,GAASQ,oBAGlC51E,KAAKoa,MAAM4iD,aAAc,EACzBh9D,KAAKgkF,iBAAiB,KACfhkF,KAAKy6E,WAAWhoE,EAAM,gCAG/B,uBACE,GAAIzS,KAAKqX,MAAM01C,EAAMnkD,MACnB,OAAQ5I,KAAKoa,MAAM7a,OACjB,IAAK,WACL,IAAK,UACL,IAAK,OACL,IAAK,YACL,IAAK,SACL,IAAK,YACL,IAAK,OACH,OAAO,EAIb,OAAO,EAGT,2BACE,OAAIS,KAAK88F,wBACF3oB,MAAMwT,2BAGf,wBAAwBkF,EAAgBkQ,GACtC,MAAM/iB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,IAAI+iB,EACAx9F,GAAW,OAEQ3D,IAAnBgxF,IACFmQ,EAAgBh9F,KAAKi9F,sBACrBz9F,IAAaQ,KAAK+yF,gBAAgB,CAAC,cAEZ,IAAnBlG,IAA6BmQ,GAAiBx9F,IAChDQ,KAAKmzE,MAAM6G,EAAU5E,GAASqB,8BAIlC,MAAMpyC,EAAOrkC,KAAK8rF,oBAClB9rF,KAAKk9F,6BAA6B74D,GAClC,MAAM84D,EAAMn9F,KAAK8rF,kBAAkBznD,EAAKnb,MAAOmb,EAAKiG,IAAIphB,MAAOmb,GAE/D,GAAI24D,GAAiBx9F,EAAU,CAC7B,MAAM49F,EAAKp9F,KAAKg4E,YAAYgC,EAAUC,GActC,OAZI8iB,EAAW3gG,SACbghG,EAAGL,WAAaA,GAGdC,IAAeI,EAAGJ,cAAgBA,GAClCx9F,IAAU49F,EAAG59F,SAAWA,GAEX,eAAb29F,EAAIhgG,MAAsC,sBAAbggG,EAAIhgG,MACnC6C,KAAKmzE,MAAMiqB,EAAGl0E,MAAOksD,GAAS0B,kCAGhCsmB,EAAGC,UAAYF,EACRn9F,KAAKy6E,WAAW2iB,EAAI,uBAO7B,OAJIL,EAAW3gG,SACbioC,EAAK04D,WAAaA,GAGbI,EAGT,2BAA2B1qF,EAAMtV,EAAMg9E,GAAW,GAC5Cn6E,KAAKqX,MAAM01C,EAAMoB,SACnB17C,EAAK+jC,WAAax2C,KAAK60F,qCAAqC9nC,EAAMoB,QAGpE,MAAMmvC,EAAwB,wBAATngG,EAAiC,oBAA+B,gBAATA,EAAyB,uBAAoBtB,EAErHyhG,IAAiBt9F,KAAKqX,MAAM01C,EAAMY,SAAW3tD,KAAKs7F,mBACpDt7F,KAAKy6E,WAAWhoE,EAAM6qF,GAIH,sBAAjBA,GAAwCt9F,KAAKoa,MAAMmjF,mBACrDv9F,KAAKmzE,MAAM1gE,EAAKyW,MAAOksD,GAASK,kCAE5BhjE,EAAK2wE,SACPjP,MAAM+S,2BAA2Bz0E,EAAM6qF,EAAcnjB,GAKzDhG,MAAM+S,2BAA2Bz0E,EAAMtV,EAAMg9E,GAG/C,4BAA4B1nE,IACrBA,EAAKgxB,MAAQhxB,EAAKpW,GACrB2D,KAAK04E,UAAUjmE,EAAKpW,GAvoMF,KAuoMuB,KAAM,iBAE/C83E,MAAMqpB,+BAA+B5nF,WAIzC,kBAAkBw5B,EAAYypC,EAAqBgP,EAAkB4V,GACnE,MAAMhrF,EAAO0hE,MAAMupB,kBAAkBtuD,EAAYypC,EAAqBgP,EAAkB4V,GAMxF,OAJK5V,GAA4D,0BAA/B,MAARp1E,OAAe,EAASA,EAAKtV,OACrD6C,KAAKmzE,MAAM1gE,EAAKyW,MAAOksD,GAASuB,0BAG3BlkE,EAGT,eAAemkB,EAAMojD,EAAUC,EAAUyB,EAASthE,GAChD,IAAKpa,KAAK09D,yBAA2B19D,KAAKqX,MAAM01C,EAAMkC,MAAO,CAC3DjvD,KAAKoa,MAAM4iD,aAAc,EACzBh9D,KAAK2C,OACL,MAAMg7F,EAAoB39F,KAAKg4E,YAAYgC,EAAUC,GAErD,OADA0jB,EAAkB1lB,WAAarhD,EACxB52B,KAAKy6E,WAAWkjB,EAAmB,uBAG5C,GAAI39F,KAAKy+E,aAAa,KAAM,CAC1B,MAAMl+E,EAASP,KAAK28F,mBAAmB,KACrC,IAAKjhB,GAAW17E,KAAK49F,qBAAqBhnE,GAAO,CAC/C,MAAMinE,EAAe79F,KAAK89F,oCAAoC9jB,EAAUC,GAExE,GAAI4jB,EACF,OAAOA,EAIX,MAAMprF,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GACxCxnE,EAAK+6B,OAAS5W,EACd,MAAM83D,EAAgB1uF,KAAKwzF,uBAE3B,GAAI9E,EAAe,CACjB,IAAKhT,GAAW17E,KAAK+8E,IAAIhwB,EAAMiB,QAG7B,OAFAv7C,EAAKmD,UAAY5V,KAAKquF,6BAA6BthC,EAAMkB,QAAQ,GACjEx7C,EAAKknE,eAAiB+U,EACf1uF,KAAKm7E,qBAAqB1oE,EAAM2H,EAAMwhE,qBACxC,GAAI57E,KAAKqX,MAAM01C,EAAM2B,WAAY,CACtC,MAAMnuD,EAASP,KAAK+9F,8BAA8BnnE,EAAMojD,EAAUC,EAAU7/D,GAE5E,OADA7Z,EAAOo5E,eAAiB+U,EACjBnuF,GAIXP,KAAK68E,eAEP,GAAIt8E,EAAQ,OAAOA,EAGrB,OAAO4zE,MAAMwH,eAAe/kD,EAAMojD,EAAUC,EAAUyB,EAASthE,GAGjE,kBAAkB3H,GAChB,GAAIzS,KAAKy+E,aAAa,KAAM,CAC1B,MAAM9E,EAAiB35E,KAAK28F,mBAAmB,KAC7C,MAAM98F,EAAOG,KAAKwzF,uBAElB,OADKxzF,KAAKqX,MAAM01C,EAAMiB,SAAShuD,KAAK68E,aAC7Bh9E,IAGL85E,IACFlnE,EAAKknE,eAAiBA,GAI1BxF,MAAM2a,kBAAkBr8E,GAG1B,YAAY4xB,EAAM25D,EAAcC,EAAcC,GAC5C,GAAIjpB,GAAQloB,EAAMiF,IAAIvF,OAASyxC,IAAYl+F,KAAK09D,yBAA2B19D,KAAKghF,aAAa,MAAO,CAClG,MAAMvuE,EAAOzS,KAAKg4E,YAAYgmB,EAAcC,GAC5CxrF,EAAKwlE,WAAa5zC,EAElB,MAAM8sB,EAASnxD,KAAK65F,gCAUpB,OAPEpnF,EAAK4tE,eADHlvB,GAGoBnxD,KAAK85F,sBAG7B95F,KAAKy6E,WAAWhoE,EAAM,kBACtBzS,KAAKm+F,eACEn+F,KAAKo+F,YAAY3rF,EAAMurF,EAAcC,EAAcC,GAG5D,OAAO/pB,MAAMiqB,YAAY/5D,EAAM25D,EAAcC,EAAcC,GAG7D,kBAAkBv/B,EAAMsb,EAAUokB,EAAezT,IAEjD,yBAEA,YAAYn4E,GACV,GAAIzS,KAAKqX,MAAM01C,EAAMnkD,OAAS5I,KAAKqX,MAAM01C,EAAMgD,OAAS/vD,KAAKqX,MAAM01C,EAAMY,QAAS,CAChF,MAAM2wC,EAAQt+F,KAAKqkF,YAEnB,GAAIrkF,KAAKqX,MAAM01C,EAAMnkD,OAAS01F,EAAMnhG,OAAS4vD,EAAMgC,GACjD,OAAO/uD,KAAKu+F,+BAA+B9rF,IAGzCzS,KAAKghF,aAAa,SAAWsd,EAAMnhG,OAAS4vD,EAAMpS,OAAW2jD,EAAMnhG,OAAS4vD,EAAMnkD,MAAwB,SAAhB01F,EAAM/+F,MAIlGkT,EAAKmvD,WAAa,SAHlBnvD,EAAKmvD,WAAa,OAClB5hE,KAAK2C,QAMT,MAAM67F,EAAarqB,MAAMqN,YAAY/uE,GAMrC,MAJ8B,SAA1B+rF,EAAW58B,YAAyB48B,EAAW/iB,WAAWr/E,OAAS,GAAuC,2BAAlCoiG,EAAW/iB,WAAW,GAAGt+E,MACnG6C,KAAKmzE,MAAMqrB,EAAWt1E,MAAO,oFAGxBs1E,EAGT,YAAY/rF,GACV,GAAIzS,KAAKqX,MAAM01C,EAAM6E,SAEnB,OADA5xD,KAAKs9E,OAAOvwB,EAAM6E,SACX5xD,KAAKu+F,+BAA+B9rF,GAAM,GAC5C,GAAIzS,KAAK+8E,IAAIhwB,EAAMgC,IAAK,CAC7B,MAAMnpB,EAASnzB,EAGf,OAFAmzB,EAAOqyC,WAAaj4E,KAAKq9E,kBACzBr9E,KAAKugF,YACEvgF,KAAKy6E,WAAW70C,EAAQ,sBAC1B,GAAI5lC,KAAK4gF,cAAc,MAAO,CACnC,MAAM+I,EAAOl3E,EAIb,OAHAzS,KAAK0/E,iBAAiB,aACtBiK,EAAKttF,GAAK2D,KAAK8/E,kBACf9/E,KAAKugF,YACEvgF,KAAKy6E,WAAWkP,EAAM,gCAS7B,OAPI3pF,KAAKghF,aAAa,SAAWhhF,KAAKqkF,YAAYlnF,OAAS4vD,EAAMY,QAC/D3tD,KAAK2C,OACL8P,EAAKwvE,WAAa,QAElBxvE,EAAKwvE,WAAa,QAGb9N,MAAMoH,YAAY9oE,GAI7B,kBACE,OAAOzS,KAAKghF,aAAa,aAAehhF,KAAKqkF,YAAYlnF,OAAS4vD,EAAM0E,OAG1E,+BACE,GAAIzxD,KAAKy+F,kBAAmB,CAC1B,MAAMt9D,EAAMnhC,KAAKw6E,YAIjB,OAHAx6E,KAAK2C,OACL3C,KAAK07F,WAAWv6D,GAAK,GAAM,GAC3BA,EAAI86D,UAAW,EACR96D,EAGT,GAAyB,cAArBnhC,KAAKoa,MAAM7a,MAAuB,CACpC,MAAMgB,EAASP,KAAK87F,mBAAmB97F,KAAKw6E,YAAax6E,KAAKoa,MAAM7a,OAAO,GAC3E,GAAIgB,EAAQ,OAAOA,EAGrB,OAAO4zE,MAAMyT,+BAGf,sBAAsBvlE,EAAS82D,GAC7B,GAAIn5E,KAAKoa,MAAMjd,OAAS4vD,EAAMoE,OAAQ,CACpC,MAAMmtC,EAAQt+F,KAAKqkF,YAEnB,GAAIia,EAAMnhG,OAAS4vD,EAAMnkD,MAAwB,SAAhB01F,EAAM/+F,MAAkB,CACvD,MAAMkT,EAAOzS,KAAKw6E,YAGlB,OAFAx6E,KAAKs9E,OAAOvwB,EAAMoE,QAClBnxD,KAAK0/E,iBAAiB,QACf1/E,KAAK27F,uBAAuBlpF,GAAM,IAI7C,OAAO0hE,MAAMuqB,sBAAsBr8E,EAAS82D,GAG9C,sBACE,OAAOn5E,KAAK+yF,gBAAgB,CAAC,SAAU,YAAa,YAGtD,iBAAiBxZ,EAAW+Q,EAAQlwE,GAClCpa,KAAK2+F,iBAAiBrU,EAAQ,CAAC,YAC/B,MAAM0S,EAAgBh9F,KAAKi9F,sBACvBD,IAAe1S,EAAO0S,cAAgBA,GAC1Ch9F,KAAK2+F,iBAAiBrU,EAAQ,CAAC,YAE/B,MAAMsU,EAAuB,KAC3BzqB,MAAMqW,iBAAiBjR,EAAW+Q,EAAQlwE,IAGxCkwE,EAAOlH,QACTpjF,KAAKw7F,mBAAmBoD,GAExBA,IAIJ,6BAA6BrlB,EAAW+Q,EAAQlwE,EAAOgzB,GACrDptC,KAAK2+F,iBAAiBrU,EAAQ,CAAC,WAAY,WAAY,YACvD,MAAMiL,EAAMv1F,KAAKw1F,yBAAyBlL,GAE1C,GAAIiL,EAmBF,OAlBAhc,EAAU91C,KAAKznC,KAAKu5F,GAEhBjL,EAAO2R,UACTj8F,KAAKmzE,MAAMmX,EAAOphE,MAAOksD,GAASU,2BAGhC1oC,GACFptC,KAAKmzE,MAAMmX,EAAOphE,MAAOksD,GAASY,yBAGhCsU,EAAO0S,eACTh9F,KAAKmzE,MAAMmX,EAAOphE,MAAOksD,GAASW,+BAAgCuU,EAAO0S,oBAGvE1S,EAAOlH,SACTpjF,KAAKmzE,MAAMmX,EAAOphE,MAAOksD,GAASa,2BAMtC9B,MAAM0qB,6BAA6BtlB,EAAW+Q,EAAQlwE,EAAOgzB,GAG/D,6BAA6B0xD,GACV9+F,KAAK+8E,IAAIhwB,EAAMuB,YAClBwwC,EAAa5jB,UAAW,GAElC4jB,EAAat/F,UAAYQ,KAAKqX,MAAM01C,EAAMiB,SAC5ChuD,KAAKmzE,MAAM2rB,EAAa51E,MAAOksD,GAASE,wBAGtCwpB,EAAa1b,SAAWpjF,KAAKqX,MAAM01C,EAAMiB,SAC3ChuD,KAAKmzE,MAAM2rB,EAAa51E,MAAOksD,GAASC,uBAI5C,yBAAyB5iE,EAAM6lE,GAE7B,OAD2B,eAAdA,EAAKn7E,KAAwB6C,KAAK++F,2BAA2BtsF,EAAM6lE,QAAQz8E,IACzEs4E,MAAMsT,yBAAyBh1E,EAAM6lE,GAGtD,+BACE,QAAIt4E,KAAK88F,wBACF3oB,MAAMuT,+BAGf,iBAAiBpP,EAAM0B,EAAUC,EAAU4N,GACzC,IAAKA,IAAqB7nF,KAAKqX,MAAM01C,EAAMuB,UACzC,OAAO6lB,MAAM4T,iBAAiBzP,EAAM0B,EAAUC,EAAU4N,GAG1D,MAAMtnF,EAASP,KAAK8nF,SAAS,IAAM3T,MAAM4T,iBAAiBzP,EAAM0B,EAAUC,IAE1E,OAAK15E,EAAOkS,MAKRlS,EAAOoJ,QAAO3J,KAAKoa,MAAQ7Z,EAAOynF,WAC/BznF,EAAOkS,OALZo1E,EAAiB3+D,MAAQ3oB,EAAOoJ,MAAMklC,KAAO7uC,KAAKoa,MAAM8O,MACjDovD,GAOX,eAAe7lE,EAAMunE,EAAUC,GAQ7B,GAPAxnE,EAAO0hE,MAAMqV,eAAe/2E,EAAMunE,EAAUC,GAExCj6E,KAAK+8E,IAAIhwB,EAAMuB,YACjB77C,EAAKyoE,UAAW,EAChBl7E,KAAKsgF,iBAAiB7tE,IAGpBzS,KAAKqX,MAAM01C,EAAMoB,OAAQ,CAC3B,MAAMs7B,EAAezpF,KAAKg4E,YAAYgC,EAAUC,GAGhD,OAFAwP,EAAaxR,WAAaxlE,EAC1Bg3E,EAAapJ,eAAiBrgF,KAAK6zF,wBAC5B7zF,KAAKy6E,WAAWgP,EAAc,wBAGvC,OAAOh3E,EAGT,uBAAuBA,GACrB,MAAMunE,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtB+kB,EAAYh/F,KAAK4gF,cAAc,WACrC,IAAIiB,EAmBJ,OAjBI7hF,KAAKqX,MAAM01C,EAAMnkD,QACnBi5E,EAAc7hF,KAAKi/F,+BAGhBpd,IACHA,EAAc1N,MAAM4V,uBAAuBt3E,IAGzCovE,IAAqC,2BAArBA,EAAY1kF,MAA0D,2BAArB0kF,EAAY1kF,MAAqC6hG,KACpHvsF,EAAKwvE,WAAa,QAGhBJ,GAAemd,IACjBh/F,KAAKk/F,mBAAmBrd,EAAa7H,EAAUC,GAC/C4H,EAAYuB,SAAU,GAGjBvB,EAGT,aAAapvE,EAAM03E,EAAaC,GAC9B,KAAMD,GAAeC,IAAepqF,KAAKghF,aAAa,cACpD,OAGF7M,MAAMkW,aAAa53E,EAAM03E,EAAaC,EAAY33E,EAAK2wE,QA78MnC,KAPL9B,KAq9Mf,MAAM3H,EAAiB35E,KAAK00F,2BACxB/a,IAAgBlnE,EAAKknE,eAAiBA,GAG5C,6BAA6BlnE,IACtBA,EAAKyoE,UAAYl7E,KAAK+8E,IAAIhwB,EAAMkC,QACnCx8C,EAAK0sF,UAAW,GAGlB,MAAMhiG,EAAO6C,KAAKm1F,2BACdh4F,IAAMsV,EAAK4tE,eAAiBljF,GAGlC,mBAAmBsV,GAOjB,OANAzS,KAAKo/F,6BAA6B3sF,GAE9BzS,KAAKoa,MAAMmjF,kBAAoBv9F,KAAKqX,MAAM01C,EAAMgC,KAClD/uD,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAOksD,GAASI,iCAGjCrB,MAAM8W,mBAAmBx4E,GAGlC,0BAA0BA,GAUxB,OATIA,EAAKwpF,UACPj8F,KAAKmzE,MAAM1gE,EAAKyW,MAAOksD,GAASkB,2BAG9B7jE,EAAKuqF,eACPh9F,KAAKmzE,MAAM1gE,EAAKyW,MAAOksD,GAASmB,+BAAgC9jE,EAAKuqF,eAGvEh9F,KAAKo/F,6BAA6B3sF,GAC3B0hE,MAAM+W,0BAA0Bz4E,GAGzC,gBAAgB8mE,EAAW75E,EAAQs1E,EAAaD,EAASyE,EAAeC,GACtE,MAAME,EAAiB35E,KAAK00F,2BAExB/a,GAAkBH,GACpBx5E,KAAKmzE,MAAMwG,EAAezwD,MAAOksD,GAASG,8BAGxCoE,IAAgBj6E,EAAOi6E,eAAiBA,GAC5CxF,MAAMmX,gBAAgB/R,EAAW75E,EAAQs1E,EAAaD,EAASyE,EAAeC,GAGhF,uBAAuBF,EAAW75E,EAAQs1E,EAAaD,GACrD,MAAM4E,EAAiB35E,KAAK00F,2BACxB/a,IAAgBj6E,EAAOi6E,eAAiBA,GAC5CxF,MAAMoX,uBAAuBhS,EAAW75E,EAAQs1E,EAAaD,GAG/D,gBAAgBtiE,GACd0hE,MAAMqX,gBAAgB/4E,GAElBA,EAAK+kE,YAAcx3E,KAAKy+E,aAAa,OACvChsE,EAAKg5E,oBAAsBzrF,KAAKwzF,wBAG9BxzF,KAAK4gF,cAAc,gBACrBnuE,EAAK8vE,WAAaviF,KAAKm6F,sBAAsB,eAIjD,kBAAkBrjF,KAASjX,GACzB,MAAM85E,EAAiB35E,KAAK00F,2BACxB/a,IAAgB7iE,EAAK6iE,eAAiBA,GAC1CxF,MAAM0X,kBAAkB/0E,KAASjX,GAGnC,oBAAoB4S,EAAMo6E,GACxB,MAAMlT,EAAiB35E,KAAK00F,2BACxB/a,IAAgBlnE,EAAKknE,eAAiBA,GAC1CxF,MAAM2Y,oBAAoBr6E,EAAMo6E,GAGlC,WAAWlD,EAAM1tB,GACfkY,MAAM4Y,WAAWpD,EAAM1tB,GAEF,eAAjB0tB,EAAKttF,GAAGc,MAAyB6C,KAAK+8E,IAAIhwB,EAAMkC,QAClD06B,EAAKwV,UAAW,GAGlB,MAAMhiG,EAAO6C,KAAKm1F,2BAEdh4F,IACFwsF,EAAKttF,GAAGgkF,eAAiBljF,EACzB6C,KAAKsgF,iBAAiBqJ,EAAKttF,KAI/B,kCAAkCoW,EAAMhR,GAKtC,OAJIzB,KAAKqX,MAAM01C,EAAMoB,SACnB17C,EAAK+jC,WAAax2C,KAAK6zF,yBAGlB1f,MAAM6Y,kCAAkCv6E,EAAMhR,GAGvD,oBAAoB5B,GAClB,IAAIstF,EAAMC,EAAOiS,EAAWhS,EAAOiS,EAAYC,EAAOC,EAEtD,IAAIplF,EACA4hE,EACAyjB,EAqBA9lB,EAnBJ,GAAI35E,KAAKqX,MAAM01C,EAAM4lB,aAAc,CAGjC,GAFAv4D,EAAQpa,KAAKoa,MAAMgD,QACnB4+D,EAAMh8E,KAAK8nF,SAAS,IAAM3T,MAAMqU,oBAAoB3oF,GAAOua,IACtD4hE,EAAIryE,MAAO,OAAOqyE,EAAIvpE,KAC3B,MAAM,QACJ4P,GACEriB,KAAKoa,MAELiI,EAAQA,EAAQjmB,OAAS,KAAOkgE,EAAQgW,OAC1CjwD,EAAQjmB,QAAU,EACTimB,EAAQA,EAAQjmB,OAAS,KAAOkgE,EAAQkW,SACjDnwD,EAAQjmB,QAAU,GAItB,KAAsB,OAAf+wF,EAAOnR,QAAe,EAASmR,EAAKxjF,SAAW3J,KAAKy+E,aAAa,KACtE,OAAOtK,MAAMqU,oBAAoB3oF,GAInCua,EAAQA,GAASpa,KAAKoa,MAAMgD,QAC5B,MAAMoxC,EAAQxuD,KAAK8nF,SAASwF,IAC1B,IAAIoS,EAEJ/lB,EAAiB35E,KAAKm0F,wBACtB,MAAM7b,EAAOnE,MAAMqU,oBAAoB3oF,GAWvC,OATkB,4BAAdy4E,EAAKn7E,MAAsCm7E,EAAKJ,OAASI,EAAKJ,MAAMc,gBACtEsU,IAG4F,KAAnD,OAArCoS,EAAkB/lB,QAA0B,EAAS+lB,EAAgBhyD,OAAOtxC,SAChF4D,KAAKytF,2BAA2BnV,EAAMqB,GAGxCrB,EAAKqB,eAAiBA,EACfrB,GACNl+D,GACH,IAAKo0C,EAAM7kD,QAAU6kD,EAAMm/B,QAAS,OAAOn/B,EAAM/7C,KAEjD,IAAKupE,IACH7G,IAAQn1E,KAAKg3E,UAAU,QACvByoB,EAAWz/F,KAAK8nF,SAAS,IAAM3T,MAAMqU,oBAAoB3oF,GAAOua,IAC3DqlF,EAAS91F,OAAO,OAAO81F,EAAShtF,KAGvC,GAAqB,OAAhB26E,EAAQpR,QAAe,EAASoR,EAAM36E,KAEzC,OADAzS,KAAKoa,MAAQ4hE,EAAIgM,UACVhM,EAAIvpE,KAGb,GAAI+7C,EAAM/7C,KAER,OADAzS,KAAKoa,MAAQo0C,EAAMw5B,UACZx5B,EAAM/7C,KAGf,GAA8B,OAAzB4sF,EAAYI,QAAoB,EAASJ,EAAU5sF,KAEtD,OADAzS,KAAKoa,MAAQqlF,EAASzX,UACfyX,EAAShtF,KAGlB,GAAqB,OAAhB46E,EAAQrR,QAAe,EAASqR,EAAMQ,OAAQ,MAAM7R,EAAIryE,MAC7D,GAAI6kD,EAAMq/B,OAAQ,MAAMr/B,EAAM7kD,MAC9B,GAA+B,OAA1B21F,EAAaG,QAAoB,EAASH,EAAWzR,OAAQ,MAAM4R,EAAS91F,MACjF,MAAwB,OAAhB41F,EAAQvjB,QAAe,EAASujB,EAAM51F,QAAU6kD,EAAM7kD,QAAqC,OAA1B61F,EAAaC,QAAoB,EAASD,EAAW71F,OAGhI,gBAAgBkvE,GACd,OAAK74E,KAAKg3E,UAAU,QAAUh3E,KAAKy+E,aAAa,KACvCz+E,KAAK2/F,uBAELxrB,MAAMijB,gBAAgBve,GAIjC,WAAWpmE,GACT,GAAIzS,KAAKqX,MAAM01C,EAAMoB,OAAQ,CAC3B,MAAM5tD,EAASP,KAAK8nF,SAASwF,IAC3B,MAAM92C,EAAax2C,KAAK60F,qCAAqC9nC,EAAMoB,OAEnE,OADInuD,KAAKumF,sBAAyBvmF,KAAKqX,MAAM01C,EAAMyB,QAAQ8+B,IACpD92C,IAET,GAAIj2C,EAAOotF,QAAS,OAEfptF,EAAOstF,SACNttF,EAAOoJ,QAAO3J,KAAKoa,MAAQ7Z,EAAOynF,WACtCv1E,EAAK+jC,WAAaj2C,EAAOkS,MAI7B,OAAO0hE,MAAM2Z,WAAWr7E,GAG1B,6BAA6Bk0E,GACvB3mF,KAAK+8E,IAAIhwB,EAAMuB,YACE,eAAfq4B,EAAMxpF,MAA0B6C,KAAKoa,MAAMmjF,kBAC7Cv9F,KAAKmzE,MAAMwT,EAAMz9D,MAAOksD,GAASiB,mBAGnCsQ,EAAMzL,UAAW,GAGnB,MAAM/9E,EAAO6C,KAAKm1F,2BAGlB,OAFIh4F,IAAMwpF,EAAMtG,eAAiBljF,GACjC6C,KAAKsgF,iBAAiBqG,GACfA,EAGT,aAAal0E,GACX,OAAQA,EAAKtV,MACX,IAAK,uBACH,OAAOg3E,MAAM4G,aAAa/6E,KAAK8qF,oBAAoBr4E,IAErD,IAAK,sBACH,OAAO0hE,MAAM4G,aAAatoE,GAE5B,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,OADAA,EAAKwlE,WAAaj4E,KAAK+6E,aAAatoE,EAAKwlE,YAClCxlE,EAET,QACE,OAAO0hE,MAAM4G,aAAatoE,IAIhC,UAAU6lE,EAAMzE,EAvrNA,GAurNyB0E,EAAcC,GACrD,OAAQF,EAAKn7E,MACX,IAAK,uBACH,OAEF,IAAK,sBAEH,YADA6C,KAAK04E,UAAUJ,EAAK+kB,UAAWxpB,EAAa0E,EAAc,sBAG5D,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,YADAv4E,KAAK04E,UAAUJ,EAAKL,WAAYpE,EAAa0E,EAAcC,GAG7D,QAEE,YADArE,MAAMuE,UAAUJ,EAAMzE,EAAa0E,EAAcC,IAKvD,mBACE,OAAQx4E,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMwE,MACT,OAAOvxD,KAAK8/E,iBAAgB,GAE9B,QACE,OAAO3L,MAAMyrB,oBAInB,6BAA6BtnB,GAC3B,GAAIt4E,KAAKy+E,aAAa,KAAM,CAC1B,MAAMiQ,EAAgB1uF,KAAKwzF,uBAE3B,GAAIxzF,KAAKqX,MAAM01C,EAAMiB,QAAS,CAC5B,MAAMvsD,EAAO0yE,MAAM0rB,6BAA6BvnB,GAEhD,OADA72E,EAAKk4E,eAAiB+U,EACfjtF,EAGTzB,KAAK68E,WAAW78E,KAAKoa,MAAM8O,MAAO6jC,EAAMiB,QAG1C,OAAOmmB,MAAM0rB,6BAA6BvnB,GAG5C,gBACE,OAAOt4E,KAAKy+E,aAAa,MAAQtK,MAAMgX,gBAGzC,kBACE,OAAOnrF,KAAKqX,MAAM01C,EAAMkC,OAASjvD,KAAKqX,MAAM01C,EAAMoB,QAAUgmB,MAAMiX,kBAGpE,qBAAqBvrF,GACnB,MAAM4S,EAAO0hE,MAAM2X,qBAAqBjsF,GAMxC,MAJkB,sBAAd4S,EAAKtV,MAAgCsV,EAAK4tE,gBAAkB5tE,EAAKs1B,MAAM7e,MAAQzW,EAAK4tE,eAAen3D,OACrGlpB,KAAKmzE,MAAM1gE,EAAK4tE,eAAen3D,MAAOksD,GAASoB,2BAG1C/jE,EAGT,iBAAiB43B,GACf,OAAIrqC,KAAKoa,MAAMilE,QAAoB,KAATh1C,GAAwB,KAATA,EAGhC8pC,MAAMiI,iBAAiB/xC,GAFvBrqC,KAAKyqF,SAAS19B,EAAM4C,WAAY,GAM3C,eACE,GAAI3vD,KAAKqX,MAAM01C,EAAM4C,YAAa,CAChC,MAAMtlB,EAAOrqC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAM8O,OAEjC,KAATmhB,GAAwB,KAATA,IACjBrqC,KAAKoa,MAAMy0B,KAAO,EAClB7uC,KAAK8/F,gBAAgBz1D,KAK3B,iBAAiB+wC,GACf,IAAK,IAAIv+E,EAAI,EAAGA,EAAIu+E,EAASh/E,OAAQS,IAAK,CACxC,MAAMy7E,EAAO8C,EAASv+E,GACtB,GAAKy7E,EAEL,OAAQA,EAAKn7E,MACX,IAAK,uBACHi+E,EAASv+E,GAAKmD,KAAK8qF,oBAAoBxS,GACvC,MAEF,IAAK,iBACL,IAAK,kBACEt4E,KAAKoa,MAAMkiF,uBAGdt8F,KAAKmzE,MAAMmF,EAAKpvD,MAAOksD,GAASwB,+BAFhCwE,EAASv+E,GAAKmD,KAAK8qF,oBAAoBxS,IAS/C,OAAOnE,MAAMgV,oBAAoBvzE,WAGnC,oBAAoBnD,GAGlB,OAFAA,EAAKwlE,WAAWoI,eAAiB5tE,EAAK4tE,eACtCrgF,KAAKsgF,iBAAiB7tE,EAAKwlE,WAAYxlE,EAAK4tE,eAAev6D,IAAKrT,EAAK4tE,eAAe/1C,IAAIxkB,KACjFrT,EAAKwlE,WAGd,mBACE,OAAOj4E,KAAKqX,MAAM01C,EAAMoB,QAAUgmB,MAAM4Z,mBAG1C,wBACE,OAAO/tF,KAAKqX,MAAM01C,EAAMoB,QAAUgmB,MAAM8Y,wBAG1C,0BACE,OAAO9Y,MAAM4rB,2BAA6B//F,KAAKy+F,kBAGjD,gCAAgChsF,GAC9B,GAAIzS,KAAKy+E,aAAa,KAAM,CAC1B,MAAMiQ,EAAgB1uF,KAAK28F,mBAAmB,IAAM38F,KAAKwzF,wBACrD9E,IAAej8E,EAAKknE,eAAiB+U,GAG3C,OAAOva,MAAMyJ,gCAAgCnrE,GAG/C,kCAAkC/S,GAChC,MAAMsgG,EAAY7rB,MAAM8rB,kCAAkCvgG,GACpDwgG,EAAaxgG,EAAOguC,OAAO,GAEjC,OADwBwyD,GAAkC,eAApBA,EAAW/iG,MAA6C,SAApB+iG,EAAWt3F,KAC5Do3F,EAAY,EAAIA,EAG3C,wBACE,MAAMrZ,EAAQxS,MAAMgsB,wBACdhjG,EAAO6C,KAAKm1F,2BAOlB,OALIh4F,IACFwpF,EAAMtG,eAAiBljF,EACvB6C,KAAKsgF,iBAAiBqG,IAGjBA,EAGT,mBAAmBt7E,GACjB,MAAM+0F,EAAsBpgG,KAAKoa,MAAMmjF,iBACvCv9F,KAAKoa,MAAMmjF,kBAAmB,EAE9B,IACE,OAAOlyF,IACP,QACArL,KAAKoa,MAAMmjF,iBAAmB6C,KAqTlCC,YArGiB7oB,GAAc,cAAcA,EAC7C,mBACE,GAAIx3E,KAAKqX,MAAM01C,EAAM+C,QAAS,CAC5B,MAAMwwC,EAAmBtgG,KAAKoa,MAAM8O,MAC9BzW,EAAOzS,KAAKw6E,YAGlB,GAFAx6E,KAAK+8E,IAAIhwB,EAAM+C,QAEX9vD,KAAKqX,MAAM01C,EAAMnkD,MAAO,CAC1B,MAAMA,EAAO5I,KAAKg0F,oBAAoBh0F,KAAKoa,MAAM8O,OAC3C+uB,EAAaj4C,KAAKsmF,iBAAiB7zE,EAAM7J,GAG/C,GAFAqvC,EAAW96C,KAAO,wBAEd6C,KAAKqX,MAAM01C,EAAMiB,QACnB,OAAO/V,EAIXj4C,KAAK68E,WAAWyjB,IAIpB,gBACE,OAAOtgG,KAAKugG,oBAAsBpsB,MAAM4F,iBAAiBnkE,aAgF3D4qF,aA7SkBhpB,GAAc,cAAcA,EAC9C,iBAAiBipB,GACf,GAAIzgG,KAAKqX,MAAM01C,EAAM54C,aAAc,CACjC,MAAM1B,EAAOzS,KAAKw6E,YAMlB,OALAx6E,KAAK2C,OACL3C,KAAK0gG,cAAc,oCACnBjuF,EAAK7J,KAAOurE,MAAM2L,iBAAgB,GAClC9/E,KAAK0gG,cAAc,oCACnB1gG,KAAKs9E,OAAOvwB,EAAM54C,aACXnU,KAAK2gG,kBAAkBluF,EAAMguF,IAIxC,kBAAkBhuF,EAAMguF,GACtB,MAAMG,KAAgBnuF,EAAKguF,cAA8B,gBAAdhuF,EAAKtV,MAEhD,OADAsV,EAAKguF,aAAeA,EACbG,EAAanuF,EAAOzS,KAAKy6E,WAAWhoE,EAAM,eAGnD,iBAAiB43B,GACf,OAAa,KAATA,GAA6D,KAA9CrqC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GACjD7uC,KAAKyqF,SAAS19B,EAAM54C,YAAa,GAGnCggE,MAAMiI,oBAAoBxmE,WAGnC,gBACE,OAAO5V,KAAK6gG,iBAAiB,eAAiB1sB,MAAM4F,iBAAiBnkE,WAGvE,kBACE,OAAO5V,KAAK6gG,iBAAiB,eAAiB1sB,MAAM2L,mBAAmBlqE,WAGzE,kBAAkB+oD,QACH9iE,IAAT8iE,GAAoBwV,MAAMyY,qBAAqBh3E,WAGrD,mBACE,OAAO5V,KAAK6gG,iBAAiB,YAAc1sB,MAAMyrB,oBAAoBhqF,WAGvE,UAAU0iE,GACU,gBAAdA,EAAKn7E,MAAwBg3E,MAAMuE,aAAa9iE,WAGtD,aAAanD,GACX,OAAIA,GAAsB,gBAAdA,EAAKtV,MAAgD,eAAtBsV,EAAKguF,cAC9ChuF,EAAKguF,aAAe,UACbhuF,GAGF0hE,MAAM4G,gBAAgBnlE,WAG/B,oBAAoBnD,GACdA,EAAKw5C,OAA6B,gBAApBx5C,EAAKw5C,MAAM9uD,MAC7Bg3E,MAAM2sB,uBAAuBlrF,WAG/B,yBAAyBnD,EAAM6lE,GAC7B,GAAkB,gBAAdA,EAAKn7E,MAA0Bm7E,EAAKJ,OAASI,EAAKJ,MAAMc,cAC1D,OAAO7E,MAAMsT,4BAA4B7xE,WAG3C,GAAI5V,KAAKqX,MAAM01C,EAAMoB,OAAQ,CAC3B,MAAM4pB,EAAOtlE,EAIb,OAHAslE,EAAK9rB,MAAQjsD,KAAK2gG,kBAAkBroB,EAAM,cAC1Ct4E,KAAK2C,OACLo1E,EAAKt0C,KAAOzjC,KAAKunF,eAAe,SACzBvnF,KAAKy6E,WAAW1C,EAAM,oBAK/B,OAFA/3E,KAAKugF,YACL9tE,EAAK7J,KAAO0vE,EAAK1vE,KACV5I,KAAK2gG,kBAAkBluF,EAAM,aAGtC,aACE,OAAOzS,KAAK6gG,iBAAiB,mBAAqB1sB,MAAM4sB,cAAcnrF,WAGxE,kBACE,OAAO5V,KAAK6gG,iBAAiB,eAAiB1sB,MAAM6sB,mBAAmBprF,WAGzE,WAAWnD,EAAM03E,EAAaC,GAC5B,MAAMjtF,EAAOgtF,EAAc,mBAAqB,kBAChDnqF,KAAK2C,OACL3C,KAAKihG,eAAexuF,GACpB,MAAMyuF,EAAYlhG,KAAKoa,MAAM+sE,OACvBhzE,EAAcnU,KAAK6gG,iBAAiB,cAE1C,GAAI1sF,EACF,GAAInU,KAAKqX,MAAM01C,EAAM2E,WAAa1xD,KAAKqX,MAAM01C,EAAM54C,cAAgBnU,KAAKqX,MAAM01C,EAAMY,QAClFl7C,EAAKpW,GAAK8X,MACL,IAAIi2E,IAAeD,EAGxB,OAFA13E,EAAKpW,GAAK,KACVoW,EAAKgxB,KAAOzjC,KAAK2gG,kBAAkBxsF,EAAa,aACzCnU,KAAKy6E,WAAWhoE,EAAMtV,GAE7B6C,KAAK68E,WAAW,KAAM,iCAGxB78E,KAAKqqF,aAAa53E,EAAM03E,EAAaC,GAKvC,OAFApqF,KAAKwrF,gBAAgB/4E,GACrBA,EAAKgxB,KAAOzjC,KAAK6gG,iBAAiB,cAAgB7gG,KAAKmhG,iBAAiB1uF,EAAK+kE,WAAY0pB,GAClFlhG,KAAKy6E,WAAWhoE,EAAMtV,GAG/B,YAAYsV,GACV,MAAM0B,EAAcnU,KAAK6gG,iBAAiB,cAC1C,IAAK1sF,EAAa,OAAOggE,MAAMoH,eAAe3lE,WAE9C,IAAK5V,KAAKghF,aAAa,UAAYhhF,KAAKqX,MAAM01C,EAAMpS,OAIlD,OAHAloC,EAAKgpE,WAAa,GAClBhpE,EAAKwG,OAAS,KACdxG,EAAKovE,YAAc7hF,KAAK2gG,kBAAkBxsF,EAAa,eAChDnU,KAAKy6E,WAAWhoE,EAAM,0BAG/BzS,KAAKohG,aAAa,qBAClB,MAAMpV,EAAYhsF,KAAKw6E,YAGvB,OAFAwR,EAAUxQ,SAAWrnE,EACrB1B,EAAKgpE,WAAa,CAACz7E,KAAKy6E,WAAWuR,EAAW,2BACvC7X,MAAMoH,YAAY9oE,GAG3B,2BACE,GAAIzS,KAAKqX,MAAM01C,EAAMwD,UAAW,CAC9B,MAAM5tD,EAAO3C,KAAKwyF,iBAElB,GAAIxyF,KAAKqhG,qBAAqB1+F,EAAM,SAC9B3C,KAAKm+C,MAAMzxC,WAAWqgD,EAAM54C,YAAY83C,MAAOjsD,KAAKshG,oBAAoB3+F,EAAO,IACjF,OAAO,EAKb,OAAOwxE,MAAMwT,2BAGf,iCAAiCl1E,GAC/B,SAAIA,EAAKgpE,YAAchpE,EAAKgpE,WAAWr/E,OAAS,IAIzC+3E,MAAMotB,oCAAoC3rF,WAGnD,YAAYnD,GACV,MAAM,WACJgpE,GACEhpE,GAEc,MAAdgpE,OAAqB,EAASA,EAAWr/E,UAC3CqW,EAAKgpE,WAAaA,EAAWj9E,OAAOiU,GAA+B,gBAAvBA,EAAK+oE,SAASr+E,OAG5Dg3E,MAAMqtB,YAAY/uF,GAClBA,EAAKgpE,WAAaA,EAGpB,YAAYhpE,GACV,MAAM0B,EAAcnU,KAAK6gG,iBAAiB,cAC1C,IAAK1sF,EAAa,OAAOggE,MAAMqN,eAAe5rE,WAG9C,GAFAnD,EAAKgpE,WAAa,IAEbz7E,KAAKghF,aAAa,UAAYhhF,KAAKqX,MAAM01C,EAAMpS,OAGlD,OAFAloC,EAAKwG,OAASjZ,KAAK2gG,kBAAkBxsF,EAAa,iBAClDnU,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,qBAG/B,MAAMu5E,EAAYhsF,KAAK+7E,gBAAgB5nE,GAKvC,GAJA63E,EAAUC,MAAQ93E,EAClBnU,KAAKy6E,WAAWuR,EAAW,0BAC3Bv5E,EAAKgpE,WAAWz/E,KAAKgwF,GAEjBhsF,KAAK+8E,IAAIhwB,EAAMpS,OAAQ,CACH36C,KAAKyhG,8BAA8BhvF,IACrCzS,KAAK0hG,2BAA2BjvF,GAMtD,OAHAzS,KAAK0/E,iBAAiB,QACtBjtE,EAAKwG,OAASjZ,KAAK2hG,oBACnB3hG,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,qBAG/B,oBACE,OAAOzS,KAAK6gG,iBAAiB,kBAAoB1sB,MAAMwtB,qBAAqB/rF,cA6G1EgsF,GAAmBvjG,OAAOkK,KAAK+uE,IAE/BuqB,GAAiB,CACrBC,WAAY,SACZC,oBAAgBlmG,EAChBmmG,UAAW,EACXC,2BAA2B,EAC3BC,4BAA4B,EAC5BC,6BAA6B,EAC7BC,yBAAyB,EACzBC,wBAAwB,EACxBprB,QAAS,GACTqrB,WAAY,KACZC,QAAQ,EACRC,QAAQ,EACRC,gCAAgC,EAChCC,eAAe,GAajB,MAAMC,GACJ,cACE3iG,KAAKmnF,YAAS,EACdnnF,KAAKw8E,aAAU,EACfx8E,KAAKi6E,cAAW,EAChBj6E,KAAK4iG,YAAS,EACd5iG,KAAK6iG,OAAS,GACd7iG,KAAK8iG,kBAAoB,EACzB9iG,KAAKkoF,UAAY,GACjBloF,KAAKyoF,0BAA4B,GACjCzoF,KAAK+iG,cAAe,EACpB/iG,KAAKs8F,wBAAyB,EAC9Bt8F,KAAKgjG,uBAAwB,EAC7BhjG,KAAKijG,YAAa,EAClBjjG,KAAKq/E,QAAS,EACdr/E,KAAKkkF,oBAAqB,EAC1BlkF,KAAK2+E,gBAAiB,EACtB3+E,KAAKgvF,gBAAiB,EACtBhvF,KAAKu9D,YAAa,EAClBv9D,KAAKu9F,kBAAmB,EACxBv9F,KAAKkjG,aAAe,CAClBC,yBAA0B,EAC1BC,cAAe,MAEjBpjG,KAAKqjG,WAAY,EACjBrjG,KAAKsjG,4BAA6B,EAClCtjG,KAAKujG,OAAS,GACdvjG,KAAKwjG,eAAiB,CAAC,IACvBxjG,KAAKw8F,UAAY,EACjBx8F,KAAK08F,UAAY,EACjB18F,KAAKkxC,SAAW,GAChBlxC,KAAKyjG,iBAAmB,GACxBzjG,KAAK0jG,gBAAkB,GACvB1jG,KAAK2jG,aAAe,GACpB3jG,KAAK4jG,oBAAsB,KAC3B5jG,KAAK6uC,IAAM,EACX7uC,KAAKy8E,UAAY,EACjBz8E,KAAK7C,KAAO4vD,EAAMM,IAClBrtD,KAAKT,MAAQ,KACbS,KAAKkpB,MAAQ,EACblpB,KAAK8lB,IAAM,EACX9lB,KAAKo9E,cAAgB,KACrBp9E,KAAK6jG,gBAAkB,KACvB7jG,KAAK8gF,aAAe,EACpB9gF,KAAKm9E,WAAa,EAClBn9E,KAAKqiB,QAAU,CAACi6C,EAAQC,gBACxBv8D,KAAKg9D,aAAc,EACnBh9D,KAAKm5F,aAAc,EACnBn5F,KAAK8jG,eAAiB,GACtB9jG,KAAK+jG,oBAAsB,GAC3B/jG,KAAKgkG,aAAe,EAGtB,KAAK1oG,GACH0E,KAAKmnF,QAAgC,IAAvB7rF,EAAQgnG,YAAsD,WAAvBhnG,EAAQwmG,WAC7D9hG,KAAKw8E,QAAUlhF,EAAQ0mG,UACvBhiG,KAAKi6E,SAAWj6E,KAAK4iG,OAAS5iG,KAAKikG,cAGrC,cACE,OAAO,IAAIvxC,EAAS1yD,KAAKw8E,QAASx8E,KAAK6uC,IAAM7uC,KAAKy8E,WAGpD,MAAMynB,GACJ,MAAM9pF,EAAQ,IAAIuoF,GACZp6F,EAAOlK,OAAOkK,KAAKvI,MAEzB,IAAK,IAAInD,EAAI,EAAGT,EAASmM,EAAKnM,OAAQS,EAAIT,EAAQS,IAAK,CACrD,MAAMO,EAAMmL,EAAK1L,GACjB,IAAIyH,EAAMtE,KAAK5C,IAEV8mG,GAAcvkG,MAAMmoD,QAAQxjD,KAC/BA,EAAMA,EAAIkE,SAGZ4R,EAAMhd,GAAOkH,EAGf,OAAO8V,GAKX,IAAI+pF,GAAW,SAAiB95D,GAC9B,OAAOA,GAAQ,IAAMA,GAAQ,IAE/B,MAAM+5D,GAAoB,IAAI1mG,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MACtD2mG,GAAoC,CACxCC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACzCC,IAAK,CAAC,GAAI,GAAI,GAAI,MAEdC,GAAkC,CACxC,IAAsC,CAAC,GAAI,KAC3CA,GAAgCC,IAAM,IAAID,GAAgCE,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IACnGF,GAAgCG,IAAM,IAAIH,GAAgCC,IAAK,GAAI,IACnFD,GAAgCD,IAAM,IAAIC,GAAgCG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KAC7H,MAAMC,GACJ,YAAYxqF,GACVpa,KAAK7C,UAAO,EACZ6C,KAAKT,WAAQ,EACbS,KAAKkpB,WAAQ,EACblpB,KAAK8lB,SAAM,EACX9lB,KAAKsqC,SAAM,EACXtqC,KAAK7C,KAAOid,EAAMjd,KAClB6C,KAAKT,MAAQ6a,EAAM7a,MACnBS,KAAKkpB,MAAQ9O,EAAM8O,MACnBlpB,KAAK8lB,IAAM1L,EAAM0L,IACjB9lB,KAAKsqC,IAAM,IAAIsoB,EAAex4C,EAAM6/D,SAAU7/D,EAAMwoF,SAo5CxD,MAAMiC,GACJ,cACE7kG,KAAK8kG,iBAAmB,EACxB9kG,KAAK+kG,aAAe,GAKxB,MAAMC,GACJ,YAAYC,EAAQp2D,EAAKvE,GACvBtqC,KAAK7C,UAAO,EACZ6C,KAAKkpB,WAAQ,EACblpB,KAAK8lB,SAAM,EACX9lB,KAAKsqC,SAAM,EACXtqC,KAAK8+C,WAAQ,EACb9+C,KAAK0jG,qBAAkB,EACvB1jG,KAAKyjG,sBAAmB,EACxBzjG,KAAKklG,mBAAgB,EACrBllG,KAAKk4E,WAAQ,EACbl4E,KAAK7C,KAAO,GACZ6C,KAAKkpB,MAAQ2lB,EACb7uC,KAAK8lB,IAAM,EACX9lB,KAAKsqC,IAAM,IAAIsoB,EAAetoB,IAChB,MAAV26D,OAAiB,EAASA,EAAO3pG,QAAQinG,UAAQviG,KAAK8+C,MAAQ,CAACjQ,EAAK,KAC1D,MAAVo2D,OAAiB,EAASA,EAAOlsD,YAAU/4C,KAAKsqC,IAAIyO,SAAWksD,EAAOlsD,UAG5E,UACE,MAAMkkC,EAAU,IAAI+nB,GACdz8F,EAAOlK,OAAOkK,KAAKvI,MAEzB,IAAK,IAAInD,EAAI,EAAGT,EAASmM,EAAKnM,OAAQS,EAAIT,EAAQS,IAAK,CACrD,MAAMO,EAAMmL,EAAK1L,GAEL,oBAARO,GAAqC,qBAARA,GAAsC,kBAARA,IAC7D6/E,EAAQ7/E,GAAO4C,KAAK5C,IAIxB,OAAO6/E,GAkDX,MAAMkoB,GAAgC1yF,GACf,4BAAdA,EAAKtV,KAAqCgoG,GAA8B1yF,EAAKwlE,YAAcxlE,EA2pEpG,MAAM2yF,GAAY,CAChBnpC,KAAM,QAEFopC,GAAc,CAClBppC,KAAM,UAMFqpC,GAAgB,mBA6qDtB,MAAMC,GACJ,cACEvlG,KAAKwlG,aAAe,IAAI9nG,IACxBsC,KAAKylG,cAAgB,IAAIjoG,IACzBwC,KAAKszE,sBAAwB,IAAI91E,KAIrC,MAAMkoG,GACJ,YAAYvyB,GACVnzE,KAAKuG,MAAQ,GACbvG,KAAKmzE,WAAQ,EACbnzE,KAAKszE,sBAAwB,IAAI91E,IACjCwC,KAAKmzE,MAAQA,EAGf,UACE,OAAOnzE,KAAKuG,MAAMvG,KAAKuG,MAAMnK,OAAS,GAGxC,QACE4D,KAAKuG,MAAMvK,KAAK,IAAIupG,IAGtB,OACE,MAAMI,EAAgB3lG,KAAKuG,MAAMrK,MAC3B+hB,EAAUje,KAAKie,UAErB,IAAK,IAAIqzE,EAAK,EAAGsU,EAAcjmG,MAAMw2B,KAAKwvE,EAAcryB,uBAAwBge,EAAKsU,EAAYxpG,OAAQk1F,IAAM,CAC7G,MAAO1oF,EAAMimC,GAAO+2D,EAAYtU,GAE5BrzE,EACGA,EAAQq1D,sBAAsB31E,IAAIiL,IACrCqV,EAAQq1D,sBAAsB/1E,IAAIqL,EAAMimC,GAG1C7uC,KAAKmzE,MAAMtkC,EAAKikB,EAAc4D,8BAA+B9tD,IAKnE,mBAAmBA,EAAM49E,EAAa33C,GACpC,MAAMg3D,EAAa7lG,KAAKie,UACxB,IAAI6nF,EAAYD,EAAWL,aAAa7nG,IAAIiL,GAE5C,GA/nZgCm9F,EA+nZ5Bvf,EAA2C,CAC7C,MAAMwf,EAAWF,GAAaD,EAAWJ,cAAcnoG,IAAIsL,GAE3D,GAAIo9F,EAAU,CACZ,MAAMC,EAtoZoB,EAsoZRD,EACZE,EAvoZoB,EAuoZR1f,EAGlBsf,GAvoZ4BC,EAqoZZC,MAroZYD,EAsoZZvf,IACmByf,IAAcC,EAC5CJ,GAAWD,EAAWJ,cAAc3oG,OAAO8L,QACtCk9F,GACVD,EAAWJ,cAAcloG,IAAIqL,EAAM49E,GAInCsf,GACF9lG,KAAKmzE,MAAMtkC,EAAKikB,EAAc+F,yBAA0BjwD,GAG1Di9F,EAAWL,aAAa5nG,IAAIgL,GAC5Bi9F,EAAWvyB,sBAAsBx2E,OAAO8L,GAG1C,eAAeA,EAAMimC,GACnB,IAAIg3D,EAEJ,IAAK,IAAIrU,EAAM,EAAG2U,EAAcnmG,KAAKuG,MAAOirF,EAAM2U,EAAY/pG,OAAQo1F,IAEpE,GADAqU,EAAaM,EAAY3U,GACrBqU,EAAWL,aAAa7nG,IAAIiL,GAAO,OAGrCi9F,EACFA,EAAWvyB,sBAAsB/1E,IAAIqL,EAAMimC,GAE3C7uC,KAAKmzE,MAAMtkC,EAAKikB,EAAc4D,8BAA+B9tD,IAMnE,MAAMw9F,WAjwDN,cAj1DA,cAlVA,cAjDA,cAnOA,cAztCA,cAl1NA,cAhVA,cA9BA,MACE,cACEpmG,KAAK1E,aAAU,EACf0E,KAAK4+D,cAAW,EAChB5+D,KAAK4zE,WAAQ,EACb5zE,KAAK6lG,gBAAa,EAClB7lG,KAAKq9D,eAAY,EACjBr9D,KAAKi3E,aAAU,EACfj3E,KAAK+4C,cAAW,EAChB/4C,KAAKqmG,mBAAoB,EACzBrmG,KAAKsmG,6BAA8B,EACnCtmG,KAAKoa,WAAQ,EACbpa,KAAKm+C,WAAQ,EACbn+C,KAAK5D,YAAS,EAGhB,UAAUwM,GACR,OAAO5I,KAAKi3E,QAAQt5E,IAAIiL,GAG1B,gBAAgBka,EAAQla,GACtB,GAAI5I,KAAKg3E,UAAUl0D,GAAS,OAAO9iB,KAAKi3E,QAAQ35E,IAAIwlB,GAAQla,KAU9D,WAAWq2E,GACLj/E,KAAK+4C,WAAUkmC,EAAQ30C,IAAIyO,SAAW/4C,KAAK+4C,UAC/C/4C,KAAKoa,MAAMqpF,iBAAiBznG,KAAKijF,GACjCj/E,KAAKoa,MAAMspF,gBAAgB1nG,KAAKijF,GAGlC,iCAAiCxsE,EAAMs6B,EAAUw5D,GAC/C,GAA0C,IAAtCvmG,KAAKoa,MAAMspF,gBAAgBtnG,OAC7B,OAGF,IAAIoqG,EAAc,KACd3pG,EAAIkwC,EAAS3wC,OAEjB,KAAuB,OAAhBoqG,GAAwB3pG,EAAI,GACjC2pG,EAAcz5D,IAAWlwC,GAG3B,GAAoB,OAAhB2pG,EACF,OAGF,IAAK,IAAI93E,EAAI,EAAGA,EAAI1uB,KAAKoa,MAAMspF,gBAAgBtnG,OAAQsyB,IACjD1uB,KAAKoa,MAAMspF,gBAAgBh1E,GAAG5I,IAAM9lB,KAAKoa,MAAMwpF,oBAAoB99E,MACrE9lB,KAAKoa,MAAMspF,gBAAgB59D,OAAOpX,EAAG,GACrCA,KAIJ,MAAM+3E,EAAsB,GAE5B,IAAK,IAAI5pG,EAAI,EAAGA,EAAImD,KAAKoa,MAAMspF,gBAAgBtnG,OAAQS,IAAK,CAC1D,MAAM6pG,EAAiB1mG,KAAKoa,MAAMspF,gBAAgB7mG,GAE9C6pG,EAAe5gF,IAAMrT,EAAKqT,KAC5B2gF,EAAoBzqG,KAAK0qG,GAEpBH,IACHvmG,KAAKoa,MAAMspF,gBAAgB59D,OAAOjpC,EAAG,GACrCA,YAG4BhB,IAA1B4W,EAAKgxF,mBACPhxF,EAAKgxF,iBAAmB,IAG1BhxF,EAAKgxF,iBAAiBznG,KAAK0qG,IAI3BH,IAAiBvmG,KAAKoa,MAAMspF,gBAAkB,IAE9C+C,EAAoBrqG,OAAS,EAC/BoqG,EAAY/C,iBAAmBgD,OACW5qG,IAAjC2qG,EAAY/C,mBACrB+C,EAAY/C,iBAAmB,IAInC,eAAehxF,GACb,GAAkB,YAAdA,EAAKtV,MAAsBsV,EAAKgxB,KAAKrnC,OAAS,EAAG,OACrD,MAAMmK,EAAQvG,KAAKoa,MAAMupF,aACzB,IAAIh+E,EAAYghF,EAAWlD,EAAkB5mG,EAAG6xB,EAEhD,GAAI1uB,KAAKoa,MAAMqpF,iBAAiBrnG,OAAS,EACnC4D,KAAKoa,MAAMqpF,iBAAiB,GAAGv6E,OAASzW,EAAKqT,KAC/C29E,EAAmBzjG,KAAKoa,MAAMqpF,iBAC9BzjG,KAAKoa,MAAMqpF,iBAAmB,IAE9BzjG,KAAKoa,MAAMqpF,iBAAiBrnG,OAAS,OAElC,GAAImK,EAAMnK,OAAS,EAAG,CAC3B,MAAMwqG,EAAc5pG,EAAKuJ,GAErBqgG,EAAYnD,kBAAoBmD,EAAYnD,iBAAiB,GAAGv6E,OAASzW,EAAKqT,MAChF29E,EAAmBmD,EAAYnD,wBACxBmD,EAAYnD,kBAQvB,IAJIl9F,EAAMnK,OAAS,GAAKY,EAAKuJ,GAAO2iB,OAASzW,EAAKyW,QAChDvD,EAAapf,EAAMrK,OAGdqK,EAAMnK,OAAS,GAAKY,EAAKuJ,GAAO2iB,OAASzW,EAAKyW,OACnDy9E,EAAYpgG,EAAMrK,MAKpB,IAFKyqG,GAAahhF,IAAYghF,EAAYhhF,GAEtCA,EACF,OAAQlT,EAAKtV,MACX,IAAK,mBACH6C,KAAK6mG,iCAAiCp0F,EAAMA,EAAKw6B,YACjD,MAEF,IAAK,gBACHjtC,KAAK6mG,iCAAiCp0F,EAAMA,EAAKw6B,YAAY,GAC7D,MAEF,IAAK,iBACHjtC,KAAK6mG,iCAAiCp0F,EAAMA,EAAKmD,WACjD,MAEF,IAAK,kBACH5V,KAAK6mG,iCAAiCp0F,EAAMA,EAAKs6B,UACjD,MAEF,IAAK,eACH/sC,KAAK6mG,iCAAiCp0F,EAAMA,EAAKs6B,UAAU,QAGtD/sC,KAAKoa,MAAMwpF,sBAAgE,oBAAxC5jG,KAAKoa,MAAMwpF,oBAAoBzmG,MAA4C,oBAAdsV,EAAKtV,MAAsE,oBAAxC6C,KAAKoa,MAAMwpF,oBAAoBzmG,MAA4C,oBAAdsV,EAAKtV,OAC9M6C,KAAK6mG,iCAAiCp0F,EAAM,CAACzS,KAAKoa,MAAMwpF,sBAG1D,GAAI+C,GACF,GAAIA,EAAUjD,gBACZ,GAAIiD,IAAcl0F,GAAQk0F,EAAUjD,gBAAgBtnG,OAAS,GAAKY,EAAK2pG,EAAUjD,iBAAiB59E,KAAOrT,EAAKyW,MAC5GzW,EAAKixF,gBAAkBiD,EAAUjD,uBAC1BiD,EAAUjD,qBAEjB,IAAK7mG,EAAI8pG,EAAUjD,gBAAgBtnG,OAAS,EAAGS,GAAK,IAAKA,EACvD,GAAI8pG,EAAUjD,gBAAgB7mG,GAAGipB,KAAOrT,EAAKyW,MAAO,CAClDzW,EAAKixF,gBAAkBiD,EAAUjD,gBAAgB59D,OAAO,EAAGjpC,EAAI,GAC/D,YAKH,GAAImD,KAAKoa,MAAMspF,gBAAgBtnG,OAAS,EAC7C,GAAIY,EAAKgD,KAAKoa,MAAMspF,iBAAiB59E,KAAOrT,EAAKyW,MAAO,CACtD,GAAIlpB,KAAKoa,MAAMwpF,oBACb,IAAKl1E,EAAI,EAAGA,EAAI1uB,KAAKoa,MAAMspF,gBAAgBtnG,OAAQsyB,IAC7C1uB,KAAKoa,MAAMspF,gBAAgBh1E,GAAG5I,IAAM9lB,KAAKoa,MAAMwpF,oBAAoB99E,MACrE9lB,KAAKoa,MAAMspF,gBAAgB59D,OAAOpX,EAAG,GACrCA,KAKF1uB,KAAKoa,MAAMspF,gBAAgBtnG,OAAS,IACtCqW,EAAKixF,gBAAkB1jG,KAAKoa,MAAMspF,gBAClC1jG,KAAKoa,MAAMspF,gBAAkB,QAE1B,CACL,IAAK7mG,EAAI,EAAGA,EAAImD,KAAKoa,MAAMspF,gBAAgBtnG,UACrC4D,KAAKoa,MAAMspF,gBAAgB7mG,GAAGipB,IAAMrT,EAAKyW,OADIrsB,KAMnD,MAAM6mG,EAAkB1jG,KAAKoa,MAAMspF,gBAAgBl7F,MAAM,EAAG3L,GAExD6mG,EAAgBtnG,SAClBqW,EAAKixF,gBAAkBA,GAGzBD,EAAmBzjG,KAAKoa,MAAMspF,gBAAgBl7F,MAAM3L,GAEpB,IAA5B4mG,EAAiBrnG,SACnBqnG,EAAmB,MAOzB,GAFAzjG,KAAKoa,MAAMwpF,oBAAsBnxF,EAE7BgxF,EACF,GAAIA,EAAiBrnG,QAAUqnG,EAAiB,GAAGv6E,OAASzW,EAAKyW,OAASlsB,EAAKymG,GAAkB39E,KAAOrT,EAAKqT,IAC3GrT,EAAKyyF,cAAgBzB,MAChB,CACL,MAAMqD,EAA4BrD,EAAiBr6C,UAAU61B,GAAWA,EAAQn5D,KAAOrT,EAAKqT,KAExFghF,EAA4B,GAC9Br0F,EAAKyyF,cAAgBzB,EAAiBj7F,MAAM,EAAGs+F,GAC/Cr0F,EAAKgxF,iBAAmBA,EAAiBj7F,MAAMs+F,IAE/Cr0F,EAAKgxF,iBAAmBA,EAK9Bl9F,EAAMvK,KAAKyW,KAyJb,uBAAuBo8B,GACrB,IAAIvE,EAEJ,OAD8BA,EAA1BuE,IAAQ7uC,KAAKoa,MAAM8O,MAAalpB,KAAKoa,MAAM6/D,SAAkBprC,IAAQ7uC,KAAKoa,MAAM0mE,aAAoB9gF,KAAKoa,MAAMypF,gBAAyBh1D,IAAQ7uC,KAAKoa,MAAM0L,IAAW9lB,KAAKoa,MAAMwoF,OAAgB/zD,IAAQ7uC,KAAKoa,MAAM+iE,WAAkBn9E,KAAKoa,MAAMgjE,cA/XzP,SAAqBj/B,EAAOzR,GAC1B,IAEIr1B,EAFAm1B,EAAO,EACPiwC,EAAY,EAIhB,IAFAnqB,EAAWy0C,UAAY,GAEf1vF,EAAQi7C,EAAWrf,KAAKkL,KAAW9mC,EAAM7L,MAAQkhC,GACvDF,IACAiwC,EAAYnqB,EAAWy0C,UAGzB,OAAO,IAAIr0C,EAASlmB,EAAME,EAAS+vC,GAoX6OuqB,CAAYhnG,KAAKm+C,MAAOtP,GAC/RvE,EAGT,MAAMuE,EAAKo4D,KAAkBv5D,GAC3B,OAAO1tC,KAAKknG,cAAcr4D,OAAKhzC,EAAWorG,KAAkBv5D,GAG9D,cAAcmB,EAAKxgC,EAAM44F,KAAkBv5D,GACzC,MAAMpD,EAAMtqC,KAAKmnG,uBAAuBt4D,GAClCohD,EAAUgX,EAAcz5F,QAAQ,UAAW,CAACyH,EAAGpY,IAAM6wC,EAAO7wC,IAAM,KAAKytC,EAAIkC,QAAQlC,EAAImC,UAC7F,OAAOzsC,KAAKonG,OAAO/oG,OAAOunC,OAAO,CAC/B0E,MACAuE,OACCxgC,GAAO4hF,GAGZ,OAAOoX,EAAcpX,GACnB,MAAMpnF,EAAM,IAAI4hC,YAAYwlD,GAG5B,GAFA5xF,OAAOunC,OAAO/8B,EAAKw+F,GAEfrnG,KAAK1E,QAAQonG,cAEf,OADK1iG,KAAKsnG,aAAatnG,KAAKoa,MAAMyoF,OAAO7mG,KAAK6M,GACvCA,EAEP,MAAMA,IAuzNV,YAAYvN,EAAS6iD,GACnBg2B,QACAn0E,KAAKsnG,iBAAc,EACnBtnG,KAAKwiG,OAAS,GACdxiG,KAAKoa,MAAQ,IAAIuoF,GACjB3iG,KAAKoa,MAAMi2E,KAAK/0F,GAChB0E,KAAKm+C,MAAQA,EACbn+C,KAAK5D,OAAS+hD,EAAM/hD,OACpB4D,KAAKsnG,aAAc,EAGrB,UAAUz6C,GACR7sD,KAAKwiG,OAAOpmG,OAAS4D,KAAKoa,MAAM4pF,aAChChkG,KAAKwiG,OAAOxmG,KAAK6wD,KACf7sD,KAAKoa,MAAM4pF,aAGf,OACOhkG,KAAKsnG,cACRtnG,KAAKunG,sBAEDvnG,KAAK1E,QAAQknG,QACfxiG,KAAKwnG,UAAU,IAAI5C,GAAM5kG,KAAKoa,SAIlCpa,KAAKoa,MAAM+iE,WAAan9E,KAAKoa,MAAM0L,IACnC9lB,KAAKoa,MAAM0mE,aAAe9gF,KAAKoa,MAAM8O,MACrClpB,KAAKoa,MAAMgjE,cAAgBp9E,KAAKoa,MAAMwoF,OACtC5iG,KAAKoa,MAAMypF,gBAAkB7jG,KAAKoa,MAAM6/D,SACxCj6E,KAAKivF,YAGP,IAAI9xF,GACF,QAAI6C,KAAKqX,MAAMla,KACb6C,KAAK2C,QACE,GAMX,MAAMxF,GACJ,OAAO6C,KAAKoa,MAAMjd,OAASA,EAG7B,YACE,MAAMsqG,EAAMznG,KAAKoa,MACjBpa,KAAKoa,MAAQqtF,EAAIrqF,OAAM,GACvBpd,KAAKsnG,aAAc,EACnBtnG,KAAK2C,OACL3C,KAAKsnG,aAAc,EACnB,MAAMI,EAAO1nG,KAAKoa,MAElB,OADApa,KAAKoa,MAAQqtF,EACNC,EAGT,iBACE,OAAO1nG,KAAKshG,oBAAoBthG,KAAKoa,MAAMy0B,KAG7C,oBAAoBA,GAClB2jB,EAAeu0C,UAAYl4D,EAE3B,OAAOA,EADM2jB,EAAevf,KAAKjzC,KAAKm+C,OACpB,GAAG/hD,OAGvB,oBACE,OAAO4D,KAAKm+C,MAAMjP,WAAWlvC,KAAKwyF,kBAGpC,UAAUrL,GAER,GADAnnF,KAAKoa,MAAM+sE,OAASA,EACfnnF,KAAKqX,MAAM01C,EAAMC,MAAShtD,KAAKqX,MAAM01C,EAAMK,QAAhD,CAGA,IAFAptD,KAAKoa,MAAMy0B,IAAM7uC,KAAKoa,MAAM8O,MAErBlpB,KAAKoa,MAAMy0B,IAAM7uC,KAAKoa,MAAMqiE,WACjCz8E,KAAKoa,MAAMqiE,UAAYz8E,KAAKm+C,MAAMwpD,YAAY,KAAM3nG,KAAKoa,MAAMqiE,UAAY,GAAK,IAC9Ez8E,KAAKoa,MAAMoiE,QAGfx8E,KAAKivF,aAGP,aACE,OAAOjvF,KAAKoa,MAAMiI,QAAQriB,KAAKoa,MAAMiI,QAAQjmB,OAAS,GAGxD,YACE,MAAM8gE,EAAal9D,KAAKk9D,aAMxB,IALoB,MAAdA,OAAqB,EAASA,EAAWd,gBAAgBp8D,KAAK4nG,YACpE5nG,KAAKoa,MAAM0pF,eAAiB,GAC5B9jG,KAAKoa,MAAM8O,MAAQlpB,KAAKoa,MAAMy0B,IAC9B7uC,KAAKoa,MAAM6/D,SAAWj6E,KAAKoa,MAAM6pF,cAE7BjkG,KAAKoa,MAAMy0B,KAAO7uC,KAAK5D,OAEzB,YADA4D,KAAKm8E,YAAYpvB,EAAMM,KAIzB,MAAMgP,EAAyB,MAAda,OAAqB,EAASA,EAAWb,SAEtDA,EACFA,EAASr8D,MAETA,KAAKo8E,iBAAiBp8E,KAAKm+C,MAAM0pD,YAAY7nG,KAAKoa,MAAMy0B,MAI5D,YAAYi5D,EAAOn0E,EAAMzK,EAAOpD,EAAKm0D,EAAU2oB,GAC7C,MAAM3jB,EAAU,CACd9hF,KAAM2qG,EAAQ,eAAiB,cAC/BvoG,MAAOo0B,EACPzK,MAAOA,EACPpD,IAAKA,EACLwkB,IAAK,IAAIsoB,EAAeqnB,EAAU2oB,IAEhC5iG,KAAK1E,QAAQknG,QAAQxiG,KAAKwnG,UAAUvoB,GACxCj/E,KAAKoa,MAAM82B,SAASl1C,KAAKijF,GACzBj/E,KAAKk/E,WAAWD,GAGlB,mBACE,MAAMhF,EAAWj6E,KAAKoa,MAAM6pF,cACtB/6E,EAAQlpB,KAAKoa,MAAMy0B,IACnB/oB,EAAM9lB,KAAKm+C,MAAMv+B,QAAQ,KAAM5f,KAAKoa,MAAMy0B,IAAM,GACtD,IAAa,IAAT/oB,EAAY,MAAM9lB,KAAKmzE,MAAMjqD,EAAO4pC,EAAc0I,qBAGtD,IAAInkD,EAEJ,IAJArX,KAAKoa,MAAMy0B,IAAM/oB,EAAM,EACvBwsC,EAAWy0C,UAAY79E,GAGf7R,EAAQi7C,EAAWrf,KAAKjzC,KAAKm+C,SAAW9mC,EAAM7L,MAAQxL,KAAKoa,MAAMy0B,OACrE7uC,KAAKoa,MAAMoiE,QACbx8E,KAAKoa,MAAMqiE,UAAYplE,EAAM7L,MAAQ6L,EAAM,GAAGjb,OAG5C4D,KAAKsnG,aACTtnG,KAAK+nG,aAAY,EAAM/nG,KAAKm+C,MAAM31C,MAAM0gB,EAAQ,EAAGpD,GAAMoD,EAAOlpB,KAAKoa,MAAMy0B,IAAKorC,EAAUj6E,KAAKoa,MAAM6pF,eAGvG,gBAAgB+D,GACd,MAAM9+E,EAAQlpB,KAAKoa,MAAMy0B,IACnBorC,EAAWj6E,KAAKoa,MAAM6pF,cAC5B,IAAI/nB,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAAOm5D,GAEjD,GAAIhoG,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,OACxB,MAAQm2D,EAAU2pB,MAASl8E,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,QAC/C8/E,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAItC7uC,KAAKsnG,aACTtnG,KAAK+nG,aAAY,EAAO/nG,KAAKm+C,MAAM31C,MAAM0gB,EAAQ8+E,EAAWhoG,KAAKoa,MAAMy0B,KAAM3lB,EAAOlpB,KAAKoa,MAAMy0B,IAAKorC,EAAUj6E,KAAKoa,MAAM6pF,eAG3H,YACEgE,EAAM,KAAOjoG,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,QAAQ,CACzC,MAAM8/E,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAE5C,OAAQqtC,GACN,KAAK,GACL,KAAK,IACL,KAAK,IACDl8E,KAAKoa,MAAMy0B,IACb,MAEF,KAAK,GAC+C,KAA9C7uC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,MACvC7uC,KAAKoa,MAAMy0B,IAGjB,KAAK,GACL,KAAK,KACL,KAAK,OACD7uC,KAAKoa,MAAMy0B,MACX7uC,KAAKoa,MAAMoiE,QACbx8E,KAAKoa,MAAMqiE,UAAYz8E,KAAKoa,MAAMy0B,IAClC,MAEF,KAAK,GACH,OAAQ7uC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,IAC7C,KAAK,GACH7uC,KAAK0vF,mBACL,MAEF,KAAK,GACH1vF,KAAKkoG,gBAAgB,GACrB,MAEF,QACE,MAAMD,EAGV,MAEF,QACE,IAAIx1C,EAAaypB,GAGf,MAAM+rB,IAFJjoG,KAAKoa,MAAMy0B,MASvB,YAAY1xC,EAAMmH,GAChBtE,KAAKoa,MAAM0L,IAAM9lB,KAAKoa,MAAMy0B,IAC5B7uC,KAAKoa,MAAMwoF,OAAS5iG,KAAKoa,MAAM6pF,cAC/B,MAAM9mC,EAAWn9D,KAAKoa,MAAMjd,KAC5B6C,KAAKoa,MAAMjd,KAAOA,EAClB6C,KAAKoa,MAAM7a,MAAQ+E,EACdtE,KAAKsnG,aAAatnG,KAAK0sD,cAAcyQ,GAG5C,uBACE,GAAuB,IAAnBn9D,KAAKoa,MAAMy0B,KAAa7uC,KAAKmoG,wBAC/B,OAGF,MAAM75E,EAAUtuB,KAAKoa,MAAMy0B,IAAM,EAC3BlsC,EAAO3C,KAAKm+C,MAAMjP,WAAW5gB,GAEnC,GAAI3rB,GAAQ,IAAMA,GAAQ,GACxB,MAAM3C,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcsH,0BAGjD,GAAa,MAATz3D,GAAyB,KAATA,GAAe3C,KAAKg3E,UAAU,kBAAmB,CAGnE,GAFAh3E,KAAKohG,aAAa,kBAE2C,SAAzDphG,KAAKk3E,gBAAgB,iBAAkB,cACzC,MAAMl3E,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAc,MAATlsC,EAAemwD,EAAckG,6CAA+ClG,EAAcmH,6CAGhH,MAATt3D,EACF3C,KAAKm8E,YAAYpvB,EAAMc,YAEvB7tD,KAAKm8E,YAAYpvB,EAAMQ,cAGzBvtD,KAAKoa,MAAMy0B,KAAO,OAElB7uC,KAAKyqF,SAAS19B,EAAM8B,KAAM,GAI9B,gBACE,MAAMlsD,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEhDlsC,GAAQ,IAAMA,GAAQ,GACxB3C,KAAKooG,YAAW,GAIL,KAATzlG,GAA6D,KAA9C3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,IACxD7uC,KAAKoa,MAAMy0B,KAAO,EAClB7uC,KAAKm8E,YAAYpvB,EAAM0B,cAErBzuD,KAAKoa,MAAMy0B,IACb7uC,KAAKm8E,YAAYpvB,EAAMsB,MAI3B,kBACE,GAAIruD,KAAKoa,MAAM4iD,cAAgBh9D,KAAKoa,MAAMilE,OAGxC,QAFEr/E,KAAKoa,MAAMy0B,SACb7uC,KAAKqoG,aAMM,KAFAroG,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAGlD7uC,KAAKyqF,SAAS19B,EAAMnnB,OAAQ,GAE5B5lC,KAAKyqF,SAAS19B,EAAMiD,MAAO,GAI/B,wBACE,GAAuB,IAAnBhwD,KAAKoa,MAAMy0B,KAAa7uC,KAAK5D,OAAS,EAAG,OAAO,EACpD,IAAI8/E,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAChD,GAAW,KAAPqtC,EAAW,OAAO,EACtB,MAAMhzD,EAAQlpB,KAAKoa,MAAMy0B,IAGzB,IAFA7uC,KAAKoa,MAAMy0B,KAAO,GAEV0jB,EAAU2pB,MAASl8E,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,QAC/C8/E,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAGxC,MAAMtvC,EAAQS,KAAKm+C,MAAM31C,MAAM0gB,EAAQ,EAAGlpB,KAAKoa,MAAMy0B,KAErD,OADA7uC,KAAKm8E,YAAYpvB,EAAM+B,qBAAsBvvD,IACtC,EAGT,sBAAsB8qC,GACpB,IAAIltC,EAAgB,KAATktC,EAAc0iB,EAAMgD,KAAOhD,EAAM+C,OACxCw4C,EAAQ,EACR3lG,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAClD,MAAMmuB,EAAch9D,KAAKoa,MAAM4iD,YAElB,KAAT3yB,GAAwB,KAAT1nC,IACjB2lG,IACA3lG,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAC9C1xC,EAAO4vD,EAAMkD,UAGF,KAATttD,GAAgBq6D,IAClBsrC,IACAnrG,EAAO4vD,EAAMnnB,QAGf5lC,KAAKyqF,SAASttF,EAAMmrG,GAGtB,mBAAmBj+D,GACjB,MAAM1nC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEpD,GAAIlsC,IAAS0nC,EAAb,CAUA,GAAa,MAATA,EAAc,CAChB,GAAa,KAAT1nC,EAEF,YADA3C,KAAKyqF,SAAS19B,EAAMoC,SAAU,GAIhC,GAAInvD,KAAKg3E,UAAU,mBAA8B,MAATr0E,EAAc,CACpD,GAA6D,QAAzD3C,KAAKk3E,gBAAgB,iBAAkB,cACzC,MAAMl3E,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcgG,2CAIjD,YADA94D,KAAKyqF,SAAS19B,EAAMgB,UAAW,GAIjC,GAAI/tD,KAAKg3E,UAAU,mBAA8B,KAATr0E,EAAa,CACnD,GAA6D,QAAzD3C,KAAKk3E,gBAAgB,iBAAkB,cACzC,MAAMl3E,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAciH,0CAIjD,YADA/5D,KAAKyqF,SAAS19B,EAAMW,YAAa,IAKxB,KAAT/qD,EAKJ3C,KAAKyqF,SAAkB,MAATpgD,EAAe0iB,EAAMwC,UAAYxC,EAAM0C,WAAY,GAJ/DzvD,KAAKyqF,SAAS19B,EAAMnnB,OAAQ,QAnCsB,KAA9C5lC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GACzC7uC,KAAKyqF,SAAS19B,EAAMnnB,OAAQ,GAE5B5lC,KAAKyqF,SAAkB,MAATpgD,EAAe0iB,EAAMsC,UAAYtC,EAAMuC,WAAY,GAuCvE,kBAGe,KAFAtvD,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAGlD7uC,KAAKyqF,SAAS19B,EAAMnnB,OAAQ,GAE5B5lC,KAAKyqF,SAAS19B,EAAMyC,WAAY,GAIpC,mBAAmBnlB,GACjB,MAAM1nC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEpD,GAAIlsC,IAAS0nC,EACX,OAAa,KAAT1nC,GAAgB3C,KAAK4+D,UAA0D,KAA9C5+D,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,IAAwC,IAA1B7uC,KAAKoa,MAAM+iE,aAAoBn9E,KAAK09D,6BAO9H19D,KAAKyqF,SAAS19B,EAAMiC,OAAQ,IAN1BhvD,KAAKkoG,gBAAgB,GACrBloG,KAAK4nG,iBACL5nG,KAAKivF,aAQI,KAATtsF,EACF3C,KAAKyqF,SAAS19B,EAAMnnB,OAAQ,GAE5B5lC,KAAKyqF,SAAS19B,EAAM8C,QAAS,GAIjC,gBAAgBxlB,GACd,MAAM1nC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GACpD,IAAIltC,EAAO,EAEX,OAAIgB,IAAS0nC,GACX1oC,EAAgB,KAAT0oC,GAA6D,KAA9CrqC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAAY,EAAI,EAExB,KAAjD7uC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAMltC,QACzC3B,KAAKyqF,SAAS19B,EAAMnnB,OAAQjkC,EAAO,QAIrC3B,KAAKyqF,SAAS19B,EAAM6C,SAAUjuD,IAInB,KAATgB,GAAwB,KAAT0nC,GAAgBrqC,KAAK4+D,UAA0D,KAA9C5+D,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,IAA2D,KAA9C7uC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,IAOlI,KAATlsC,IACFhB,EAAO,QAGT3B,KAAKyqF,SAAS19B,EAAM4C,WAAYhuD,KAV9B3B,KAAKkoG,gBAAgB,GACrBloG,KAAK4nG,iBACL5nG,KAAKivF,aAWT,kBAAkB5kD,GAChB,MAAM1nC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEpD,GAAa,KAATlsC,EAKJ,OAAa,KAAT0nC,GAAwB,KAAT1nC,GACjB3C,KAAKoa,MAAMy0B,KAAO,OAClB7uC,KAAKm8E,YAAYpvB,EAAMyB,aAIzBxuD,KAAKyqF,SAAkB,KAATpgD,EAAc0iB,EAAMgC,GAAKhC,EAAMkC,KAAM,GAVjDjvD,KAAKyqF,SAAS19B,EAAM2C,SAAwD,KAA9C1vD,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAAY,EAAI,GAazF,qBACE,MAAMlsC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAC9C05D,EAAQvoG,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAExC,KAATlsC,EACY,KAAV4lG,EACFvoG,KAAKyqF,SAAS19B,EAAMnnB,OAAQ,GAE5B5lC,KAAKyqF,SAAS19B,EAAMqC,kBAAmB,GAEvB,KAATzsD,GAAiB4lG,GAAS,IAAMA,GAAS,MAIhDvoG,KAAKoa,MAAMy0B,IACb7uC,KAAKm8E,YAAYpvB,EAAMuB,YAJvBtuD,KAAKoa,MAAMy0B,KAAO,EAClB7uC,KAAKm8E,YAAYpvB,EAAMwB,cAO3B,iBAAiBlkB,GACf,OAAQA,GACN,KAAK,GAEH,YADArqC,KAAKwoG,gBAGP,KAAK,GAGH,QAFExoG,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAMiB,QAGzB,KAAK,GAGH,QAFEhuD,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAMkB,QAGzB,KAAK,GAGH,QAFEjuD,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAMmB,MAGzB,KAAK,GAGH,QAFEluD,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAMpS,OAGzB,KAAK,GACH,GAAI36C,KAAKg3E,UAAU,mBAAmE,MAA9Ch3E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAAY,CACzF,GAA6D,QAAzD7uC,KAAKk3E,gBAAgB,iBAAkB,cACzC,MAAMl3E,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAckH,4CAGjDh6D,KAAKm8E,YAAYpvB,EAAMS,aACvBxtD,KAAKoa,MAAMy0B,KAAO,QAEhB7uC,KAAKoa,MAAMy0B,IACb7uC,KAAKm8E,YAAYpvB,EAAMO,UAGzB,OAEF,KAAK,GAGH,QAFEttD,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAMU,UAGzB,KAAK,IACH,GAAIztD,KAAKg3E,UAAU,mBAAmE,MAA9Ch3E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAAY,CACzF,GAA6D,QAAzD7uC,KAAKk3E,gBAAgB,iBAAkB,cACzC,MAAMl3E,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAciG,6CAGjD/4D,KAAKm8E,YAAYpvB,EAAMa,WACvB5tD,KAAKoa,MAAMy0B,KAAO,QAEhB7uC,KAAKoa,MAAMy0B,IACb7uC,KAAKm8E,YAAYpvB,EAAMY,QAGzB,OAEF,KAAK,IAGH,QAFE3tD,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAMe,QAGzB,KAAK,GAQH,YAPI9tD,KAAKg3E,UAAU,iBAAiE,KAA9Ch3E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAC3E7uC,KAAKyqF,SAAS19B,EAAMqB,YAAa,MAE/BpuD,KAAKoa,MAAMy0B,IACb7uC,KAAKm8E,YAAYpvB,EAAMoB,SAK3B,KAAK,GAEH,YADAnuD,KAAKyoG,qBAGP,KAAK,GAGH,QAFEzoG,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAM2B,WAGzB,KAAK,GACH,CACE,MAAM/rD,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAEpD,GAAa,MAATlsC,GAAyB,KAATA,EAElB,YADA3C,KAAK0oG,gBAAgB,IAIvB,GAAa,MAAT/lG,GAAyB,KAATA,EAElB,YADA3C,KAAK0oG,gBAAgB,GAIvB,GAAa,KAAT/lG,GAAwB,KAATA,EAEjB,YADA3C,KAAK0oG,gBAAgB,GAK3B,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEH,YADA1oG,KAAKooG,YAAW,GAGlB,KAAK,GACL,KAAK,GAEH,YADApoG,KAAK2oG,WAAWt+D,GAGlB,KAAK,GAEH,YADArqC,KAAK4oG,kBAGP,KAAK,GACL,KAAK,GAEH,YADA5oG,KAAKkvF,sBAAsB7kD,GAG7B,KAAK,IACL,KAAK,GAEH,YADArqC,KAAKmvF,mBAAmB9kD,GAG1B,KAAK,GAEH,YADArqC,KAAK6oG,kBAGP,KAAK,GACL,KAAK,GAEH,YADA7oG,KAAK8oG,mBAAmBz+D,GAG1B,KAAK,GACL,KAAK,GAEH,YADArqC,KAAK8/F,gBAAgBz1D,GAGvB,KAAK,GACL,KAAK,GAEH,YADArqC,KAAK+oG,kBAAkB1+D,GAGzB,KAAK,IAEH,YADArqC,KAAKyqF,SAAS19B,EAAMmC,MAAO,GAG7B,KAAK,GAGH,QAFElvD,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAM6B,IAGzB,KAAK,GAEH,YADA5uD,KAAKgpG,uBAGP,KAAK,GAEH,YADAhpG,KAAK2qF,WAGP,QACE,GAAIxsB,EAAkB9zB,GAEpB,YADArqC,KAAK2qF,WAMX,MAAM3qF,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAc0D,yBAA0Bt/C,OAAO0lE,cAAcvyC,IAGhG,SAASltC,EAAMwE,GACb,MAAM4lD,EAAMvnD,KAAKm+C,MAAM31C,MAAMxI,KAAKoa,MAAMy0B,IAAK7uC,KAAKoa,MAAMy0B,IAAMltC,GAC9D3B,KAAKoa,MAAMy0B,KAAOltC,EAClB3B,KAAKm8E,YAAYh/E,EAAMoqD,GAGzB,aACE,MAAMr+B,EAAQlpB,KAAKoa,MAAMy0B,IACzB,IAAIo6D,EAASC,EAEb,OAAS,CACP,GAAIlpG,KAAKoa,MAAMy0B,KAAO7uC,KAAK5D,OACzB,MAAM4D,KAAKmzE,MAAMjqD,EAAO4pC,EAAc2I,oBAGxC,MAAMygB,EAAKl8E,KAAKm+C,MAAMgN,OAAOnrD,KAAKoa,MAAMy0B,KAExC,GAAIwjB,EAAUxyC,KAAKq8D,GACjB,MAAMl8E,KAAKmzE,MAAMjqD,EAAO4pC,EAAc2I,oBAGxC,GAAIwtC,EACFA,GAAU,MACL,CACL,GAAW,MAAP/sB,EACFgtB,GAAU,OACL,GAAW,MAAPhtB,GAAcgtB,EACvBA,GAAU,OACL,GAAW,MAAPhtB,IAAegtB,EACxB,MAGFD,EAAiB,OAAP/sB,IAGVl8E,KAAKoa,MAAMy0B,IAGf,MAAMzb,EAAUpzB,KAAKm+C,MAAM31C,MAAM0gB,EAAOlpB,KAAKoa,MAAMy0B,OACjD7uC,KAAKoa,MAAMy0B,IACb,IAAIs6D,EAAO,GAEX,KAAOnpG,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,QAAQ,CACnC,MAAMgtG,EAAOppG,KAAKm+C,MAAMn+C,KAAKoa,MAAMy0B,KAC7Bw6D,EAAWrpG,KAAKm+C,MAAM0pD,YAAY7nG,KAAKoa,MAAMy0B,KAEnD,GAAIu1D,GAAkBzmG,IAAIyrG,GACpBD,EAAKvpF,QAAQwpF,IAAS,GACxBppG,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAM,EAAGikB,EAAc4B,0BAE1C,KAAI2J,EAAiBgrC,IAA0B,KAAbA,EAGvC,MAFArpG,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAM,EAAGikB,EAAcmE,wBAK7Cj3D,KAAKoa,MAAMy0B,IACbs6D,GAAQC,EAGVppG,KAAKm8E,YAAYpvB,EAAMI,OAAQ,CAC7BztC,QAAS0T,EACT0/C,MAAOq2B,IAIX,QAAQG,EAAO7xF,EAAK8xF,EAAUC,GAAoB,GAChD,MAAMtgF,EAAQlpB,KAAKoa,MAAMy0B,IACnB46D,EAA8B,KAAVH,EAAejF,GAAkCE,IAAMF,GAAkCC,UAC7GoF,EAA4B,KAAVJ,EAAe9E,GAAgCD,IAAgB,KAAV+E,EAAe9E,GAAgCG,IAAgB,IAAV2E,EAAc9E,GAAgCC,IAAMD,GAAgCE,IACtN,IAAIpc,GAAU,EACVqhB,EAAQ,EAEZ,IAAK,IAAI9sG,EAAI,EAAGshC,EAAW,MAAP1mB,EAActL,IAAWsL,EAAK5a,EAAIshC,IAAKthC,EAAG,CAC5D,MAAMwtC,EAAOrqC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAC9C,IAAIvqC,EAEJ,GAAa,KAAT+lC,EAAJ,CA4BA,GATE/lC,EADE+lC,GAAQ,GACJA,EAAO,GAAK,GACTA,GAAQ,GACXA,EAAO,GAAK,GACT85D,GAAS95D,GACZA,EAAO,GAEPl+B,IAGJ7H,GAAOglG,EACT,GAAItpG,KAAK1E,QAAQonG,eAAiBp+F,GAAO,EACvCA,EAAM,EACNtE,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAQrsB,EAAI,EAAGi2D,EAAciD,aAAcuzC,OAC5D,KAAIC,EAIT,MAHAjlG,EAAM,EACNgkF,GAAU,IAMZtoF,KAAKoa,MAAMy0B,IACb86D,EAAQA,EAAQL,EAAQhlG,MAzCxB,CACE,MAAMslB,EAAO5pB,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GAC9ClsC,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,KAEb,IAAnC66D,EAAgB9pF,QAAQjd,IAEjB8mG,EAAkB7pF,QAAQgK,IAAS,GAAK6/E,EAAkB7pF,QAAQjd,IAAS,GAAKrC,OAAOorD,MAAM/oD,KADtG3C,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAc4H,4BAKtC8uC,GACHxpG,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAciF,oCAGzC/3D,KAAKoa,MAAMy0B,KA8BjB,OAAI7uC,KAAKoa,MAAMy0B,MAAQ3lB,GAAgB,MAAPzR,GAAezX,KAAKoa,MAAMy0B,IAAM3lB,IAAUzR,GAAO6wE,EACxE,KAGFqhB,EAGT,gBAAgBL,GACd,MAAMpgF,EAAQlpB,KAAKoa,MAAMy0B,IACzB,IAAI+6D,GAAW,EACf5pG,KAAKoa,MAAMy0B,KAAO,EAClB,MAAMvqC,EAAMtE,KAAK6pG,QAAQP,GAEd,MAAPhlG,GACFtE,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAQ,EAAG4pC,EAAciD,aAAcuzC,GAG/D,MAAM3mG,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAE9C,GAAa,MAATlsC,IACA3C,KAAKoa,MAAMy0B,IACb+6D,GAAW,OACN,GAAa,MAATjnG,EACT,MAAM3C,KAAKmzE,MAAMjqD,EAAO4pC,EAAcgD,gBAGxC,GAAIqI,EAAkBn+D,KAAKm+C,MAAM0pD,YAAY7nG,KAAKoa,MAAMy0B,MACtD,MAAM7uC,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcgF,kBAGjD,GAAI8xC,EAAJ,CACE,MAAMriD,EAAMvnD,KAAKm+C,MAAM31C,MAAM0gB,EAAOlpB,KAAKoa,MAAMy0B,KAAKrhC,QAAQ,QAAS,IACrExN,KAAKm8E,YAAYpvB,EAAME,OAAQ1F,QAIjCvnD,KAAKm8E,YAAYpvB,EAAMC,IAAK1oD,GAG9B,WAAWwlG,GACT,MAAM5gF,EAAQlpB,KAAKoa,MAAMy0B,IACzB,IAAIk7D,GAAU,EACVH,GAAW,EACXI,GAAY,EACZC,GAAc,EACdC,GAAU,EAETJ,GAAsC,OAArB9pG,KAAK6pG,QAAQ,KACjC7pG,KAAKmzE,MAAMjqD,EAAO4pC,EAAcwD,eAGlC,MAAM6zC,EAAiBnqG,KAAKoa,MAAMy0B,IAAM3lB,GAAS,GAAsC,KAAjClpB,KAAKm+C,MAAMjP,WAAWhmB,GAE5E,GAAIihF,EAAgB,CAClB,MAAMC,EAAUpqG,KAAKm+C,MAAM31C,MAAM0gB,EAAOlpB,KAAKoa,MAAMy0B,KAEnD,GAAI7uC,KAAKoa,MAAM+sE,OACbnnF,KAAKmzE,MAAMjqD,EAAO4pC,EAAc4G,wBAC3B,CACL,MAAM2wC,EAAgBD,EAAQxqF,QAAQ,KAElCyqF,EAAgB,GAClBrqG,KAAKmzE,MAAMk3B,EAAgBnhF,EAAO4pC,EAAciJ,2BAIpDmuC,EAAUC,IAAmB,OAAOtqF,KAAKuqF,GAG3C,IAAIznG,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KA6C5C,GA3Ca,KAATlsC,GAAgBunG,MAChBlqG,KAAKoa,MAAMy0B,IACb7uC,KAAK6pG,QAAQ,IACbE,GAAU,EACVpnG,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,MAG5B,KAATlsC,GAAwB,MAATA,GAAkBunG,IACpCvnG,EAAO3C,KAAKm+C,MAAMjP,aAAalvC,KAAKoa,MAAMy0B,KAE7B,KAATlsC,GAAwB,KAATA,KACf3C,KAAKoa,MAAMy0B,IAGU,OAArB7uC,KAAK6pG,QAAQ,KACf7pG,KAAKmzE,MAAMjqD,EAAO4pC,EAAcyD,0BAGlCwzC,GAAU,EACVE,GAAc,EACdtnG,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,MAG7B,MAATlsC,KACEonG,GAAWI,IACbnqG,KAAKmzE,MAAMjqD,EAAO4pC,EAAc8C,wBAGhC51D,KAAKoa,MAAMy0B,IACb+6D,GAAW,GAGA,MAATjnG,IACF3C,KAAKohG,aAAa,UAAWphG,KAAKoa,MAAMy0B,MAEpCo7D,GAAeE,IACjBnqG,KAAKmzE,MAAMjqD,EAAO4pC,EAAcgD,kBAGhC91D,KAAKoa,MAAMy0B,IACbm7D,GAAY,GAGV7rC,EAAkBn+D,KAAKm+C,MAAM0pD,YAAY7nG,KAAKoa,MAAMy0B,MACtD,MAAM7uC,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcgF,kBAGjD,MAAMvQ,EAAMvnD,KAAKm+C,MAAM31C,MAAM0gB,EAAOlpB,KAAKoa,MAAMy0B,KAAKrhC,QAAQ,SAAU,IAEtE,GAAIo8F,EAEF,YADA5pG,KAAKm8E,YAAYpvB,EAAME,OAAQ1F,GAIjC,GAAIyiD,EAEF,YADAhqG,KAAKm8E,YAAYpvB,EAAMG,QAAS3F,GAIlC,MAAMjjD,EAAM4lG,EAAU1qF,SAAS+nC,EAAK,GAAKkE,WAAWlE,GACpDvnD,KAAKm8E,YAAYpvB,EAAMC,IAAK1oD,GAG9B,cAAcgmG,GAEZ,IAAIjgE,EAEJ,GAAW,MAHArqC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAG5B,CACd,MAAM07D,IAAYvqG,KAAKoa,MAAMy0B,IAI7B,GAHAxE,EAAOrqC,KAAKwqG,YAAYxqG,KAAKm+C,MAAMv+B,QAAQ,IAAK5f,KAAKoa,MAAMy0B,KAAO7uC,KAAKoa,MAAMy0B,KAAK,EAAMy7D,KACtFtqG,KAAKoa,MAAMy0B,IAEA,OAATxE,GAAiBA,EAAO,QAAU,CACpC,IAAIigE,EAGF,OAAO,KAFPtqG,KAAKmzE,MAAMo3B,EAASz3C,EAAc+C,wBAMtCxrB,EAAOrqC,KAAKwqG,YAAY,GAAG,EAAOF,GAGpC,OAAOjgE,EAGT,WAAWmK,GACT,IAAIyoB,EAAM,GACNgf,IAAej8E,KAAKoa,MAAMy0B,IAE9B,OAAS,CACP,GAAI7uC,KAAKoa,MAAMy0B,KAAO7uC,KAAK5D,OACzB,MAAM4D,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc4I,oBAGnD,MAAMwgB,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAC5C,GAAIqtC,IAAO1nC,EAAO,MAElB,GAAW,KAAP0nC,EACFjf,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAC/CouB,GAAOj9D,KAAKyqG,iBAAgB,GAC5BxuB,EAAaj8E,KAAKoa,MAAMy0B,SACnB,GAAW,OAAPqtC,GAAsB,OAAPA,IACtBl8E,KAAKoa,MAAMy0B,MACX7uC,KAAKoa,MAAMoiE,QACbx8E,KAAKoa,MAAMqiE,UAAYz8E,KAAKoa,MAAMy0B,QAC7B,IAAI0jB,EAAU2pB,GACnB,MAAMl8E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc4I,sBAE/C17D,KAAKoa,MAAMy0B,KAIjBouB,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,OAC/C7uC,KAAKm8E,YAAYpvB,EAAMK,OAAQ6P,GAGjC,gBACE,IAAIA,EAAM,GACNgf,EAAaj8E,KAAKoa,MAAMy0B,IACxB67D,GAAkB,EAEtB,OAAS,CACP,GAAI1qG,KAAKoa,MAAMy0B,KAAO7uC,KAAK5D,OACzB,MAAM4D,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc6I,sBAGnD,MAAMugB,EAAKl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAE5C,GAAW,KAAPqtC,GAAoB,KAAPA,GAA2D,MAA9Cl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,IAAM,GACnE,OAAI7uC,KAAKoa,MAAMy0B,MAAQ7uC,KAAKoa,MAAM8O,OAASlpB,KAAKqX,MAAM01C,EAAM/zB,UAC/C,KAAPkjD,GACFl8E,KAAKoa,MAAMy0B,KAAO,OAClB7uC,KAAKm8E,YAAYpvB,EAAM4B,kBAGrB3uD,KAAKoa,MAAMy0B,SACb7uC,KAAKm8E,YAAYpvB,EAAM2B,aAK3BuO,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,UAC/C7uC,KAAKm8E,YAAYpvB,EAAM/zB,SAAU0xE,EAAkB,KAAOztC,IAI5D,GAAW,KAAPif,EAAW,CACbjf,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAC/C,MAAMo6D,EAAUjpG,KAAKyqG,iBAAgB,GAErB,OAAZxB,EACFyB,GAAkB,EAElBztC,GAAOgsC,EAGThtB,EAAaj8E,KAAKoa,MAAMy0B,SACnB,GAAI0jB,EAAU2pB,GAAK,CAIxB,OAHAjf,GAAOj9D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,OAC7C7uC,KAAKoa,MAAMy0B,IAELqtC,GACN,KAAK,GAC2C,KAA1Cl8E,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,QACjC7uC,KAAKoa,MAAMy0B,IAGjB,KAAK,GACHouB,GAAO,KACP,MAEF,QACEA,GAAO/lD,OAAOknD,aAAa8d,KAI7Bl8E,KAAKoa,MAAMoiE,QACbx8E,KAAKoa,MAAMqiE,UAAYz8E,KAAKoa,MAAMy0B,IAClCotC,EAAaj8E,KAAKoa,MAAMy0B,UAEtB7uC,KAAKoa,MAAMy0B,KAKnB,gBAAgB87D,GACd,MAAML,GAAkBK,EAClBzuB,EAAKl8E,KAAKm+C,MAAMjP,aAAalvC,KAAKoa,MAAMy0B,KAG9C,SAFE7uC,KAAKoa,MAAMy0B,IAELqtC,GACN,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IACH,CACE,MAAM7xC,EAAOrqC,KAAKwqG,YAAY,GAAG,EAAOF,GACxC,OAAgB,OAATjgE,EAAgB,KAAOnzB,OAAOknD,aAAa/zB,GAGtD,KAAK,IACH,CACE,MAAMA,EAAOrqC,KAAK4qG,cAAcN,GAChC,OAAgB,OAATjgE,EAAgB,KAAOnzB,OAAO0lE,cAAcvyC,GAGvD,KAAK,IACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,GAC2C,KAA1CrqC,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,QACjC7uC,KAAKoa,MAAMy0B,IAGjB,KAAK,GACH7uC,KAAKoa,MAAMqiE,UAAYz8E,KAAKoa,MAAMy0B,MAChC7uC,KAAKoa,MAAMoiE,QAEf,KAAK,KACL,KAAK,KACH,MAAO,GAET,KAAK,GACL,KAAK,GACH,GAAImuB,EACF,OAAO,KACE3qG,KAAKoa,MAAM+sE,QACpBnnF,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAM,EAAGikB,EAAc2G,qBAGjD,QACE,GAAIyiB,GAAM,IAAMA,GAAM,GAAI,CACxB,MAAMquB,EAAUvqG,KAAKoa,MAAMy0B,IAAM,EAEjC,IAAIg8D,EADU7qG,KAAKm+C,MAAMxP,OAAO3uC,KAAKoa,MAAMy0B,IAAM,EAAG,GAAGx3B,MAAM,WACxC,GACjByzF,EAAQtrF,SAASqrF,EAAU,GAE3BC,EAAQ,MACVD,EAAWA,EAASriG,MAAM,GAAI,GAC9BsiG,EAAQtrF,SAASqrF,EAAU,IAG7B7qG,KAAKoa,MAAMy0B,KAAOg8D,EAASzuG,OAAS,EACpC,MAAMuG,EAAO3C,KAAKm+C,MAAMjP,WAAWlvC,KAAKoa,MAAMy0B,KAE9C,GAAiB,MAAbg8D,GAA6B,KAATloG,GAAwB,KAATA,EAAa,CAClD,GAAIgoG,EACF,OAAO,KACE3qG,KAAKoa,MAAM+sE,OACpBnnF,KAAKmzE,MAAMo3B,EAASz3C,EAAc2G,qBAElCz5D,KAAKoa,MAAM0pF,eAAe9nG,KAAKuuG,GAInC,OAAOrzF,OAAOknD,aAAa0sC,GAG7B,OAAO5zF,OAAOknD,aAAa8d,IAIjC,YAAYzkE,EAAK8xF,EAAUe,GACzB,MAAMC,EAAUvqG,KAAKoa,MAAMy0B,IACrB77B,EAAIhT,KAAK6pG,QAAQ,GAAIpyF,EAAK8xF,GAAU,GAU1C,OARU,OAANv2F,IACEs3F,EACFtqG,KAAKmzE,MAAMo3B,EAASz3C,EAAckD,uBAElCh2D,KAAKoa,MAAMy0B,IAAM07D,EAAU,GAIxBv3F,EAGT,YACE,IAAI2rD,EAAO,GACX3+D,KAAKoa,MAAM++E,aAAc,EACzB,MAAMjwE,EAAQlpB,KAAKoa,MAAMy0B,IACzB,IAAIotC,EAAaj8E,KAAKoa,MAAMy0B,IAE5B,KAAO7uC,KAAKoa,MAAMy0B,IAAM7uC,KAAK5D,QAAQ,CACnC,MAAM8/E,EAAKl8E,KAAKm+C,MAAM0pD,YAAY7nG,KAAKoa,MAAMy0B,KAE7C,GAAIwvB,EAAiB6d,GACnBl8E,KAAKoa,MAAMy0B,KAAOqtC,GAAM,MAAS,EAAI,OAChC,GAAIl8E,KAAKoa,MAAMmjD,YAAqB,KAAP2e,IAChCl8E,KAAKoa,MAAMy0B,QACR,IAAW,KAAPqtC,EAwBT,MAxBoB,CACpBl8E,KAAKoa,MAAM++E,aAAc,EACzBx6B,GAAQ3+D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAChD,MAAMk8D,EAAW/qG,KAAKoa,MAAMy0B,IACtBm8D,EAAkBhrG,KAAKoa,MAAMy0B,MAAQ3lB,EAAQi1C,EAAoBE,EAEvE,GAAgD,MAA5Cr+D,KAAKm+C,MAAMjP,aAAalvC,KAAKoa,MAAMy0B,KAAc,CACnD7uC,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcsE,sBACzC,WAGAp3D,KAAKoa,MAAMy0B,IACb,MAAMzG,EAAMpoC,KAAK4qG,eAAc,GAEnB,OAARxiE,IACG4iE,EAAgB5iE,IACnBpoC,KAAKmzE,MAAM43B,EAAUj4C,EAAc+B,4BAGrC8J,GAAQznD,OAAO0lE,cAAcx0C,IAG/B6zC,EAAaj8E,KAAKoa,MAAMy0B,MAM5B,OAAO8vB,EAAO3+D,KAAKm+C,MAAM31C,MAAMyzE,EAAYj8E,KAAKoa,MAAMy0B,KAGxD,WAAW8vB,GACT,MAAgB,eAATA,GAAkC,oBAATA,EAGlC,WACE,MAAMA,EAAO3+D,KAAKirG,YACZ9tG,EAAOwvD,EAASrvD,IAAIqhE,IAAS5R,EAAMnkD,MAErC5I,KAAKoa,MAAMmjD,YAAgBv9D,KAAKu9D,WAAWoB,IAAU3+D,KAAKoa,MAAMilE,QAClEr/E,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcqD,kBAAmBwI,GAG9D3+D,KAAKm8E,YAAYh/E,EAAMwhE,GAGzB,sBACE,MAAMu5B,EAAKl4F,KAAKoa,MAAMjd,KAAKgvD,QAEvB+rC,GAAMl4F,KAAKoa,MAAM++E,aACnBn5F,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcoD,2BAA4BgiC,GAI3E,aAAa/6B,GACX,MAAM71D,EAAStH,KAAKk9D,aAEpB,OAAI51D,IAAWg1D,EAAQQ,oBAAsBx1D,IAAWg1D,EAAQS,oBAI5DI,IAAapQ,EAAMoB,OAAU7mD,IAAWg1D,EAAQC,gBAAkBj1D,IAAWg1D,EAAQE,gBAIrFW,IAAapQ,EAAM+D,SAAWqM,IAAapQ,EAAMnkD,MAAQ5I,KAAKoa,MAAM4iD,YAC/Dh9D,KAAK09D,wBAGVP,IAAapQ,EAAM0D,OAAS0M,IAAapQ,EAAMmB,MAAQiP,IAAapQ,EAAMM,KAAO8P,IAAapQ,EAAMkB,QAAUkP,IAAapQ,EAAMyB,QAIjI2O,IAAapQ,EAAMY,OACdrmD,IAAWg1D,EAAQC,eAGxBY,IAAapQ,EAAMmE,MAAQiM,IAAapQ,EAAMoE,QAAUgM,IAAapQ,EAAMnkD,OAI3Eu0D,IAAapQ,EAAM4C,aAIf3vD,KAAKoa,MAAM4iD,eAvBT11D,EAAO60D,QA0BnB,cAAcgB,GACZ,MAAMhgE,EAAO6C,KAAKoa,MAAMjd,KACxB,IAAImf,GAEAnf,EAAKgvD,SAAYgR,IAAapQ,EAAMsB,KAAO8O,IAAapQ,EAAMwB,aAEvDjyC,EAASnf,EAAKuvD,eACvBpwC,EAAO7a,KAAKzB,KAAMm9D,GAElBn9D,KAAKoa,MAAM4iD,YAAc7/D,EAAKivD,WAJ9BpsD,KAAKoa,MAAM4iD,aAAc,IAW7B,SAASvqD,EAAMrV,EAAKkH,GAClB,IAAKmO,EAAM,QACGA,EAAKylE,MAAQzlE,EAAKylE,OAAS,IACnC96E,GAAOkH,EAGf,aAAa4mG,GACX,OAAOlrG,KAAKqX,MAAM01C,EAAM4C,aAAe3vD,KAAKoa,MAAM7a,QAAU2rG,EAG9D,iBAAiBA,GACXlrG,KAAKy+E,aAAaysB,GACpBlrG,KAAK2C,OAEL3C,KAAK68E,WAAW,KAAM9vB,EAAM4C,YAIhC,aAAa/mD,GACX,OAAO5I,KAAKqX,MAAM01C,EAAMnkD,OAAS5I,KAAKoa,MAAM7a,QAAUqJ,IAAS5I,KAAKoa,MAAM++E,YAG5E,qBAAqBgS,EAAWviG,GAC9B,MAAMwiG,EAAUD,EAAYviG,EAAKxM,OACjC,OAAO4D,KAAKm+C,MAAM31C,MAAM2iG,EAAWC,KAAaxiG,IAASwiG,IAAYprG,KAAKm+C,MAAM/hD,SAAWiiE,EAAiBr+D,KAAKm+C,MAAMjP,WAAWk8D,KAGpI,sBAAsBxiG,GACpB,MAAMjG,EAAO3C,KAAKwyF,iBAClB,OAAOxyF,KAAKqhG,qBAAqB1+F,EAAMiG,GAGzC,cAAcA,GACZ,OAAO5I,KAAKghF,aAAap4E,IAAS5I,KAAK+8E,IAAIhwB,EAAMnkD,MAGnD,iBAAiBA,EAAMqnF,GAChBjwF,KAAK4gF,cAAch4E,IAAO5I,KAAK68E,WAAW,KAAMoT,GAGvD,qBACE,OAAOjwF,KAAKqX,MAAM01C,EAAMM,MAAQrtD,KAAKqX,MAAM01C,EAAMe,SAAW9tD,KAAK09D,wBAGnE,wBACE,OAAOrL,EAAUxyC,KAAK7f,KAAKm+C,MAAM31C,MAAMxI,KAAKoa,MAAM+iE,WAAYn9E,KAAKoa,MAAM8O,QAG3E,mBACE,OAAOlpB,KAAK+8E,IAAIhwB,EAAMmB,OAASluD,KAAKumF,qBAGtC,YACOvmF,KAAKs7F,oBAAoBt7F,KAAK68E,WAAW,KAAM9vB,EAAMmB,MAG5D,OAAO/wD,EAAM0xC,GACX7uC,KAAK+8E,IAAI5/E,IAAS6C,KAAK68E,WAAWhuC,EAAK1xC,GAGzC,cAAc8yF,EAAU,qBAClBjwF,KAAKoa,MAAM8O,MAAQlpB,KAAKoa,MAAM+iE,YAChCn9E,KAAKmzE,MAAMnzE,KAAKoa,MAAM+iE,WAAY8S,GAItC,WAAWphD,EAAKw8D,EAAgB,oBAK9B,KAJ6B,iBAAlBA,IACTA,EAAgB,+BAA+BA,EAAcp/C,UAGzDjsD,KAAKmzE,MAAa,MAAPtkC,EAAcA,EAAM7uC,KAAKoa,MAAM8O,MAAOmiF,GAGzD,aAAaziG,EAAMimC,GACjB,IAAK7uC,KAAKg3E,UAAUpuE,GAClB,MAAM5I,KAAKknG,cAAqB,MAAPr4D,EAAcA,EAAM7uC,KAAKoa,MAAM8O,MAAO,CAC7DoiF,cAAe,CAAC1iG,IACf,kEAAkEA,MAGvE,OAAO,EAGT,gBAAgB2iG,EAAO18D,GACrB,IAAK08D,EAAMx8F,KAAKiE,GAAKhT,KAAKg3E,UAAUhkE,IAClC,MAAMhT,KAAKknG,cAAqB,MAAPr4D,EAAcA,EAAM7uC,KAAKoa,MAAM8O,MAAO,CAC7DoiF,cAAeC,GACd,sFAAsFA,EAAM9jG,KAAK,UAIxG,kCAC+B,IAAzBzH,KAAKoa,MAAMoiF,YAA6C,IAAzBx8F,KAAKoa,MAAMsiF,UAAmB18F,KAAKoa,MAAMoiF,SAAWx8F,KAAKoa,MAAMsiF,WAChG18F,KAAKmzE,MAAMnzE,KAAKoa,MAAMoiF,SAAU1pC,EAAc+I,yBAGnB,IAAzB77D,KAAKoa,MAAMsiF,UACb18F,KAAKmzE,MAAMnzE,KAAKoa,MAAMsiF,SAAU5pC,EAAcK,wBAIlD,SAAS93D,EAAImwG,EAAWxrG,KAAKoa,MAAMgD,SACjC,MAAMquF,EAAc,CAClBh5F,KAAM,MAGR,IACE,MAAMA,EAAOpX,EAAG,CAACoX,EAAO,QAEtB,MADAg5F,EAAYh5F,KAAOA,EACbg5F,IAGR,GAAIzrG,KAAKoa,MAAMyoF,OAAOzmG,OAASovG,EAAS3I,OAAOzmG,OAAQ,CACrD,MAAM4rF,EAAYhoF,KAAKoa,MAEvB,OADApa,KAAKoa,MAAQoxF,EACN,CACL/4F,OACA9I,MAAOq+E,EAAU6a,OAAO2I,EAAS3I,OAAOzmG,QACxCyxF,QAAQ,EACRF,SAAS,EACT3F,aAIJ,MAAO,CACLv1E,OACA9I,MAAO,KACPkkF,QAAQ,EACRF,SAAS,EACT3F,UAAW,MAEb,MAAOr+E,GACP,MAAMq+E,EAAYhoF,KAAKoa,MAGvB,GAFApa,KAAKoa,MAAQoxF,EAET7hG,aAAiB8gC,YACnB,MAAO,CACLh4B,KAAM,KACN9I,QACAkkF,QAAQ,EACRF,SAAS,EACT3F,aAIJ,GAAIr+E,IAAU8hG,EACZ,MAAO,CACLh5F,KAAMg5F,EAAYh5F,KAClB9I,MAAO,KACPkkF,QAAQ,EACRF,SAAS,EACT3F,aAIJ,MAAMr+E,GAIV,sBAAsBkvE,EAAqB6yB,GACzC,IAAK7yB,EAAqB,OAAO,EACjC,MAAM,gBACJisB,EAAe,YACfC,GACElsB,EACJ,IAAK6yB,EAAU,OAAO5G,GAAmB,GAAKC,GAAe,EAEzDD,GAAmB,GACrB9kG,KAAK68E,WAAWioB,GAGdC,GAAe,GACjB/kG,KAAKmzE,MAAM4xB,EAAajyC,EAAc2B,gBAI1C,wBACE,OAAOz0D,KAAKqX,MAAM01C,EAAMnkD,SAAW5I,KAAKoa,MAAMjd,KAAKgvD,SAAWnsD,KAAKqX,MAAM01C,EAAMK,SAAWptD,KAAKqX,MAAM01C,EAAMC,MAAQhtD,KAAKqX,MAAM01C,EAAME,SAAWjtD,KAAKqX,MAAM01C,EAAMG,WAiDlK,YACE,OAAO,IAAI83C,GAAKhlG,KAAMA,KAAKoa,MAAM8O,MAAOlpB,KAAKoa,MAAM6/D,UAGrD,YAAYprC,EAAKvE,GACf,OAAO,IAAI06D,GAAKhlG,KAAM6uC,EAAKvE,GAG7B,gBAAgBntC,GACd,OAAO6C,KAAKg4E,YAAY76E,EAAK+rB,MAAO/rB,EAAKmtC,IAAIphB,OAG/C,WAAWzW,EAAMtV,GACf,OAAO6C,KAAKm4E,aAAa1lE,EAAMtV,EAAM6C,KAAKoa,MAAM+iE,WAAYn9E,KAAKoa,MAAMgjE,eAGzE,aAAa3qE,EAAMtV,EAAM0xC,EAAKvE,GAO5B,OALA73B,EAAKtV,KAAOA,EACZsV,EAAKqT,IAAM+oB,EACXp8B,EAAK63B,IAAIxkB,IAAMwkB,EACXtqC,KAAK1E,QAAQinG,SAAQ9vF,EAAKqsC,MAAM,GAAKjQ,GACzC7uC,KAAK2rG,eAAel5F,GACbA,EAGT,mBAAmBA,EAAMyW,EAAO+wD,GAC9BxnE,EAAKyW,MAAQA,EACbzW,EAAK63B,IAAIphB,MAAQ+wD,EACbj6E,KAAK1E,QAAQinG,SAAQ9vF,EAAKqsC,MAAM,GAAK51B,GAG3C,iBAAiBzW,EAAMqT,EAAM9lB,KAAKoa,MAAM+iE,WAAYylB,EAAS5iG,KAAKoa,MAAMgjE,eACtE3qE,EAAKqT,IAAMA,EACXrT,EAAK63B,IAAIxkB,IAAM88E,EACX5iG,KAAK1E,QAAQinG,SAAQ9vF,EAAKqsC,MAAM,GAAKh5B,GAG3C,2BAA2BrT,EAAMm5F,GAC/B5rG,KAAKk/F,mBAAmBzsF,EAAMm5F,EAAa1iF,MAAO0iF,EAAathE,IAAIphB,SAUrE,aAAazW,GACX,IAAIy2E,EAAa2iB,EAEjB,IAAI7yB,OAAgBn9E,EAUpB,QARkB,4BAAd4W,EAAKtV,OAAqE,OAA7B+rF,EAAcz2E,EAAKylE,YAAiB,EAASgR,EAAYlQ,kBACxGA,EAAgBmsB,GAA8B1yF,GAEnB,eAAvBumE,EAAc77E,MAAgD,qBAAvB67E,EAAc77E,MACvD6C,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAc2D,iCAIjChkD,EAAKtV,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,MAEF,IAAK,mBACHsV,EAAKtV,KAAO,gBAEZ,IAAK,IAAIN,EAAI,EAAGT,EAASqW,EAAKw6B,WAAW7wC,OAAQY,EAAOZ,EAAS,EAAGS,EAAIT,EAAQS,IAAK,CACnF,IAAIivG,EAEJ,MAAMh1F,EAAOrE,EAAKw6B,WAAWpwC,GACvBm+E,EAASn+E,IAAMG,EACrBgD,KAAKi7E,iCAAiCnkE,EAAMkkE,GAExCA,GAAwB,gBAAdlkE,EAAK3Z,OAA0D,OAA9B2uG,EAAer5F,EAAKylE,YAAiB,EAAS4zB,EAAa1iB,gBACxGppF,KAAK+rG,iBAAiBt5F,EAAKylE,MAAMkR,eAIrC,MAEF,IAAK,iBACHppF,KAAK+6E,aAAatoE,EAAKlT,OACvB,MAEF,IAAK,gBACH,CACES,KAAKgsG,sBAAsBv5F,GAC3BA,EAAKtV,KAAO,cACZ,MAAM8jB,EAAMxO,EAAK+qE,SACjBx9E,KAAK+6E,aAAa95D,GAClB,MAGJ,IAAK,kBACHxO,EAAKtV,KAAO,eACZ6C,KAAKmpF,iBAAiB12E,EAAKs6B,SAAyC,OAA9B8+D,EAAep5F,EAAKylE,YAAiB,EAAS2zB,EAAaziB,eACjG,MAEF,IAAK,uBACmB,MAAlB32E,EAAKo4E,UACP7qF,KAAKmzE,MAAM1gE,EAAK4xB,KAAKve,IAAKgtC,EAAcqE,uBAG1C1kD,EAAKtV,KAAO,2BACLsV,EAAKo4E,SACZ7qF,KAAK+6E,aAAatoE,EAAK4xB,MACvB,MAEF,IAAK,0BACHrkC,KAAK+6E,aAAa/B,GAItB,OAAOvmE,EAGT,iCAAiCqE,EAAMkkE,GACrC,GAAkB,iBAAdlkE,EAAK3Z,KAAyB,CAChC,MAAMwM,EAAsB,QAAdmN,EAAKmlD,MAAgC,QAAdnlD,EAAKmlD,KAAiBnJ,EAAcsF,mBAAqBtF,EAAcuF,iBAC5Gr4D,KAAKmzE,MAAMr8D,EAAK1Z,IAAI8rB,MAAOvf,OACJ,kBAAdmN,EAAK3Z,MAA6B69E,EAG3Ch7E,KAAK+6E,aAAajkE,GAFlB9W,KAAK+rG,iBAAiBj1F,EAAKoS,OAM/B,iBAAiBkyD,EAAU2P,GACzB,IAAIjlE,EAAMs1D,EAASh/E,OAEnB,GAAI0pB,EAAK,CACP,MAAM9oB,EAAOo+E,EAASt1D,EAAM,GAE5B,GAA4C,iBAA/B,MAAR9oB,OAAe,EAASA,EAAKG,QAC9B2oB,OACG,GAA4C,mBAA/B,MAAR9oB,OAAe,EAASA,EAAKG,MAA2B,CAClEH,EAAKG,KAAO,cACZ,MAAM8jB,EAAMjkB,EAAKwgF,SACjBx9E,KAAK+6E,aAAa95D,GAED,eAAbA,EAAI9jB,MAAsC,qBAAb8jB,EAAI9jB,MAA4C,iBAAb8jB,EAAI9jB,MAAwC,kBAAb8jB,EAAI9jB,MACrG6C,KAAK68E,WAAW57D,EAAIiI,OAGlB6hE,GACF/qF,KAAKisG,4BAA4BlhB,KAGjCjlE,GAIN,IAAK,IAAIjpB,EAAI,EAAGA,EAAIipB,EAAKjpB,IAAK,CAC5B,MAAMsgG,EAAM/hB,EAASv+E,GAEjBsgG,IACFn9F,KAAK+6E,aAAaoiB,GAED,gBAAbA,EAAIhgG,MACN6C,KAAK+rG,iBAAiB5O,EAAIj0E,QAKhC,OAAOkyD,EAGT,iBAAiBA,EAAUC,GACzB,OAAOD,EAGT,qBAAqBA,EAAUC,GAC7Br7E,KAAKksG,iBAAiB9wB,EAAUC,GAEhC,IAAK,IAAIiW,EAAK,EAAGA,EAAKlW,EAASh/E,OAAQk1F,IAAM,CAC3C,MAAMhZ,EAAO8C,EAASkW,GAEsB,qBAA/B,MAARhZ,OAAe,EAASA,EAAKn7E,OAChC6C,KAAKs7E,qBAAqBhD,EAAKvrC,WAKrC,YAAY8rC,EAAqBgP,GAC/B,MAAMp1E,EAAOzS,KAAKw6E,YAGlB,OAFAx6E,KAAK2C,OACL8P,EAAK+qE,SAAWx9E,KAAKy9E,wBAAwB5E,OAAqBh9E,EAAWgsF,GACtE7nF,KAAKy6E,WAAWhoE,EAAM,iBAG/B,mBACE,MAAMA,EAAOzS,KAAKw6E,YAGlB,OAFAx6E,KAAK2C,OACL8P,EAAK+qE,SAAWx9E,KAAK4/F,mBACd5/F,KAAKy6E,WAAWhoE,EAAM,eAG/B,mBACE,OAAQzS,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMO,SACT,CACE,MAAM76C,EAAOzS,KAAKw6E,YAGlB,OAFAx6E,KAAK2C,OACL8P,EAAKs6B,SAAW/sC,KAAK80F,iBAAiB/nC,EAAMU,SAAU,IAAI,GACnDztD,KAAKy6E,WAAWhoE,EAAM,gBAGjC,KAAKs6C,EAAMY,OACT,OAAO3tD,KAAKmsG,gBAAgBp/C,EAAMe,QAAQ,GAG9C,OAAO9tD,KAAK8/E,kBAGd,iBAAiB73E,EAAOmkG,EAAeh9D,EAAYy9C,GACjD,MAAMwf,EAAO,GACb,IAAI7vE,GAAQ,EAEZ,MAAQx8B,KAAK+8E,IAAI90E,IAOf,GANIu0B,EACFA,GAAQ,EAERx8B,KAAKs9E,OAAOvwB,EAAMpS,OAGhBvL,GAAcpvC,KAAKqX,MAAM01C,EAAMpS,OACjC0xD,EAAKrwG,KAAK,UACL,IAAIgE,KAAK+8E,IAAI90E,GAClB,MACK,GAAIjI,KAAKqX,MAAM01C,EAAM0B,UAAW,CACrC49C,EAAKrwG,KAAKgE,KAAKk9F,6BAA6Bl9F,KAAKssG,qBACjDtsG,KAAKusG,oBAAoBH,GACzBpsG,KAAKs9E,OAAOr1E,GACZ,MACK,CACL,MAAM80F,EAAa,GAMnB,IAJI/8F,KAAKqX,MAAM01C,EAAM6B,KAAO5uD,KAAKg3E,UAAU,eACzCh3E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcuI,+BAGtCr7D,KAAKqX,MAAM01C,EAAM6B,KACtBmuC,EAAW/gG,KAAKgE,KAAKwsG,kBAGvBH,EAAKrwG,KAAKgE,KAAKysG,wBAAwB5f,EAAgBkQ,KAI3D,OAAOsP,EAGT,wBAAwBxf,EAAgBkQ,GACtC,MAAM14D,EAAOrkC,KAAK8rF,oBAClB9rF,KAAKk9F,6BAA6B74D,GAClC,MAAM84D,EAAMn9F,KAAK8rF,kBAAkBznD,EAAKnb,MAAOmb,EAAKiG,IAAIphB,MAAOmb,GAM/D,OAJI04D,EAAW3gG,SACbioC,EAAK04D,WAAaA,GAGbI,EAGT,6BAA6BxW,GAC3B,OAAOA,EAGT,kBAAkB3M,EAAUC,EAAU51C,GACpC,IAAIqoE,EAAWC,EAAWC,EAK1B,GAHA3yB,EAAqC,OAAzByyB,EAAYzyB,GAAoByyB,EAAY1sG,KAAKoa,MAAM6/D,SACnED,EAAqC,OAAzB2yB,EAAY3yB,GAAoB2yB,EAAY3sG,KAAKoa,MAAM8O,MACnEmb,EAAyB,OAAjBuoE,EAAQvoE,GAAgBuoE,EAAQ5sG,KAAK4/F,oBACxC5/F,KAAK+8E,IAAIhwB,EAAMgC,IAAK,OAAO1qB,EAChC,MAAM5xB,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAGxC,OAFAxnE,EAAK4xB,KAAOA,EACZ5xB,EAAKs1B,MAAQ/nC,KAAKy9E,0BACXz9E,KAAKy6E,WAAWhoE,EAAM,qBAG/B,UAAU6lE,EAAMzE,EAz/RA,GAy/RyB0E,EAAcC,EAAoBC,EAAoBo0B,GAAoB,GACjH,OAAQv0B,EAAKn7E,MACX,IAAK,aAKH,GAJI6C,KAAKoa,MAAM+sE,SAAW0lB,EAAoB9tC,EAAyBuZ,EAAK1vE,KAAM5I,KAAK4+D,UAAYE,EAA6BwZ,EAAK1vE,QACnI5I,KAAKmzE,MAAMmF,EAAKpvD,MA7/RR,KA6/Re2qD,EAA4B/gB,EAAcwG,oBAAsBxG,EAAcyG,2BAA4B+e,EAAK1vE,MAGpI2vE,EAAc,CAChB,MAAMn7E,EAAM,IAAIk7E,EAAK1vE,KAEjB2vE,EAAan7E,GACf4C,KAAKmzE,MAAMmF,EAAKpvD,MAAO4pC,EAAcqF,WAErCogB,EAAan7E,IAAO,EAIpBq7E,GAAoC,QAAdH,EAAK1vE,MAC7B5I,KAAKmzE,MAAMmF,EAAKpvD,MAAO4pC,EAAciE,qBA3gS7B,GA8gSJ8c,GACJ7zE,KAAK4zE,MAAMa,YAAY6D,EAAK1vE,KAAMirE,EAAayE,EAAKpvD,OAGtD,MAEF,IAAK,mBAphSO,KAqhSN2qD,GACF7zE,KAAKmzE,MAAMmF,EAAKpvD,MAAO4pC,EAAc6D,+BAGvC,MAEF,IAAK,gBACH,IAAK,IAAI66B,EAAM,EAAGsb,EAAmBx0B,EAAKrrC,WAAYukD,EAAMsb,EAAiB1wG,OAAQo1F,IAAO,CAC1F,IAAI16E,EAAOg2F,EAAiBtb,GAC5B,GAAkB,mBAAd16E,EAAK3Z,KAA2B2Z,EAAOA,EAAKvX,WAAW,GAAkB,iBAAduX,EAAK3Z,KAAyB,SAC7F6C,KAAK04E,UAAU5hE,EAAM+8D,EAAa0E,EAAc,+BAAgCE,GAGlF,MAEF,IAAK,eACH,IAAK,IAAIyZ,EAAM,EAAG6a,EAAiBz0B,EAAKvrC,SAAUmlD,EAAM6a,EAAe3wG,OAAQ81F,IAAO,CACpF,MAAM8a,EAAOD,EAAe7a,GAExB8a,GACFhtG,KAAK04E,UAAUs0B,EAAMn5B,EAAa0E,EAAc,8BAA+BE,GAInF,MAEF,IAAK,oBACHz4E,KAAK04E,UAAUJ,EAAKj0C,KAAMwvC,EAAa0E,EAAc,sBACrD,MAEF,IAAK,cACHv4E,KAAK04E,UAAUJ,EAAKkF,SAAU3J,EAAa0E,EAAc,gBACzD,MAEF,IAAK,0BACHv4E,KAAK04E,UAAUJ,EAAKL,WAAYpE,EAAa0E,EAAc,4BAC3D,MAEF,QAEIv4E,KAAKmzE,MAAMmF,EAAKpvD,MA7jSR,KA6jSe2qD,EAA4B/gB,EAAcsD,WAAatD,EAAcuD,kBAAmBmiB,IAKvH,sBAAsB/lE,GACO,eAAvBA,EAAK+qE,SAASrgF,MAAgD,qBAAvBsV,EAAK+qE,SAASrgF,MACvD6C,KAAKmzE,MAAM1gE,EAAK+qE,SAASt0D,MAAO4pC,EAAc+D,8BAIlD,oBAAoB5uD,GACdjI,KAAKqX,MAAM01C,EAAMpS,SACf36C,KAAKk3F,sBAAwBjvF,EAC/BjI,KAAKisG,4BAA4BjsG,KAAKoa,MAAM8O,OAE5ClpB,KAAK+rG,iBAAiB/rG,KAAKoa,MAAM8O,QAKvC,iBAAiB2lB,GACf,MAAM7uC,KAAKmzE,MAAMtkC,EAAKikB,EAAc8B,kBAGtC,4BAA4B/lB,GAC1B7uC,KAAKmzE,MAAMtkC,EAAKikB,EAAcoG,qBAMhC,WAAWpiD,EAAM6hE,EAAUC,EAAUC,GACnC,GAAkB,kBAAd/hE,EAAK3Z,MAA0C,iBAAd2Z,EAAK3Z,MAA2B2Z,EAAKie,UAAYje,EAAK+jE,UACzF,OAGF,MAAMz9E,EAAM0Z,EAAK1Z,IAGjB,GAAa,eAFa,eAAbA,EAAID,KAAwBC,EAAIwL,KAAOxL,EAAImC,OAE9B,CACxB,GAAIo5E,EAEF,YADA34E,KAAKmzE,MAAM/1E,EAAI8rB,MAAO4pC,EAAcmG,eAIlC2f,EAASq0B,OACPp0B,GACuC,IAArCA,EAAoBksB,cACtBlsB,EAAoBksB,YAAc3nG,EAAI8rB,OAGxClpB,KAAKmzE,MAAM/1E,EAAI8rB,MAAO4pC,EAAc2B,iBAIxCmkB,EAASq0B,MAAO,GAIpB,qBAAqB30B,EAAMwqB,GACzB,MAAqB,4BAAdxqB,EAAKn7E,MAAsCm7E,EAAKpvD,QAAU45E,EAGnE,gBACE,IAAIoK,EArhJM,EAuhJNltG,KAAKg3E,UAAU,kBAAoBh3E,KAAK4+D,WAC1CsuC,GAthJc,GAyhJhBltG,KAAK4zE,MAAM7qD,MA/pSO,GAgqSlB/oB,KAAKq9D,UAAUt0C,MAAMmkF,GACrBltG,KAAKivF,YACL,MAAM3W,EAAOt4E,KAAKq9E,kBAQlB,OANKr9E,KAAKqX,MAAM01C,EAAMM,MACpBrtD,KAAK68E,aAGPvE,EAAKpnC,SAAWlxC,KAAKoa,MAAM82B,SAC3BonC,EAAKuqB,OAAS7iG,KAAKoa,MAAMyoF,OAClBvqB,EAGT,gBAAgB60B,EAAYt0B,GAC1B,OAAIs0B,EACKntG,KAAKotG,cAAc,IAAMptG,KAAKqtG,oBAAoBx0B,IAGpD74E,KAAKstG,WAAW,IAAMttG,KAAKqtG,oBAAoBx0B,IAGxD,oBAAoBA,GAClB,MAAMmB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtB3B,EAAOt4E,KAAKwoF,iBAAiB3P,GAEnC,GAAI74E,KAAKqX,MAAM01C,EAAMpS,OAAQ,CAC3B,MAAMloC,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAGxC,IAFAxnE,EAAK86F,YAAc,CAACj1B,GAEbt4E,KAAK+8E,IAAIhwB,EAAMpS,QACpBloC,EAAK86F,YAAYvxG,KAAKgE,KAAKwoF,iBAAiB3P,IAI9C,OADA74E,KAAKksG,iBAAiBz5F,EAAK86F,aACpBvtG,KAAKy6E,WAAWhoE,EAAM,sBAG/B,OAAO6lE,EAGT,2BAA2BO,EAAqBqU,EAAgBrF,GAC9D,OAAO7nF,KAAKotG,cAAc,IAAMptG,KAAKwoF,iBAAiB3P,EAAqBqU,EAAgBrF,IAG7F,wBAAwBhP,EAAqBqU,EAAgBrF,GAC3D,OAAO7nF,KAAKstG,WAAW,IAAMttG,KAAKwoF,iBAAiB3P,EAAqBqU,EAAgBrF,IAG1F,iBAAiBhP,EAAqBqU,EAAgBrF,GACpD,MAAM7N,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAE5B,GAAIj6E,KAAKghF,aAAa,SAAU,CAC9B,GAAIhhF,KAAKq9D,UAAUC,SAAU,CAC3B,IAAIj5B,EAAOrkC,KAAKwtG,aAMhB,OAJItgB,IACF7oD,EAAO6oD,EAAezrF,KAAKzB,KAAMqkC,EAAM21C,EAAUC,IAG5C51C,EAEPrkC,KAAKoa,MAAM4iD,aAAc,EAI7B,IAAIywC,EAEA50B,EACF40B,GAAsB,GAEtB50B,EAAsB,IAAIgsB,GAC1B4I,GAAsB,IAGpBztG,KAAKqX,MAAM01C,EAAMiB,SAAWhuD,KAAKqX,MAAM01C,EAAMnkD,SAC/C5I,KAAKoa,MAAM0oF,iBAAmB9iG,KAAKoa,MAAM8O,OAG3C,IAAImb,EAAOrkC,KAAK0tG,sBAAsB70B,EAAqBgP,GAM3D,GAJIqF,IACF7oD,EAAO6oD,EAAezrF,KAAKzB,KAAMqkC,EAAM21C,EAAUC,IAG/Cj6E,KAAKoa,MAAMjd,KAAKqvD,SAAU,CAC5B,MAAM/5C,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAClC4Q,EAAW7qF,KAAKoa,MAAM7a,MAiB5B,OAhBAkT,EAAKo4E,SAAWA,EAEZ7qF,KAAKqX,MAAM01C,EAAMgC,KACnBt8C,EAAK4xB,KAAOrkC,KAAK+6E,aAAa12C,GAC9Bw0C,EAAoBksB,aAAe,GAEnCtyF,EAAK4xB,KAAOA,EAGVw0C,EAAoBisB,iBAAmBryF,EAAK4xB,KAAKnb,QACnD2vD,EAAoBisB,iBAAmB,GAGzC9kG,KAAK04E,UAAUr0C,OAAMxoC,OAAWA,EAAW,yBAC3CmE,KAAK2C,OACL8P,EAAKs1B,MAAQ/nC,KAAKwoF,mBACXxoF,KAAKy6E,WAAWhoE,EAAM,wBAK/B,OAJWg7F,GACTztG,KAAK2tG,sBAAsB90B,GAAqB,GAG3Cx0C,EAGT,sBAAsBw0C,EAAqBgP,GACzC,MAAM7N,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtB6oB,EAAmB9iG,KAAKoa,MAAM0oF,iBAC9BxqB,EAAOt4E,KAAK4tG,aAAa/0B,GAE/B,OAAI74E,KAAK6tG,qBAAqBv1B,EAAMwqB,GAC3BxqB,EAGFt4E,KAAK+nF,iBAAiBzP,EAAM0B,EAAUC,EAAU4N,GAGzD,iBAAiBvP,EAAM0B,EAAUC,EAAU4N,GACzC,GAAI7nF,KAAK+8E,IAAIhwB,EAAMuB,UAAW,CAC5B,MAAM77C,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAKxC,OAJAxnE,EAAKoN,KAAOy4D,EACZ7lE,EAAKs7B,WAAa/tC,KAAKy9E,0BACvBz9E,KAAKs9E,OAAOvwB,EAAMoB,OAClB17C,EAAKu7B,UAAYhuC,KAAKwoF,mBACfxoF,KAAKy6E,WAAWhoE,EAAM,yBAG/B,OAAO6lE,EAGT,aAAaO,GACX,MAAMmB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtB6oB,EAAmB9iG,KAAKoa,MAAM0oF,iBAC9BxqB,EAAOt4E,KAAKo3F,gBAAgBve,GAElC,OAAI74E,KAAK6tG,qBAAqBv1B,EAAMwqB,GAC3BxqB,EAGFt4E,KAAKo+F,YAAY9lB,EAAM0B,EAAUC,GAAW,GAGrD,YAAY51C,EAAM25D,EAAcC,EAAcC,GAC5C,IAAI4P,EAAO9tG,KAAKoa,MAAMjd,KAAKsvD,MAE3B,GAAY,MAARqhD,IAAiB9tG,KAAKq9D,UAAU0wC,QAAU/tG,KAAKqX,MAAM01C,EAAMiF,OACzD87C,EAAO5P,EAAS,CAClB,MAAMgN,EAAKlrG,KAAKoa,MAAMjd,KAEtB,GAAI+tG,IAAOn+C,EAAMoC,SAAU,CAGzB,GAFAnvD,KAAKohG,aAAa,oBAEdphG,KAAKoa,MAAMkpF,2BACb,OAAOj/D,EAGTrkC,KAAKoa,MAAM6oF,YAAa,EACxBjjG,KAAKguG,6BAA6B3pE,EAAM25D,GAG1C,MAAMvrF,EAAOzS,KAAKg4E,YAAYgmB,EAAcC,GAC5CxrF,EAAK4xB,KAAOA,EACZ5xB,EAAKo4E,SAAW7qF,KAAKoa,MAAM7a,MAEvB2rG,IAAOn+C,EAAMkD,UAA0B,oBAAd5rB,EAAKlnC,OAA+B6C,KAAK1E,QAAQmnG,gCAAoCp+D,EAAK6zC,OAAS7zC,EAAK6zC,MAAMc,eACzIh5E,KAAKmzE,MAAM9uC,EAAKm5C,SAASt0D,MAAO4pC,EAAciI,oCAGhD,MAAMkzC,EAAU/C,IAAOn+C,EAAMsC,WAAa67C,IAAOn+C,EAAMuC,WACjD4+C,EAAWhD,IAAOn+C,EAAMqC,kBAQ9B,GANI8+C,IACFJ,EAAO/gD,EAAMuC,WAAW7C,OAG1BzsD,KAAK2C,OAEDuoG,IAAOn+C,EAAMoC,UAAqE,YAAzDnvD,KAAKk3E,gBAAgB,mBAAoB,aAChEl3E,KAAKqX,MAAM01C,EAAMnkD,OAA8B,UAArB5I,KAAKoa,MAAM7a,OAAqBS,KAAKq9D,UAAU8wC,SAC3E,MAAMnuG,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcqH,kCAIrD1nD,EAAKs1B,MAAQ/nC,KAAKouG,qBAAqBlD,EAAI4C,GAC3C9tG,KAAKy6E,WAAWhoE,EAAMw7F,GAAWC,EAAW,oBAAsB,oBAClE,MAAMG,EAASruG,KAAKoa,MAAMjd,KAE1B,GAAI+wG,IAAaG,IAAWthD,EAAMsC,WAAag/C,IAAWthD,EAAMuC,aAAe2+C,GAAWI,IAAWthD,EAAMqC,kBACzG,MAAMpvD,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcuE,2BAGnD,OAAOr3D,KAAKo+F,YAAY3rF,EAAMurF,EAAcC,EAAcC,GAI9D,OAAO75D,EAGT,qBAAqB6mE,EAAI4C,GACvB,MAAM9zB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAE5B,OAAQixB,GACN,KAAKn+C,EAAMoC,SACT,OAAQnvD,KAAKk3E,gBAAgB,mBAAoB,aAC/C,IAAK,QACH,OAAOl3E,KAAKsuG,2BAA2B,IAC9BtuG,KAAKuuG,uBAAuBvuG,KAAKwuG,yBAAyBtD,EAAI4C,GAAO9zB,EAAUC,IAG1F,IAAK,SACH,OAAOj6E,KAAKyuG,+BAA+B,IAClCzuG,KAAK0uG,wBAAwBZ,IAI5C,QACE,OAAO9tG,KAAKwuG,yBAAyBtD,EAAI4C,IAI/C,yBAAyB5C,EAAI4C,GAC3B,MAAM9zB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,OAAOj6E,KAAKo+F,YAAYp+F,KAAKo3F,kBAAmBpd,EAAUC,EAAUixB,EAAG5+C,iBAAmBwhD,EAAO,EAAIA,GAGvG,gBAAgBj1B,GACd,GAAI74E,KAAKghF,aAAa,UAAYhhF,KAAK2uG,iBACrC,OAAO3uG,KAAK4uG,aAGd,MAAMtyF,EAAStc,KAAKqX,MAAM01C,EAAMiC,QAC1Bv8C,EAAOzS,KAAKw6E,YAElB,GAAIx6E,KAAKoa,MAAMjd,KAAK+hC,OAAQ,CAC1BzsB,EAAKo4E,SAAW7qF,KAAKoa,MAAM7a,MAC3BkT,EAAKysB,QAAS,EAEVl/B,KAAKqX,MAAM01C,EAAMiE,SACnBhxD,KAAKohG,aAAa,oBAGpB,MAAMyN,EAAW7uG,KAAKqX,MAAM01C,EAAMqF,SAKlC,GAJApyD,KAAK2C,OACL8P,EAAK+qE,SAAWx9E,KAAKo3F,kBACrBp3F,KAAK2tG,sBAAsB90B,GAAqB,GAE5C74E,KAAKoa,MAAM+sE,QAAU0nB,EAAU,CACjC,MAAM5tF,EAAMxO,EAAK+qE,SAEA,eAAbv8D,EAAI9jB,KACN6C,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcuG,cACd,qBAAbp4C,EAAI9jB,MAA4C,6BAAb8jB,EAAI9jB,MAA8D,gBAAtB8jB,EAAIoxD,SAASl1E,MACtG6C,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcsB,oBAIzC,IAAK93C,EACH,OAAOtc,KAAKy6E,WAAWhoE,EAAM,mBAIjC,OAAOzS,KAAK8uG,YAAYr8F,EAAM6J,EAAQu8D,GAGxC,YAAYpmE,EAAM6J,EAAQu8D,GACxB,GAAIv8D,EAEF,OADAtc,KAAK04E,UAAUjmE,EAAK+qE,cAAU3hF,OAAWA,EAAW,oBAC7CmE,KAAKy6E,WAAWhoE,EAAM,oBAG/B,MAAMunE,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,IAAI3B,EAAOt4E,KAAK+uG,oBAAoBl2B,GACpC,GAAI74E,KAAK2tG,sBAAsB90B,GAAqB,GAAQ,OAAOP,EAEnE,KAAOt4E,KAAKoa,MAAMjd,KAAK2K,UAAY9H,KAAKumF,sBAAsB,CAC5D,MAAM9zE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GACxCxnE,EAAKo4E,SAAW7qF,KAAKoa,MAAM7a,MAC3BkT,EAAKysB,QAAS,EACdzsB,EAAK+qE,SAAWlF,EAChBt4E,KAAK04E,UAAUJ,OAAMz8E,OAAWA,EAAW,qBAC3CmE,KAAK2C,OACL21E,EAAOt4E,KAAKy6E,WAAWhoE,EAAM,oBAG/B,OAAO6lE,EAGT,oBAAoBO,GAClB,MAAMmB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SACtB6oB,EAAmB9iG,KAAKoa,MAAM0oF,iBAC9BxqB,EAAOt4E,KAAK+5E,cAAclB,GAEhC,OAAI74E,KAAK6tG,qBAAqBv1B,EAAMwqB,GAC3BxqB,EAGFt4E,KAAKuuF,gBAAgBjW,EAAM0B,EAAUC,GAG9C,gBAAgBrjD,EAAMojD,EAAUC,EAAUyB,GACxC,MAAMthE,EAAQ,CACZwhE,qBAAqB,EACrBozB,gBAAiBhvG,KAAK49F,qBAAqBhnE,GAC3Cj6B,MAAM,GAGR,EAAG,CACD,MAAMsyG,EAA2BjvG,KAAKoa,MAAM4oF,sBAExC5oF,EAAM40F,kBACRhvG,KAAKoa,MAAM4oF,uBAAwB,GAGrCpsE,EAAO52B,KAAK27E,eAAe/kD,EAAMojD,EAAUC,EAAUyB,EAASthE,GAC9DA,EAAM40F,iBAAkB,EACxBhvG,KAAKoa,MAAM4oF,sBAAwBiM,SAC3B70F,EAAMzd,MAEhB,OAAOi6B,EAGT,eAAeA,EAAMojD,EAAUC,EAAUyB,EAASthE,GAChD,IAAKshE,GAAW17E,KAAK+8E,IAAIhwB,EAAMqB,aAC7B,OAAOpuD,KAAKkvG,UAAUt4E,EAAMojD,EAAUC,EAAUyB,EAASthE,GACpD,GAAIpa,KAAKqX,MAAM01C,EAAM2B,WAC1B,OAAO1uD,KAAK+9F,8BAA8BnnE,EAAMojD,EAAUC,EAAU7/D,GAGtE,IAAI8gE,GAAW,EAEf,GAAIl7E,KAAKqX,MAAM01C,EAAMwB,aAAc,CAGjC,GAFAn0C,EAAMwhE,oBAAsBV,GAAW,EAEnCQ,GAAwC,KAA7B17E,KAAKk3F,oBAElB,OADA98E,EAAMzd,MAAO,EACNi6B,EAGT52B,KAAK2C,OAGP,OAAK+4E,GAAW17E,KAAKqX,MAAM01C,EAAMiB,QACxBhuD,KAAKmvG,gCAAgCv4E,EAAMojD,EAAUC,EAAU7/D,EAAO8gE,GACpEA,GAAYl7E,KAAKqX,MAAM01C,EAAMO,WAAattD,KAAK+8E,IAAIhwB,EAAMsB,KAC3DruD,KAAKovG,YAAYx4E,EAAMojD,EAAUC,EAAU7/D,EAAO8gE,IAEzD9gE,EAAMzd,MAAO,EACNi6B,GAIX,YAAYA,EAAMojD,EAAUC,EAAU7/D,EAAO8gE,GAC3C,MAAMzoE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAClCllD,EAAW/0B,KAAK+8E,IAAIhwB,EAAMO,UAChC76C,EAAK5M,OAAS+wB,EACdnkB,EAAKsiB,SAAWA,EAChB,MAAMs9C,EAAWt9C,EAAW/0B,KAAKq9E,kBAAoBr9E,KAAKqvG,uBAAsB,GAgBhF,MAdsB,gBAAlBh9B,EAASl1E,OACc,UAArBsV,EAAK5M,OAAO1I,MACd6C,KAAKmzE,MAAM6G,EAAUlnB,EAAc+G,mBAGrC75D,KAAK6lG,WAAWyJ,eAAej9B,EAASh2E,GAAGuM,KAAMypE,EAASnpD,QAG5DzW,EAAK4/D,SAAWA,EAEZt9C,GACF/0B,KAAKs9E,OAAOvwB,EAAMU,UAGhBrzC,EAAMwhE,qBACRnpE,EAAKyoE,SAAWA,EACTl7E,KAAKy6E,WAAWhoE,EAAM,6BAEtBzS,KAAKy6E,WAAWhoE,EAAM,oBAIjC,UAAUmkB,EAAMojD,EAAUC,EAAUyB,EAASthE,GAC3C,MAAM3H,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAIxC,OAHAxnE,EAAK5M,OAAS+wB,EACdnkB,EAAK+6B,OAASxtC,KAAKuvG,kBACnBn1F,EAAMzd,MAAO,EACNqD,KAAKuuF,gBAAgBvuF,KAAKy6E,WAAWhoE,EAAM,kBAAmBunE,EAAUC,EAAUyB,GAG3F,gCAAgC9kD,EAAMojD,EAAUC,EAAU7/D,EAAO8gE,GAC/D,MAAMmhB,EAA4Br8F,KAAKoa,MAAMkiF,uBACvCC,EAAcv8F,KAAKoa,MAAMoiF,SACzBC,EAAcz8F,KAAKoa,MAAMsiF,SAC/B18F,KAAKoa,MAAMkiF,wBAAyB,EACpCt8F,KAAKoa,MAAMoiF,UAAY,EACvBx8F,KAAKoa,MAAMsiF,UAAY,EACvB18F,KAAK2C,OACL,IAAI8P,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GA+BtC,OA9BAxnE,EAAK+6B,OAAS5W,EAEVxc,EAAMwhE,sBACRnpE,EAAKyoE,SAAWA,GAIhBzoE,EAAKmD,UADHslE,EACel7E,KAAKquF,6BAA6BthC,EAAMkB,QAAQ,GAEhDjuD,KAAKquF,6BAA6BthC,EAAMkB,OAAQ7zC,EAAM40F,gBAA+B,WAAdp4E,EAAKz5B,KAAiC,UAAdy5B,EAAKz5B,KAAkBsV,GAGzIzS,KAAKm7E,qBAAqB1oE,EAAM2H,EAAMwhE,qBAElCxhE,EAAM40F,iBAAmBhvG,KAAKitF,0BAA4B/R,GAC5D9gE,EAAMzd,MAAO,EACb8V,EAAOzS,KAAKgtF,kCAAkChtF,KAAKg4E,YAAYgC,EAAUC,GAAWxnE,GACpFzS,KAAKwvG,iCACLxvG,KAAKoa,MAAMoiF,SAAWD,EACtBv8F,KAAKoa,MAAMsiF,SAAWD,IAEtBz8F,KAAKs7E,qBAAqB7oE,EAAKmD,YACV,IAAjB2mF,IAAoBv8F,KAAKoa,MAAMoiF,SAAWD,IAEzCv8F,KAAK2uG,kBAAqBtS,KAA8C,IAAjBI,IAC1Dz8F,KAAKoa,MAAMsiF,SAAWD,IAI1Bz8F,KAAKoa,MAAMkiF,uBAAyBD,EAC7B5pF,EAGT,8BAA8BmkB,EAAMojD,EAAUC,EAAU7/D,GACtD,MAAM3H,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAQxC,OAPAxnE,EAAKwpB,IAAMrF,EACXnkB,EAAKg9F,MAAQzvG,KAAK42F,eAAc,GAE5Bx8E,EAAMwhE,qBACR57E,KAAKmzE,MAAM6G,EAAUlnB,EAAcoF,4BAG9Bl4D,KAAKy6E,WAAWhoE,EAAM,4BAG/B,qBAAqBmkB,GACnB,MAAqB,eAAdA,EAAKz5B,MAAuC,UAAdy5B,EAAKhuB,MAAoB5I,KAAKoa,MAAM+iE,aAAevmD,EAAK9Q,MAAQ9lB,KAAKumF,sBAAwB3vD,EAAK9Q,IAAM8Q,EAAK1N,OAAU,GAAK0N,EAAK1N,QAAUlpB,KAAKoa,MAAM0oF,iBAG7L,qBAAqBrwF,EAAMyoE,GACzB,GAAyB,WAArBzoE,EAAK+6B,OAAOrwC,KAOd,GAN8B,IAA1BsV,EAAKmD,UAAUxZ,SACZ4D,KAAKg3E,UAAU,qBAClBh3E,KAAKohG,aAAa,qBAIQ,IAA1B3uF,EAAKmD,UAAUxZ,QAAgBqW,EAAKmD,UAAUxZ,OAAS,EACzD4D,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcyC,gBAAiBv1D,KAAKg3E,UAAU,qBAAuBh3E,KAAKg3E,UAAU,oBAAsB,uBAAyB,qBAE1J,IAAK,IAAIsa,EAAK,EAAGoe,EAAkBj9F,EAAKmD,UAAW07E,EAAKoe,EAAgBtzG,OAAQk1F,IAAM,CACpF,MAAMrwE,EAAMyuF,EAAgBpe,GAEX,kBAAbrwE,EAAI9jB,MACN6C,KAAKmzE,MAAMlyD,EAAIiI,MAAO4pC,EAAc2C,0BAM5C,OAAOz1D,KAAKy6E,WAAWhoE,EAAMyoE,EAAW,yBAA2B,kBAGrE,6BAA6BjzE,EAAO0nG,EAAoBC,EAAenS,EAAkBoS,GACvF,MAAMxD,EAAO,GACb,IAAIyD,EACAtzE,GAAQ,EACZ,MAAMuzE,EAAgC/vG,KAAKoa,MAAMkpF,2BAGjD,IAFAtjG,KAAKoa,MAAMkpF,4BAA6B,GAEhCtjG,KAAK+8E,IAAI90E,IAAQ,CACvB,GAAIu0B,EACFA,GAAQ,OAIR,GAFAx8B,KAAKs9E,OAAOvwB,EAAMpS,OAEd36C,KAAKqX,MAAMpP,GAAQ,EACjB2nG,GAAkB5vG,KAAKg3E,UAAU,qBAAwBh3E,KAAKg3E,UAAU,qBAC1Eh3E,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAchuB,EAAcwC,iCAGhDu6C,GACF7vG,KAAKgwG,SAASH,EAAc,gBAAiB7vG,KAAKoa,MAAM0mE,cAG1D9gF,KAAK2C,OACL,MAIA3C,KAAKqX,MAAM01C,EAAMiB,UAAY8hD,IAC/BA,EAAkB9vG,KAAKoa,MAAM8O,OAG/BmjF,EAAKrwG,KAAKgE,KAAK09F,mBAAkB,EAAOiS,EAAqB,IAAI9K,QAAqBhpG,EAAW8zG,EAAqB,CACpHzmF,MAAO,QACLrtB,EAAW4hG,IAQjB,OALIkS,GAAsBG,GAAmB9vG,KAAKitF,yBAChDjtF,KAAK68E,aAGP78E,KAAKoa,MAAMkpF,2BAA6ByM,EACjC1D,EAGT,wBACE,OAAOrsG,KAAKqX,MAAM01C,EAAMyB,SAAWxuD,KAAKumF,qBAG1C,kCAAkC9zE,EAAMhR,GACtC,IAAIwuG,EAIJ,OAFAjwG,KAAKs9E,OAAOvwB,EAAMyB,OAClBxuD,KAAK+uF,qBAAqBt8E,EAAMhR,EAAKmU,WAAW,EAAoC,OAA7Bq6F,EAAcxuG,EAAKy2E,YAAiB,EAAS+3B,EAAY7mB,eACzG32E,EAGT,kBACE,MAAMunE,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,OAAOj6E,KAAKuuF,gBAAgBvuF,KAAK+5E,gBAAiBC,EAAUC,GAAU,GAGxE,cAAcpB,GACR74E,KAAKoa,MAAMjd,OAAS4vD,EAAMiD,OAAOhwD,KAAKqoG,aAC1C,MAAMla,EAAanuF,KAAKoa,MAAM0oF,mBAAqB9iG,KAAKoa,MAAM8O,MAC9D,IAAIzW,EAEJ,OAAQzS,KAAKoa,MAAMjd,MACjB,KAAK4vD,EAAMyE,OACT,OAAOxxD,KAAKkwG,aAEd,KAAKnjD,EAAM6E,QAIT,OAHAn/C,EAAOzS,KAAKw6E,YACZx6E,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMsB,KACZruD,KAAKmwG,wBAAwB19F,IAGjCzS,KAAKqX,MAAM01C,EAAMiB,SACpBhuD,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAchuB,EAAcqI,mBAG7Cn7D,KAAKy6E,WAAWhoE,EAAM,WAE/B,KAAKs6C,EAAMwE,MAGT,OAFA9+C,EAAOzS,KAAKw6E,YACZx6E,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,kBAE/B,KAAKs6C,EAAMnkD,KACT,CACE,MAAMuwF,EAAcn5F,KAAKoa,MAAM++E,YACzB98F,EAAK2D,KAAK8/E,kBAEhB,IAAKqZ,GAA2B,UAAZ98F,EAAGuM,OAAqB5I,KAAKumF,qBAAsB,CACrE,GAAIvmF,KAAKqX,MAAM01C,EAAM6D,WAAY,CAC/B,MAAM5zD,EAAOgD,KAAKoa,MAAMiI,QAAQjmB,OAAS,EAEzC,GAAI4D,KAAKoa,MAAMiI,QAAQrlB,KAAUs/D,EAAQS,kBACvC,MAAM,IAAIxiC,MAAM,kBAKlB,OAFAv6B,KAAKoa,MAAMiI,QAAQrlB,GAAQs/D,EAAQQ,mBACnC98D,KAAK2C,OACE3C,KAAKowG,cAAcpwG,KAAK+7E,gBAAgB1/E,QAAKR,GAAW,GAC1D,GAAImE,KAAKqX,MAAM01C,EAAMnkD,MAC1B,OAAO5I,KAAKqwG,6BAA6Bh0G,GAI7C,OAAI8xF,GAAcnuF,KAAKqX,MAAM01C,EAAMyB,SAAWxuD,KAAKumF,sBACjDvmF,KAAK2C,OACE3C,KAAK+uF,qBAAqB/uF,KAAK+7E,gBAAgB1/E,GAAK,CAACA,IAAK,IAG5DA,EAGX,KAAK0wD,EAAMyD,IAEP,OAAOxwD,KAAKswG,UAGhB,KAAKvjD,EAAMI,OACT,CACE,MAAM5tD,EAAQS,KAAKoa,MAAM7a,MAIzB,OAHAkT,EAAOzS,KAAK63E,aAAat4E,EAAMA,MAAO,iBACtCkT,EAAKiN,QAAUngB,EAAMmgB,QACrBjN,EAAKqgE,MAAQvzE,EAAMuzE,MACZrgE,EAGX,KAAKs6C,EAAMC,IACT,OAAOhtD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,kBAE7C,KAAKwtD,EAAME,OACT,OAAOjtD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,iBAE7C,KAAKwtD,EAAMG,QACT,OAAOltD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,kBAE7C,KAAKwtD,EAAMK,OACT,OAAOptD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,iBAE7C,KAAKwtD,EAAM8E,MAGT,OAFAp/C,EAAOzS,KAAKw6E,YACZx6E,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,eAE/B,KAAKs6C,EAAM+E,MACX,KAAK/E,EAAMgF,OACT,OAAO/xD,KAAKowF,sBAEd,KAAKrjC,EAAMiB,OACT,OAAOhuD,KAAKouF,mCAAmCD,GAEjD,KAAKphC,EAAMS,YACX,KAAKT,EAAMQ,aAEP,OAAOvtD,KAAKuwG,eAAevwG,KAAKoa,MAAMjd,OAAS4vD,EAAMS,YAAcT,EAAMW,YAAcX,EAAMU,UAAU,GAAO,EAAMorB,GAGxH,KAAK9rB,EAAMO,SAEP,OAAOttD,KAAKuwG,eAAexjD,EAAMU,UAAU,GAAM,EAAOorB,GAG5D,KAAK9rB,EAAMa,UACX,KAAKb,EAAMc,WAEP,OAAO7tD,KAAKmsG,gBAAgBnsG,KAAKoa,MAAMjd,OAAS4vD,EAAMa,UAAYb,EAAMgB,UAAYhB,EAAMe,QAAQ,GAAO,EAAM+qB,GAGnH,KAAK9rB,EAAMY,OAEP,OAAO3tD,KAAKmsG,gBAAgBp/C,EAAMe,QAAQ,GAAO,EAAO+qB,GAG5D,KAAK9rB,EAAM6D,UACT,OAAO5wD,KAAKwwG,8BAEd,KAAKzjD,EAAM6B,GACT5uD,KAAKywG,kBAEP,KAAK1jD,EAAM0E,OAGT,OAFAh/C,EAAOzS,KAAKw6E,YACZx6E,KAAKihG,eAAexuF,GACbzS,KAAK07F,WAAWjpF,GAAM,GAE/B,KAAKs6C,EAAMuE,KACT,OAAOtxD,KAAK0wG,sBAEd,KAAK3jD,EAAM2B,UACT,OAAO1uD,KAAK42F,eAAc,GAE5B,KAAK7pC,EAAMqB,YACT,CACE37C,EAAOzS,KAAKw6E,YACZx6E,KAAK2C,OACL8P,EAAK5M,OAAS,KACd,MAAM2nC,EAAS/6B,EAAK+6B,OAASxtC,KAAKuvG,kBAElC,GAAoB,qBAAhB/hE,EAAOrwC,KACT,OAAO6C,KAAKy6E,WAAWhoE,EAAM,kBAE7B,MAAMzS,KAAKmzE,MAAM3lC,EAAOtkB,MAAO4pC,EAAckI,iBAInD,KAAKjO,EAAM8B,KACT,CACE,GAAI7uD,KAAKoa,MAAM6oF,WAcb,OAbAxwF,EAAOzS,KAAKw6E,YAEiD,UAAzDx6E,KAAKk3E,gBAAgB,mBAAoB,aAC3Cl3E,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAc6F,mCAGvC34D,KAAK2C,OAEA3C,KAAK2wG,uDACR3wG,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAc4F,wBAGvC14D,KAAK4wG,yBACE5wG,KAAKy6E,WAAWhoE,EAAM,iCAG/B,MAAMo+F,EAAS7wG,KAAKm+C,MAAM0pD,YAAY7nG,KAAKoa,MAAM0L,KAEjD,GAAIq4C,EAAkB0yC,IAAsB,KAAXA,EAAe,CAC9C,MAAM3nF,EAAQlpB,KAAKoa,MAAM8O,MAGzB,GAFAzW,EAAOzS,KAAKqvG,uBAAsB,GAE9BrvG,KAAKqX,MAAM01C,EAAMiF,KACnBhyD,KAAKohG,aAAa,aAClBphG,KAAK6lG,WAAWyJ,eAAe78F,EAAKpW,GAAGuM,KAAM6J,EAAKyW,WAC7C,KAAIlpB,KAAKg3E,UAAU,aAGxB,MAAMh3E,KAAK68E,WAAW3zD,GAFtBlpB,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc8F,oBAAqBnmD,EAAKpW,GAAGuM,MAK1E,OAAO6J,GAIb,KAAKs6C,EAAM4C,WAEP,GAAyB,MAArB3vD,KAAKoa,MAAM7a,MAAe,CAC5B,MAAMuxG,EAAc9wG,KAAKm+C,MAAM0pD,YAAY7nG,KAAKwyF,mBAE5Cr0B,EAAkB2yC,IAAgC,KAAhBA,IAClC9wG,KAAK+wG,gBAAgB,CAAC,MAAO,OAAQ,eAK/C,QACE,MAAM/wG,KAAK68E,cAIjB,6BAA6BxgF,GAC3B,MAAMoW,EAAOzS,KAAK+7E,gBAAgB1/E,GAC5BggG,EAA4Br8F,KAAKoa,MAAMkiF,uBACvC2S,EAA2BjvG,KAAKoa,MAAM4oF,sBACtCzG,EAAcv8F,KAAKoa,MAAMoiF,SACzBC,EAAcz8F,KAAKoa,MAAMsiF,SAC/B18F,KAAKoa,MAAMkiF,wBAAyB,EACpCt8F,KAAKoa,MAAM4oF,uBAAwB,EACnChjG,KAAKoa,MAAMoiF,UAAY,EACvBx8F,KAAKoa,MAAMsiF,UAAY,EACvB,MAAMhvD,EAAS,CAAC1tC,KAAK8/E,mBAarB,OAXI9/E,KAAK09D,yBACP19D,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAckE,2BAG3Ch3D,KAAKs9E,OAAOvwB,EAAMyB,OAClBxuD,KAAKwvG,iCACLxvG,KAAKoa,MAAMkiF,uBAAyBD,EACpCr8F,KAAKoa,MAAM4oF,sBAAwBiM,EACnCjvG,KAAKoa,MAAMoiF,SAAWD,EACtBv8F,KAAKoa,MAAMsiF,SAAWD,EACtBz8F,KAAK+uF,qBAAqBt8E,EAAMi7B,GAAQ,GACjCj7B,EAGT,UACEzS,KAAKohG,aAAa,iBAClB,MAAM3uF,EAAOzS,KAAKw6E,YAClBx6E,KAAK2C,OACL,MAAMquG,EAAYhxG,KAAKoa,MAAMmpF,OAI7B,OAHAvjG,KAAKoa,MAAMmpF,OAAS,GACpB9wF,EAAKgxB,KAAOzjC,KAAK+gG,aACjB/gG,KAAKoa,MAAMmpF,OAASyN,EACbhxG,KAAKy6E,WAAWhoE,EAAM,gBAG/B,aACE,MAAMA,EAAOzS,KAAKw6E,YAalB,OAZAx6E,KAAK2C,QAED3C,KAAKqX,MAAM01C,EAAMiB,SAAYhuD,KAAK4zE,MAAMyG,kBAAqBr6E,KAAK1E,QAAQ8mG,wBAElEpiG,KAAK4zE,MAAMq9B,YAAejxG,KAAK1E,QAAQ8mG,yBACjDpiG,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAc+H,iBAFrC76D,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAc8G,iBAKlC55D,KAAKqX,MAAM01C,EAAMiB,SAAYhuD,KAAKqX,MAAM01C,EAAMO,WAActtD,KAAKqX,MAAM01C,EAAMsB,MAChFruD,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcyI,kBAGhCv7D,KAAKy6E,WAAWhoE,EAAM,SAG/B,sBACE,MAAMA,EAAOzS,KAAKw6E,YAGlB,OAFA/nE,EAAKlT,MAAQS,KAAKqX,MAAM01C,EAAM+E,OAC9B9xD,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,kBAG/B,sBAAsBk5E,GAGpB,GAFkB3rF,KAAKqX,MAAM01C,EAAM8B,MAEpB,CACb7uD,KAAK+wG,gBAAgB,CAAC,yBAA0B,wBAE3CplB,GACH3rF,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAc6H,wBAG3C,MAAMloD,EAAOzS,KAAKw6E,YAIlB,OAHAx6E,KAAK2C,OACL3C,KAAK0gG,cAAc,6CACnBjuF,EAAKpW,GAAK2D,KAAK8/E,iBAAgB,GACxB9/E,KAAKy6E,WAAWhoE,EAAM,eAE7B,OAAOzS,KAAK8/E,iBAAgB,GAIhC,8BACE,MAAMrtE,EAAOzS,KAAKw6E,YAGlB,GAFAx6E,KAAK2C,OAED3C,KAAKq9D,UAAUC,UAAYt9D,KAAKqX,MAAM01C,EAAMsB,KAAM,CACpD,MAAM1mB,EAAO3nC,KAAKsmF,iBAAiBtmF,KAAK+7E,gBAAgBtpE,GAAO,YAE/D,OADAzS,KAAK2C,OACE3C,KAAKkxG,kBAAkBz+F,EAAMk1B,EAAM,QAG5C,OAAO3nC,KAAKowG,cAAc39F,GAG5B,kBAAkBA,EAAMk1B,EAAM5D,GAC5BtxB,EAAKk1B,KAAOA,EAEM,aAAdA,EAAK/+B,MAAwC,SAAjBm7B,IAC1B/jC,KAAKghF,aAAaj9C,GACpB/jC,KAAKohG,aAAa,gBACRphG,KAAKg3E,UAAU,iBACzBh3E,KAAK68E,cAIT,MAAMsc,EAAcn5F,KAAKoa,MAAM++E,YAO/B,OANA1mF,EAAK4/D,SAAWryE,KAAK8/E,iBAAgB,IAEjCrtE,EAAK4/D,SAASzpE,OAASm7B,GAAgBo1D,IACzCn5F,KAAKmzE,MAAM1gE,EAAK4/D,SAASnpD,MAAO4pC,EAAcsI,wBAAyBzzB,EAAK/+B,KAAMm7B,GAG7E/jC,KAAKy6E,WAAWhoE,EAAM,gBAG/B,wBAAwBA,GACtB,MAAMpW,EAAK2D,KAAKsmF,iBAAiBtmF,KAAK+7E,gBAAgBtpE,GAAO,UAa7D,OAZAzS,KAAK2C,OAED3C,KAAKghF,aAAa,UACfhhF,KAAK4+D,UACR5+D,KAAKknG,cAAc7qG,EAAG6sB,MAAO,CAC3BmhB,KAAM,2CACLyoB,EAAc4C,yBAGnB11D,KAAKqmG,mBAAoB,GAGpBrmG,KAAKkxG,kBAAkBz+F,EAAMpW,EAAI,QAG1C,aAAakD,EAAOpC,EAAM68E,EAAUC,GAClCD,EAAWA,GAAYh6E,KAAKoa,MAAM8O,MAClC+wD,EAAWA,GAAYj6E,KAAKoa,MAAM6/D,SAClC,MAAMxnE,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GAKxC,OAJAj6E,KAAKgwG,SAASv9F,EAAM,WAAYlT,GAChCS,KAAKgwG,SAASv9F,EAAM,MAAOzS,KAAKm+C,MAAM31C,MAAMwxE,EAAUh6E,KAAKoa,MAAM0L,MACjErT,EAAKlT,MAAQA,EACbS,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAMtV,GAG/B,mCAAmCgxF,GACjC,MAAMnU,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,IAAI31E,EACJtE,KAAK2C,OACL,MAAM05F,EAA4Br8F,KAAKoa,MAAMkiF,uBACvCC,EAAcv8F,KAAKoa,MAAMoiF,SACzBC,EAAcz8F,KAAKoa,MAAMsiF,SACzBqT,EAAgC/vG,KAAKoa,MAAMkpF,2BACjDtjG,KAAKoa,MAAMkiF,wBAAyB,EACpCt8F,KAAKoa,MAAMoiF,UAAY,EACvBx8F,KAAKoa,MAAMsiF,UAAY,EACvB18F,KAAKoa,MAAMkpF,4BAA6B,EACxC,MAAM6N,EAAgBnxG,KAAKoa,MAAM8O,MAC3BkoF,EAAgBpxG,KAAKoa,MAAM6/D,SAC3BmB,EAAW,GACXvC,EAAsB,IAAIgsB,GAC1Bhd,EAAmB,CACvB3+D,MAAO,GAET,IACImoF,EACAC,EAFA90E,GAAQ,EAIZ,MAAQx8B,KAAKqX,MAAM01C,EAAMkB,SAAS,CAChC,GAAIzxB,EACFA,GAAQ,OAIR,GAFAx8B,KAAKs9E,OAAOvwB,EAAMpS,MAAOktC,EAAiB3+D,OAAS,MAE/ClpB,KAAKqX,MAAM01C,EAAMkB,QAAS,CAC5BqjD,EAAqBtxG,KAAKoa,MAAM8O,MAChC,MAIJ,GAAIlpB,KAAKqX,MAAM01C,EAAM0B,UAAW,CAC9B,MAAM8iD,EAAqBvxG,KAAKoa,MAAM8O,MAChCsoF,EAAqBxxG,KAAKoa,MAAM6/D,SACtCo3B,EAAcrxG,KAAKoa,MAAM8O,MACzBkyD,EAASp/E,KAAKgE,KAAKwpF,eAAexpF,KAAKssG,mBAAoBiF,EAAoBC,IAC/ExxG,KAAKusG,oBAAoB,IACzB,MAEAnxB,EAASp/E,KAAKgE,KAAKy9E,wBAAwB5E,EAAqB74E,KAAKwpF,eAAgB3B,IAIzF,MAAM4pB,EAAczxG,KAAKoa,MAAM+iE,WACzBu0B,EAAc1xG,KAAKoa,MAAMgjE,cAC/Bp9E,KAAKs9E,OAAOvwB,EAAMkB,QAClBjuD,KAAKoa,MAAMkiF,uBAAyBD,EACpCr8F,KAAKoa,MAAMkpF,2BAA6ByM,EACxC,IAAI4B,EAAY3xG,KAAKg4E,YAAYgC,EAAUC,GAE3C,GAAIkU,GAAcnuF,KAAK+tF,qBAAuB4jB,EAAY3xG,KAAK8tF,WAAW6jB,IAAa,CAChF3xG,KAAK2uG,kBAAqB3uG,KAAKoa,MAAM4oF,wBACxChjG,KAAKoa,MAAMsiF,SAAWD,GAGxBz8F,KAAKwvG,iCACLxvG,KAAKoa,MAAMoiF,SAAWD,EACtBv8F,KAAKoa,MAAMsiF,SAAWD,EAEtB,IAAK,IAAIjL,EAAM,EAAGA,EAAMpW,EAASh/E,OAAQo1F,IAAO,CAC9C,MAAM7K,EAAQvL,EAASoW,GAEnB7K,EAAMzO,OAASyO,EAAMzO,MAAMc,eAC7Bh5E,KAAK68E,WAAW8J,EAAMzO,MAAM05B,YAKhC,OADA5xG,KAAK+uF,qBAAqB4iB,EAAWv2B,GAAU,GACxCu2B,EAwBT,IArBqB,IAAjBpV,IAAoBv8F,KAAKoa,MAAMoiF,SAAWD,IACzB,IAAjBE,IAAoBz8F,KAAKoa,MAAMsiF,SAAWD,GAEzCrhB,EAASh/E,QACZ4D,KAAK68E,WAAW78E,KAAKoa,MAAM0mE,cAGzBwwB,GAAoBtxG,KAAK68E,WAAWy0B,GACpCD,GAAarxG,KAAK68E,WAAWw0B,GACjCrxG,KAAK2tG,sBAAsB90B,GAAqB,GAC5CgP,EAAiB3+D,OAAOlpB,KAAK68E,WAAWgL,EAAiB3+D,OAC7DlpB,KAAKs7E,qBAAqBF,GAAU,GAEhCA,EAASh/E,OAAS,GACpBkI,EAAMtE,KAAKg4E,YAAYm5B,EAAeC,GACtC9sG,EAAIipG,YAAcnyB,EAClBp7E,KAAKm4E,aAAa7zE,EAAK,qBAAsBmtG,EAAaC,IAE1DptG,EAAM82E,EAAS,IAGZp7E,KAAK1E,QAAQmnG,+BAGhB,OAFAziG,KAAKgwG,SAAS1rG,EAAK,iBAAiB,GACpCtE,KAAKgwG,SAAS1rG,EAAK,aAAc01E,GAC1B11E,EAGT,MAAMs4D,EAAkB58D,KAAKg4E,YAAYgC,EAAUC,GAGnD,OAFArd,EAAgBqb,WAAa3zE,EAC7BtE,KAAKy6E,WAAW7d,EAAiB,2BAC1BA,EAGT,mBACE,OAAQ58D,KAAKumF,qBAGf,WAAW9zE,GACT,GAAIzS,KAAK+8E,IAAIhwB,EAAMyB,OACjB,OAAO/7C,EAIX,eAAeA,EAAMunE,EAAUC,GAC7B,OAAOxnE,EAGT,sBACE,MAAMA,EAAOzS,KAAKw6E,YAGlB,GAFAx6E,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMsB,KAAM,CACzB,MAAM1mB,EAAO3nC,KAAKsmF,iBAAiBtmF,KAAK+7E,gBAAgBtpE,GAAO,OAC/DzS,KAAK2C,OACL,MAAMkvG,EAAW7xG,KAAKkxG,kBAAkBz+F,EAAMk1B,EAAM,UAEpD,IAAK3nC,KAAK4zE,MAAMk+B,qBAAuB9xG,KAAK4zE,MAAMs1B,QAAS,CACzD,IAAIv/F,EAAQmpD,EAAc2H,oBAEtBz6D,KAAKg3E,UAAU,qBACjBrtE,GAAS,wBAGX3J,KAAKmzE,MAAM0+B,EAAS3oF,MAAOvf,GAG7B,OAAOkoG,EAGT,OAAO7xG,KAAK+xG,SAASt/F,GAGvB,SAASA,GAYP,OAXAA,EAAK+6B,OAASxtC,KAAKuvG,kBAEM,WAArB98F,EAAK+6B,OAAOrwC,KACd6C,KAAKmzE,MAAM1gE,EAAK+6B,OAAOtkB,MAAO4pC,EAAc0C,4BACd,6BAArB/iD,EAAK+6B,OAAOrwC,MAA4D,2BAArBsV,EAAK+6B,OAAOrwC,KACxE6C,KAAKmzE,MAAMnzE,KAAKoa,MAAM+iE,WAAYrqB,EAAcmF,uBACvCj4D,KAAK+8E,IAAIhwB,EAAMwB,cACxBvuD,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcmF,uBAG7Cj4D,KAAK8uF,kBAAkBr8E,GAChBzS,KAAKy6E,WAAWhoE,EAAM,iBAG/B,kBAAkBA,GAChB,GAAIzS,KAAK+8E,IAAIhwB,EAAMiB,QAAS,CAC1B,MAAMnuD,EAAOG,KAAKgyG,cAAcjlD,EAAMkB,QACtCjuD,KAAKksG,iBAAiBrsG,GACtB4S,EAAKmD,UAAY/V,OAEjB4S,EAAKmD,UAAY,GAIrB,qBAAqBq8F,GACnB,MAAMjF,EAAOhtG,KAAKw6E,YAclB,OAZyB,OAArBx6E,KAAKoa,MAAM7a,QACR0yG,GACHjyG,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAQ,EAAG4pC,EAAcmD,gCAInD+2C,EAAKztG,MAAQ,CACX9D,IAAKuE,KAAKm+C,MAAM31C,MAAMxI,KAAKoa,MAAM8O,MAAOlpB,KAAKoa,MAAM0L,KAAKtY,QAAQ,SAAU,MAC1E0kG,OAAQlyG,KAAKoa,MAAM7a,OAErBS,KAAK2C,OACLqqG,EAAKmF,KAAOnyG,KAAKqX,MAAM01C,EAAM2B,WACtB1uD,KAAKy6E,WAAWuyB,EAAM,mBAG/B,cAAciF,GACZ,MAAMx/F,EAAOzS,KAAKw6E,YAClBx6E,KAAK2C,OACL8P,EAAK86F,YAAc,GACnB,IAAI6E,EAASpyG,KAAKqyG,qBAAqBJ,GAGvC,IAFAx/F,EAAK6/F,OAAS,CAACF,IAEPA,EAAOD,MACbnyG,KAAKs9E,OAAOvwB,EAAM4B,cAClBl8C,EAAK86F,YAAYvxG,KAAKgE,KAAK62F,6BAC3B72F,KAAKs9E,OAAOvwB,EAAMe,QAClBr7C,EAAK6/F,OAAOt2G,KAAKo2G,EAASpyG,KAAKqyG,qBAAqBJ,IAItD,OADAjyG,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,mBAG/B,4BACE,OAAOzS,KAAKq9E,kBAGd,gBAAgBp1E,EAAOyyE,EAAW/B,EAAUE,GACtCF,GACF34E,KAAKohG,aAAa,kBAGpB,MAAM2O,EAAgC/vG,KAAKoa,MAAMkpF,2BACjDtjG,KAAKoa,MAAMkpF,4BAA6B,EACxC,MAAMiP,EAAWl0G,OAAOwU,OAAO,MAC/B,IAAI2pB,GAAQ,EACZ,MAAM/pB,EAAOzS,KAAKw6E,YAIlB,IAHA/nE,EAAKw6B,WAAa,GAClBjtC,KAAK2C,QAEG3C,KAAK+8E,IAAI90E,IAAQ,CACvB,GAAIu0B,EACFA,GAAQ,OAIR,GAFAx8B,KAAKs9E,OAAOvwB,EAAMpS,OAEd36C,KAAKqX,MAAMpP,GAAQ,CACrBjI,KAAKgwG,SAASv9F,EAAM,gBAAiBzS,KAAKoa,MAAM0mE,cAChD9gF,KAAK2C,OACL,MAIJ,MAAMmU,EAAO9W,KAAKwyG,wBAAwB93B,EAAW7B,GAEhD6B,GACH16E,KAAK84E,WAAWhiE,EAAM6hE,EAAU45B,EAAU15B,GAGxCF,GAA0B,mBAAd7hE,EAAK3Z,MAA2C,kBAAd2Z,EAAK3Z,MACrD6C,KAAKmzE,MAAMr8D,EAAKoS,MAAO4pC,EAAc8D,uBAGnC9/C,EAAK+jE,WACP76E,KAAKgwG,SAASl5F,EAAM,aAAa,GAGnCrE,EAAKw6B,WAAWjxC,KAAK8a,GAGvB9W,KAAKoa,MAAMkpF,2BAA6ByM,EACxC,IAAI5yG,EAAO,mBAQX,OANIu9E,EACFv9E,EAAO,gBACEw7E,IACTx7E,EAAO,oBAGF6C,KAAKy6E,WAAWhoE,EAAMtV,GAG/B,yBAAyB2Z,GACvB,OAAQA,EAAKie,UAA8B,eAAlBje,EAAK1Z,IAAID,OAA0B6C,KAAKyyG,yBAA2BzyG,KAAKqX,MAAM01C,EAAMO,WAAattD,KAAKqX,MAAM01C,EAAMgD,OAG7I,wBAAwB2qB,EAAW7B,GACjC,IAAIkkB,EAAa,GAEjB,GAAI/8F,KAAKqX,MAAM01C,EAAM6B,IAKnB,IAJI5uD,KAAKg3E,UAAU,eACjBh3E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcwI,8BAGtCt7D,KAAKqX,MAAM01C,EAAM6B,KACtBmuC,EAAW/gG,KAAKgE,KAAKwsG,kBAIzB,MAAM11F,EAAO9W,KAAKw6E,YAClB,IAGIR,EACAC,EAJAjF,GAAc,EACdD,GAAU,EACV4F,GAAa,EAIjB,GAAI36E,KAAKqX,MAAM01C,EAAM0B,UAGnB,OAFIsuC,EAAW3gG,QAAQ4D,KAAK68E,aAExBnC,GACF16E,KAAK2C,OACLmU,EAAK0mE,SAAWx9E,KAAK8/E,kBACrB9/E,KAAKusG,oBAAoB,KAClBvsG,KAAKy6E,WAAW3jE,EAAM,gBAGxB9W,KAAK0yG,cAGV3V,EAAW3gG,SACb0a,EAAKimF,WAAaA,EAClBA,EAAa,IAGfjmF,EAAKpX,QAAS,GAEVg7E,GAAa7B,KACfmB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,UAGnBS,IACH1F,EAAch1E,KAAK+8E,IAAIhwB,EAAMgD,OAG/B,MAAMopC,EAAcn5F,KAAKoa,MAAM++E,YACzB/7F,EAAM4C,KAAK4rF,kBAAkB90E,GAAM,GAEzC,IAAK4jE,IAAc1F,IAAgBmkB,GAAen5F,KAAK2yG,yBAAyB77F,GAAO,CACrF,MAAM87F,EAAUx1G,EAAIwL,KAEJ,UAAZgqG,GAAwB5yG,KAAK09D,0BAC/BqX,GAAU,EACVC,EAAch1E,KAAK+8E,IAAIhwB,EAAMgD,MAC7B/vD,KAAK4rF,kBAAkB90E,GAAM,IAGf,QAAZ87F,GAAiC,QAAZA,IACvBj4B,GAAa,EACb7jE,EAAKmlD,KAAO22C,EAER5yG,KAAKqX,MAAM01C,EAAMgD,QACnBilB,GAAc,EACdh1E,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcE,oBAAqB4/C,GAC9D5yG,KAAK2C,QAGP3C,KAAK4rF,kBAAkB90E,GAAM,IAKjC,OADA9W,KAAK6rF,kBAAkB/0E,EAAMkjE,EAAUC,EAAUjF,EAAaD,EAAS2F,EAAWC,EAAY9B,GACvF/hE,EAGT,kCAAkCpX,GAChC,MAAuB,QAAhBA,EAAOu8D,KAAiB,EAAI,EAGrC,6BAA6Bv8D,GAC3B,OAAOA,EAAOguC,OAGhB,wBAAwBhuC,GACtB,IAAImzG,EAEJ,MAAMptB,EAAazlF,KAAKigG,kCAAkCvgG,GACpDguC,EAAS1tC,KAAK8yG,6BAA6BpzG,GAC3CwpB,EAAQxpB,EAAOwpB,MAEjBwkB,EAAOtxC,SAAWqpF,IACA,QAAhB/lF,EAAOu8D,KACTj8D,KAAKmzE,MAAMjqD,EAAO4pC,EAAcQ,gBAEhCtzD,KAAKmzE,MAAMjqD,EAAO4pC,EAAcS,iBAIhB,QAAhB7zD,EAAOu8D,MAA8F,iBAAlC,OAAxC42C,EAAUnlE,EAAOA,EAAOtxC,OAAS,SAAc,EAASy2G,EAAQ11G,OAC7F6C,KAAKmzE,MAAMjqD,EAAO4pC,EAAcU,wBAIpC,kBAAkB18C,EAAMk+D,EAAaD,EAAS2F,EAAWC,GACvD,OAAIA,GACF36E,KAAK05E,YAAY5iE,EAAMk+D,GAAa,GAAO,GAAO,EAAO,gBACzDh1E,KAAK+yG,wBAAwBj8F,GACtBA,GAGLi+D,GAAWC,GAAeh1E,KAAKqX,MAAM01C,EAAMiB,SACzC0sB,GAAW16E,KAAK68E,aACpB/lE,EAAKmlD,KAAO,SACZnlD,EAAKpX,QAAS,EACPM,KAAK05E,YAAY5iE,EAAMk+D,EAAaD,GAAS,GAAO,EAAO,sBAJpE,EAQF,oBAAoBj+D,EAAMkjE,EAAUC,EAAUS,EAAW7B,GAGvD,OAFA/hE,EAAK+jE,WAAY,EAEb76E,KAAK+8E,IAAIhwB,EAAMoB,QACjBr3C,EAAKvX,MAAQm7E,EAAY16E,KAAK8rF,kBAAkB9rF,KAAKoa,MAAM8O,MAAOlpB,KAAKoa,MAAM6/D,UAAYj6E,KAAKy9E,wBAAwB5E,GAC/G74E,KAAKy6E,WAAW3jE,EAAM,mBAG1BA,EAAKie,UAA8B,eAAlBje,EAAK1Z,IAAID,UAA/B,GACE6C,KAAK4sF,kBAAkB91E,EAAK1Z,IAAIwL,KAAMkO,EAAK1Z,IAAI8rB,OAAO,GAAM,GAExDwxD,EACF5jE,EAAKvX,MAAQS,KAAK8rF,kBAAkB9R,EAAUC,EAAUnjE,EAAK1Z,IAAIqvF,WACxDzsF,KAAKqX,MAAM01C,EAAMgC,KAAO8pB,IACY,IAAzCA,EAAoBisB,kBACtBjsB,EAAoBisB,gBAAkB9kG,KAAKoa,MAAM8O,OAGnDpS,EAAKvX,MAAQS,KAAK8rF,kBAAkB9R,EAAUC,EAAUnjE,EAAK1Z,IAAIqvF,YAEjE31E,EAAKvX,MAAQuX,EAAK1Z,IAAIqvF,UAGxB31E,EAAK+jE,WAAY,EACV76E,KAAKy6E,WAAW3jE,EAAM,mBAIjC,kBAAkBA,EAAMkjE,EAAUC,EAAUjF,EAAaD,EAAS2F,EAAWC,EAAY9B,GACvF,MAAMpmE,EAAOzS,KAAK46E,kBAAkB9jE,EAAMk+D,EAAaD,EAAS2F,EAAWC,IAAe36E,KAAK86E,oBAAoBhkE,EAAMkjE,EAAUC,EAAUS,EAAW7B,GAExJ,OADKpmE,GAAMzS,KAAK68E,aACTpqE,EAGT,kBAAkBqE,EAAM60E,GACtB,GAAI3rF,KAAK+8E,IAAIhwB,EAAMO,UACjBx2C,EAAKie,UAAW,EAChBje,EAAK1Z,IAAM4C,KAAKy9E,0BAChBz9E,KAAKs9E,OAAOvwB,EAAMU,cACb,CACL,MAAMulD,EAAoBhzG,KAAKoa,MAAMukE,eACrC3+E,KAAKoa,MAAMukE,gBAAiB,EAC5B7nE,EAAK1Z,IAAM4C,KAAKqX,MAAM01C,EAAMC,MAAQhtD,KAAKqX,MAAM01C,EAAMK,SAAWptD,KAAKqX,MAAM01C,EAAME,SAAWjtD,KAAKqX,MAAM01C,EAAMG,SAAWltD,KAAK+5E,gBAAkB/5E,KAAKqvG,sBAAsB1jB,GAEpJ,gBAAlB70E,EAAK1Z,IAAID,OACX2Z,EAAKie,UAAW,GAGlB/0B,KAAKoa,MAAMukE,eAAiBq0B,EAG9B,OAAOl8F,EAAK1Z,IAGd,aAAaqV,EAAMsiE,GACjBtiE,EAAKpW,GAAK,KACVoW,EAAKwgG,WAAY,EACjBxgG,EAAKm7E,QAAU7Y,EAGjB,YAAYtiE,EAAMuiE,EAAaD,EAASyE,EAAea,EAAkBl9E,EAAMm9E,GAAe,GAC5F,MAAMiiB,EAAcv8F,KAAKoa,MAAMoiF,SACzBC,EAAcz8F,KAAKoa,MAAMsiF,SAC/B18F,KAAKoa,MAAMoiF,UAAY,EACvBx8F,KAAKoa,MAAMsiF,UAAY,EACvB18F,KAAKo4E,aAAa3lE,EAAMsiE,GACxBtiE,EAAKwgG,YAAcj+B,EACnB,MAAM6X,EAAiBrT,EASvB,OARAx5E,KAAK4zE,MAAM7qD,MAAMsgE,IAAgC/O,EAn+UjC,GAm+U8D,IAAMD,EAp+U7D,GAo+UqG,IAC5Hr6E,KAAKq9D,UAAUt0C,MAAM+rD,GAAcC,EAAStiE,EAAKwgG,YACjDjzG,KAAK8sF,oBAAoBr6E,EAAMo6E,GAC/B7sF,KAAKknF,2BAA2Bz0E,EAAMtV,GAAM,GAC5C6C,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,OACX1hF,KAAKoa,MAAMoiF,SAAWD,EACtBv8F,KAAKoa,MAAMsiF,SAAWD,EACfhqF,EAGT,eAAexK,EAAOirG,EAAcC,EAASt6B,GACvCs6B,GACFnzG,KAAKohG,aAAa,kBAGpB,MAAM2O,EAAgC/vG,KAAKoa,MAAMkpF,2BACjDtjG,KAAKoa,MAAMkpF,4BAA6B,EACxC,MAAM7wF,EAAOzS,KAAKw6E,YASlB,OARAx6E,KAAK2C,OACL8P,EAAKs6B,SAAW/sC,KAAKgyG,cAAc/pG,GAAQkrG,EAASt6B,EAAqBpmE,GAErEygG,IAAiBlzG,KAAKoa,MAAMkiF,wBAC9Bt8F,KAAKksG,iBAAiBz5F,EAAKs6B,UAG7B/sC,KAAKoa,MAAMkpF,2BAA6ByM,EACjC/vG,KAAKy6E,WAAWhoE,EAAM0gG,EAAU,kBAAoB,mBAG7D,qBAAqB1gG,EAAMi7B,EAAQqnC,EAASgW,GAC1C/qF,KAAK4zE,MAAM7qD,MAAMsgE,GACjB,IAAIvW,EAAQgC,GAAcC,GAAS,IAE9B/0E,KAAKqX,MAAM01C,EAAMO,WAAattD,KAAKq9D,UAAU0wC,QAChDj7B,GAp4LW,GAu4Lb9yE,KAAKq9D,UAAUt0C,MAAM+pD,GACrB9yE,KAAKo4E,aAAa3lE,EAAMsiE,GACxB,MAAMsnB,EAA4Br8F,KAAKoa,MAAMkiF,uBACvCC,EAAcv8F,KAAKoa,MAAMoiF,SACzBC,EAAcz8F,KAAKoa,MAAMsiF,SAgB/B,OAdIhvD,IACF1tC,KAAKoa,MAAMkiF,wBAAyB,EACpCt8F,KAAKguF,2BAA2Bv7E,EAAMi7B,EAAQq9C,IAGhD/qF,KAAKoa,MAAMkiF,wBAAyB,EACpCt8F,KAAKoa,MAAMoiF,UAAY,EACvBx8F,KAAKoa,MAAMsiF,UAAY,EACvB18F,KAAKo6E,kBAAkB3nE,GAAM,GAC7BzS,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,OACX1hF,KAAKoa,MAAMkiF,uBAAyBD,EACpCr8F,KAAKoa,MAAMoiF,SAAWD,EACtBv8F,KAAKoa,MAAMsiF,SAAWD,EACfz8F,KAAKy6E,WAAWhoE,EAAM,2BAG/B,2BAA2BA,EAAMi7B,EAAQq9C,GACvCt4E,EAAKi7B,OAAS1tC,KAAKmpF,iBAAiBz7C,EAAQq9C,GAG9C,2BAA2Bt4E,EAAMtV,EAAMg9E,GAAW,GAChDn6E,KAAKo6E,kBAAkB3nE,GAAM,EAAO0nE,GACpCn6E,KAAKy6E,WAAWhoE,EAAMtV,GAGxB,kBAAkBsV,EAAMynE,EAAiBC,GAAW,GAClD,MAAMi5B,EAAel5B,IAAoBl6E,KAAKqX,MAAM01C,EAAMY,QACpD0lD,EAAkBrzG,KAAKoa,MAAM2oF,aAGnC,GAFA/iG,KAAKoa,MAAM2oF,cAAe,EAEtBqQ,EACF3gG,EAAKgxB,KAAOzjC,KAAKwoF,mBACjBxoF,KAAKspF,YAAY72E,GAAM,EAAOynE,GAAiB,OAC1C,CACL,MAAMgnB,EAAYlhG,KAAKoa,MAAM+sE,OACvB6pB,EAAYhxG,KAAKoa,MAAMmpF,OAC7BvjG,KAAKoa,MAAMmpF,OAAS,GACpBvjG,KAAKq9D,UAAUt0C,MAp7LA,EAo7LM/oB,KAAKq9D,UAAUwX,gBACpCpiE,EAAKgxB,KAAOzjC,KAAK+gG,YAAW,GAAM,EAAOuS,IACvC,MAAMC,GAAavzG,KAAKwzG,kBAAkB/gG,EAAKi7B,QAE/C,GAAI4lE,GAA0BC,EAAW,CACvC,MAAME,EAA0B,WAAdhhG,EAAKwpD,MAAmC,gBAAdxpD,EAAKwpD,OAA6BxpD,EAAKrV,IAAqBqV,EAAKyW,MAApBzW,EAAKrV,IAAI0oB,IAClG9lB,KAAKmzE,MAAMsgC,EAAU3gD,EAAcqC,8BAGrC,MAAM03C,GAAqB3L,GAAalhG,KAAKoa,MAAM+sE,OACnDnnF,KAAKspF,YAAY72E,IAAOzS,KAAKoa,MAAM+sE,QAAWjN,GAAoBC,GAAao5B,GAAWr5B,EAAiB2yB,GAEvG7sG,KAAKoa,MAAM+sE,QAAU10E,EAAKpW,IAC5B2D,KAAK04E,UAAUjmE,EAAKpW,GA5iVTilF,QA4iV2BzlF,EAAW,qBAAiBA,EAAWgxG,KAGjF7sG,KAAKq9D,UAAUqkB,OACf1hF,KAAKoa,MAAMmpF,OAASyN,EAGtBhxG,KAAKoa,MAAM2oF,aAAesQ,EAG5B,kBAAkB3lE,GAChB,IAAK,IAAI7wC,EAAI,EAAG4a,EAAMi2B,EAAOtxC,OAAQS,EAAI4a,EAAK5a,IAC5C,GAAuB,eAAnB6wC,EAAO7wC,GAAGM,KAAuB,OAAO,EAG9C,OAAO,EAGT,YAAYsV,EAAMw7E,EAAiBC,EAAiB2e,GAAoB,GACtE,MAAM6G,EAAWr1G,OAAOwU,OAAO,MAE/B,IAAK,IAAIhW,EAAI,EAAGA,EAAI4V,EAAKi7B,OAAOtxC,OAAQS,IACtCmD,KAAK04E,UAAUjmE,EAAKi7B,OAAO7wC,GAzkVhBykF,EAykV8B2M,EAAkB,KAAOylB,EAAU,+BAA2B73G,EAAWgxG,GAItH,cAAc5kG,EAAOmnC,EAAYypC,EAAqBg3B,GACpD,MAAMxD,EAAO,GACb,IAAI7vE,GAAQ,EAEZ,MAAQx8B,KAAK+8E,IAAI90E,IAAQ,CACvB,GAAIu0B,EACFA,GAAQ,OAIR,GAFAx8B,KAAKs9E,OAAOvwB,EAAMpS,OAEd36C,KAAKqX,MAAMpP,GAAQ,CACjB4nG,GACF7vG,KAAKgwG,SAASH,EAAc,gBAAiB7vG,KAAKoa,MAAM0mE,cAG1D9gF,KAAK2C,OACL,MAIJ0pG,EAAKrwG,KAAKgE,KAAK09F,kBAAkBtuD,EAAYypC,IAG/C,OAAOwzB,EAGT,kBAAkBj9D,EAAYypC,EAAqBgP,EAAkB4V,GACnE,IAAIN,EAEJ,GAAIn9F,KAAKqX,MAAM01C,EAAMpS,OACdvL,GACHpvC,KAAKmzE,MAAMnzE,KAAKoa,MAAMy0B,IAAKikB,EAAcgI,gBAAiB,KAG5DqiC,EAAM,UACD,GAAIn9F,KAAKqX,MAAM01C,EAAM0B,UAAW,CACrC,MAAM8iD,EAAqBvxG,KAAKoa,MAAM8O,MAChCsoF,EAAqBxxG,KAAKoa,MAAM6/D,SACtCkjB,EAAMn9F,KAAKwpF,eAAexpF,KAAK0yG,YAAY75B,EAAqBgP,GAAmB0pB,EAAoBC,QAClG,GAAIxxG,KAAKqX,MAAM01C,EAAMuB,UAAW,CACrCtuD,KAAKohG,aAAa,sBAEb3D,GACHz9F,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcoH,+BAG7C,MAAMznD,EAAOzS,KAAKw6E,YAClBx6E,KAAK2C,OACLw6F,EAAMn9F,KAAKy6E,WAAWhoE,EAAM,4BAE5B0qF,EAAMn9F,KAAKy9E,wBAAwB5E,EAAqB74E,KAAKwpF,eAAgB3B,GAG/E,OAAOsV,EAGT,gBAAgBla,GACd,MAAMxwE,EAAOzS,KAAKw6E,YACZ5xE,EAAO5I,KAAKg0F,oBAAoBvhF,EAAKyW,MAAO+5D,GAClD,OAAOjjF,KAAKsmF,iBAAiB7zE,EAAM7J,GAGrC,iBAAiB6J,EAAM7J,GAGrB,OAFA6J,EAAK7J,KAAOA,EACZ6J,EAAK63B,IAAIuoB,eAAiBjqD,EACnB5I,KAAKy6E,WAAWhoE,EAAM,cAG/B,oBAAoBo8B,EAAKo0C,GACvB,IAAIr6E,EACJ,MAAM,MACJsgB,EAAK,KACL/rB,GACE6C,KAAKoa,MAET,GAAIjd,IAAS4vD,EAAMnkD,KACjBA,EAAO5I,KAAKoa,MAAM7a,UACb,KAAIpC,EAAKgvD,QAQd,MAAMnsD,KAAK68E,aARY,CACvBj0E,EAAOzL,EAAKgvD,QACZ,MAAM+Q,EAAal9D,KAAKk9D,aAEnB//D,IAAS4vD,EAAM0E,QAAUt0D,IAAS4vD,EAAM6D,WAAesM,IAAeZ,EAAQS,mBAAqBG,IAAeZ,EAAQQ,oBAC7H98D,KAAKoa,MAAMiI,QAAQnmB,OAavB,OAPI+mF,EACFjjF,KAAKoa,MAAMjd,KAAO4vD,EAAMnkD,KAExB5I,KAAK4sF,kBAAkBhkF,EAAMsgB,IAAS/rB,EAAKgvD,SAAS,GAGtDnsD,KAAK2C,OACEiG,EAGT,kBAAkB+1D,EAAMsb,EAAUokB,EAAezT,GAC/C,GAAI5qF,KAAKq9D,UAAUC,UAAqB,UAATqB,EAE7B,YADA3+D,KAAKmzE,MAAM8G,EAAUnnB,EAAc+I,wBAIrC,GAAa,UAAT8C,EAAkB,CACpB,GAAI3+D,KAAKq9D,UAAU8wC,SAEjB,YADAnuG,KAAKmzE,MAAM8G,EAAUnnB,EAAcK,yBAIR,IAAzBnzD,KAAKoa,MAAMsiF,WAAoB18F,KAAKoa,MAAM4oF,uBAAyBhjG,KAAK2uG,oBAC1E3uG,KAAKoa,MAAMsiF,SAAW18F,KAAKoa,MAAM8O,OAIrC,GAAIlpB,KAAK4zE,MAAMs1B,UAAYlpG,KAAK4zE,MAAMk+B,oBAA+B,cAATnzC,EAE1D,YADA3+D,KAAKmzE,MAAM8G,EAAUnnB,EAAcG,kBAIrC,GAAIorC,GApxTR,SAAmB1/B,GACjB,OAAOJ,EAAW5gE,IAAIghE,GAmxTCg1C,CAAUh1C,GAE7B,YADA3+D,KAAKmzE,MAAM8G,EAAUnnB,EAAcwH,kBAAmBqE,IAIlC3+D,KAAKoa,MAAM+sE,OAA0ByD,EAAY7rB,EAA2BF,EAAxDH,GAEzBC,EAAM3+D,KAAK4+D,YACrB5+D,KAAKq9D,UAAU8wC,UAAqB,UAATxvC,EAG9B3+D,KAAKmzE,MAAM8G,EAAUnnB,EAAc8H,uBAAwB+D,GAF3D3+D,KAAKmzE,MAAM8G,EAAUnnB,EAAcO,0BAOzC,iBACE,OAAIrzD,KAAK4zE,MAAMggC,WAAmB5zG,KAAKq9D,UAAU8wC,WAC7CnuG,KAAK1E,QAAQ2mG,6BAEbjiG,KAAKg3E,UAAU,mBACVh3E,KAAK4+D,UAAY5+D,KAAKq9D,UAAU8wC,UAM3C,aACE,MAAM17F,EAAOzS,KAAKw6E,YAyBlB,OAxBAx6E,KAAK2C,OAED3C,KAAKoa,MAAM2oF,aACb/iG,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcM,iCACH,IAAzBpzD,KAAKoa,MAAMsiF,WACpB18F,KAAKoa,MAAMsiF,SAAWjqF,EAAKyW,OAGzBlpB,KAAK+8E,IAAIhwB,EAAMgD,OACjB/vD,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAckF,mBAGlCh4D,KAAK4zE,MAAMggC,YAAe5zG,KAAK1E,QAAQ2mG,4BACtCjiG,KAAK09D,yBAA2B19D,KAAKqX,MAAM01C,EAAM8C,UAAY7vD,KAAKqX,MAAM01C,EAAMiB,SAAWhuD,KAAKqX,MAAM01C,EAAMO,WAAattD,KAAKqX,MAAM01C,EAAM2B,YAAc1uD,KAAKqX,MAAM01C,EAAMI,SAAWntD,KAAKqX,MAAM01C,EAAMiD,QAAUhwD,KAAKg3E,UAAU,gBAAkBh3E,KAAKqX,MAAM01C,EAAM+C,QACjQ9vD,KAAKsmG,6BAA8B,EAEnCtmG,KAAKqmG,mBAAoB,GAIxBrmG,KAAKoa,MAAMipF,YACd5wF,EAAK+qE,SAAWx9E,KAAKo3F,mBAGhBp3F,KAAKy6E,WAAWhoE,EAAM,mBAG/B,aACE,MAAMA,EAAOzS,KAAKw6E,YAkBlB,OAhBIx6E,KAAKoa,MAAM2oF,aACb/iG,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcgJ,mBACH,IAAzB97D,KAAKoa,MAAMoiF,WACpBx8F,KAAKoa,MAAMoiF,SAAW/pF,EAAKyW,OAG7BlpB,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMmB,QAAUluD,KAAKqX,MAAM01C,EAAMgD,QAAU/vD,KAAKoa,MAAMjd,KAAKkvD,YAAcrsD,KAAK09D,yBAC3FjrD,EAAKohG,UAAW,EAChBphG,EAAK+qE,SAAW,OAEhB/qE,EAAKohG,SAAW7zG,KAAK+8E,IAAIhwB,EAAMgD,MAC/Bt9C,EAAK+qE,SAAWx9E,KAAKwoF,oBAGhBxoF,KAAKy6E,WAAWhoE,EAAM,mBAG/B,6BAA6B4xB,EAAM25D,GAC4B,UAAzDh+F,KAAKk3E,gBAAgB,mBAAoB,aACzB,uBAAd7yC,EAAKlnC,MACP6C,KAAKmzE,MAAM6qB,EAAclrC,EAAc0F,gCAK7C,uBAAuBs7C,EAAiB95B,EAAUC,GAEhD,OADAj6E,KAAK+zG,kCAAkCD,EAAiB95B,GACjDh6E,KAAKg0G,8BAA8BF,EAAiB95B,EAAUC,GAGvE,kCAAkC65B,EAAiB95B,GACjD,GAAIh6E,KAAKqX,MAAM01C,EAAMyB,OACnB,MAAMxuD,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcwF,qBACf,uBAAzBw7C,EAAgB32G,MACzB6C,KAAKmzE,MAAM6G,EAAUlnB,EAAcyF,gCAIvC,8BAA8Bu7C,EAAiB95B,EAAUC,GACvD,MAAMsH,EAAWvhF,KAAKg4E,YAAYgC,EAAUC,GACtCg6B,EAAoBj0G,KAAKi0G,kBAAkBH,GAYjD,OAVIG,EACF1yB,EAAS/zC,OAASsmE,GAEb9zG,KAAKk0G,8CACRl0G,KAAKmzE,MAAM6G,EAAUlnB,EAAc2F,qBAGrC8oB,EAAStJ,WAAa67B,GAGjB9zG,KAAKy6E,WAAW8G,EAAU0yB,EAAoB,uBAAyB,2BAGhF,kBAAkBh8B,GAChB,OAAQA,EAAW96E,MACjB,IAAK,mBACH,OAAQ86E,EAAWljD,UAAY/0B,KAAKi0G,kBAAkBh8B,EAAWpyE,QAEnE,IAAK,aACH,OAAO,EAET,QACE,OAAO,GAIb,2BAA2B5D,GACzB,MAAMkyG,EAAyBn0G,KAAKoa,MAAM8oF,aAC1CljG,KAAKoa,MAAM8oF,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOnhG,IACP,QACAjC,KAAKoa,MAAM8oF,aAAeiR,GAI9B,2BAA2BlyG,GACzB,MAAMkyG,EAAyBn0G,KAAKoa,MAAM8oF,aAC1CljG,KAAKoa,MAAM8oF,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOnhG,IACP,QACAjC,KAAKoa,MAAM8oF,aAAeiR,GAI9B,+BAA+BlyG,GAC7B,MAAMmyG,EAA6Bp0G,KAAKoa,MAAMipF,UAC9CrjG,KAAKoa,MAAMipF,WAAY,EAEvB,IACE,OAAOphG,IACP,QACAjC,KAAKoa,MAAMipF,UAAY+Q,GAI3B,WAAWnyG,GACT,MAAM6wE,EAAQ9yE,KAAKq9D,UAAUwX,eAG7B,GA9vMa,GA4vMsB/B,EAEf,CAClB9yE,KAAKq9D,UAAUt0C,MA/vMJ,EA+vMU+pD,GAErB,IACE,OAAO7wE,IACP,QACAjC,KAAKq9D,UAAUqkB,QAInB,OAAOz/E,IAGT,cAAcA,GACZ,MAAM6wE,EAAQ9yE,KAAKq9D,UAAUwX,eAG7B,GA/wMa,EA6wMuB/B,EAEd,CACpB9yE,KAAKq9D,UAAUt0C,OAAc,EAAR+pD,GAErB,IACE,OAAO7wE,IACP,QACAjC,KAAKq9D,UAAUqkB,QAInB,OAAOz/E,IAGT,yBACEjC,KAAKoa,MAAM8oF,aAAaE,cAAgB,EAG1C,sDACE,OAAOpjG,KAAKoa,MAAM8oF,aAAaC,0BAA4B,EAG7D,6CACE,OAAgD,MAAzCnjG,KAAKoa,MAAM8oF,aAAaE,eAAyBpjG,KAAKoa,MAAM8oF,aAAaE,eAAiB,EAGnG,wBAAwB0K,GACtB,MAAM9zB,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5Bj6E,KAAKoa,MAAM0oF,iBAAmB9iG,KAAKoa,MAAM8O,MACzC,MAAM6mF,EAAgC/vG,KAAKoa,MAAMkpF,2BACjDtjG,KAAKoa,MAAMkpF,4BAA6B,EACxC,MAAMx9F,EAAM9F,KAAKo+F,YAAYp+F,KAAKo3F,kBAAmBpd,EAAUC,EAAU6zB,GAEzE,OADA9tG,KAAKoa,MAAMkpF,2BAA6ByM,EACjCjqG,IAiBT,cAAcspF,EAAMC,GAKlB,GAJAA,EAAQyS,WAAa9hG,KAAK1E,QAAQwmG,WAClCzS,EAAQglB,YAAcr0G,KAAKs0G,4BAC3Bt0G,KAAKo5E,eAAeiW,GAAS,GAAM,EAAMtiC,EAAMM,KAE3CrtD,KAAK4+D,WAAa5+D,KAAK1E,QAAQ+mG,wBAA0BriG,KAAK4zE,MAAMP,iBAAiB1xE,KAAO,EAC9F,IAAK,IAAI2vF,EAAK,EAAGsU,EAAcjmG,MAAMw2B,KAAKn2B,KAAK4zE,MAAMP,kBAAmBie,EAAKsU,EAAYxpG,OAAQk1F,IAAM,CACrG,MAAO1oF,GAAQg9F,EAAYtU,GACrBziD,EAAM7uC,KAAK4zE,MAAMP,iBAAiB/1E,IAAIsL,GAC5C5I,KAAKmzE,MAAMtkC,EAAKikB,EAAc4E,sBAAuB9uD,GAOzD,OAHAwmF,EAAKC,QAAUrvF,KAAKy6E,WAAW4U,EAAS,WACxCD,EAAKl+C,SAAWlxC,KAAKoa,MAAM82B,SACvBlxC,KAAK1E,QAAQknG,SAAQpT,EAAKoT,OAASxiG,KAAKwiG,QACrCxiG,KAAKy6E,WAAW2U,EAAM,QAG/B,gBAAgBrX,GACd,MAAMO,EAAOP,EAAKE,WACZH,EAAmB93E,KAAKg4E,YAAYM,EAAKpvD,MAAOovD,EAAKhuC,IAAIphB,OACzDjG,EAAYjjB,KAAKg4E,YAAYD,EAAK7uD,MAAO6uD,EAAKztC,IAAIphB,OAClDztB,EAAMuE,KAAKm+C,MAAM31C,MAAM8vE,EAAKpvD,MAAOovD,EAAKxyD,KACxCxhB,EAAMwzE,EAAiBv4E,MAAQ9D,EAAI+M,MAAM,GAAI,GAInD,OAHAxI,KAAKgwG,SAASl4B,EAAkB,MAAOr8E,GACvCuE,KAAKgwG,SAASl4B,EAAkB,WAAYxzE,GAC5C2e,EAAU1jB,MAAQS,KAAKm4E,aAAaL,EAAkB,mBAAoBQ,EAAKxyD,IAAKwyD,EAAKhuC,IAAIxkB,KACtF9lB,KAAKm4E,aAAal1D,EAAW,YAAa80D,EAAKjyD,IAAKiyD,EAAKztC,IAAIxkB,KAGtE,4BACE,IAAK9lB,KAAKqX,MAAM01C,EAAM+B,sBACpB,OAAO,KAGT,MAAMr8C,EAAOzS,KAAKw6E,YAGlB,OAFA/nE,EAAKlT,MAAQS,KAAKoa,MAAM7a,MACxBS,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,wBAG/B,MAAM4P,GACJ,IAAKriB,KAAKghF,aAAa,OACrB,OAAO,EAGT,MAAMr+E,EAAO3C,KAAKwyF,iBACZqe,EAAS7wG,KAAKm+C,MAAMjP,WAAWvsC,GACrC,GAAe,KAAXkuG,EAAe,OAAO,EAC1B,GAAIxuF,EAAS,OAAO,EACpB,GAAe,MAAXwuF,EAAgB,OAAO,EAE3B,GAAI1yC,EAAkB0yC,GAAS,CAC7B,IAAIhiE,EAAMlsC,EAAO,EAEjB,KAAO07D,EAAiBr+D,KAAKm+C,MAAMjP,WAAWL,OAC1CA,EAGJ,MAAM80C,EAAQ3jF,KAAKm+C,MAAM31C,MAAM7F,EAAMksC,GACrC,IAAKmwB,EAA0Bn/C,KAAK8jE,GAAQ,OAAO,EAGrD,OAAO,EAGT,eAAethE,EAAS82D,GAKtB,OAJIn5E,KAAKqX,MAAM01C,EAAM6B,KACnB5uD,KAAKywG,iBAAgB,GAGhBzwG,KAAK0+F,sBAAsBr8E,EAAS82D,GAG7C,sBAAsB92D,EAAS82D,GAC7B,IAAIoiB,EAAYv7F,KAAKoa,MAAMjd,KAC3B,MAAMsV,EAAOzS,KAAKw6E,YAClB,IAAIve,EAOJ,OALIj8D,KAAK+hF,MAAM1/D,KACbk5E,EAAYxuC,EAAMmE,KAClB+K,EAAO,OAGDs/B,GACN,KAAKxuC,EAAMmD,OACX,KAAKnD,EAAMsD,UACT,OAAOrwD,KAAKu0G,4BAA4B9hG,EAAM8oF,EAAUpvC,SAE1D,KAAKY,EAAMuD,UACT,OAAOtwD,KAAKw0G,uBAAuB/hG,GAErC,KAAKs6C,EAAMyD,IACT,OAAOxwD,KAAKy0G,iBAAiBhiG,GAE/B,KAAKs6C,EAAM4D,KACT,OAAO3wD,KAAK00G,kBAAkBjiG,GAEhC,KAAKs6C,EAAM6D,UACT,GAAiC,KAA7B5wD,KAAKk3F,oBAA4B,MAUrC,OARI70E,IACEriB,KAAKoa,MAAM+sE,OACbnnF,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc0G,gBACtB,OAAZn3C,GAAgC,UAAZA,GAC7BriB,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcqG,iBAIxCn5D,KAAKy7F,uBAAuBhpF,GAAM,GAAQ4P,GAEnD,KAAK0qC,EAAM0E,OAET,OADIpvC,GAASriB,KAAK68E,aACX78E,KAAK07F,WAAWjpF,GAAM,GAE/B,KAAKs6C,EAAM8D,IACT,OAAO7wD,KAAK20G,iBAAiBliG,GAE/B,KAAKs6C,EAAM+D,QACT,OAAO9wD,KAAK40G,qBAAqBniG,GAEnC,KAAKs6C,EAAMgE,QACT,OAAO/wD,KAAK60G,qBAAqBpiG,GAEnC,KAAKs6C,EAAMiE,OACT,OAAOhxD,KAAK80G,oBAAoBriG,GAElC,KAAKs6C,EAAMkE,KACT,OAAOjxD,KAAK+0G,kBAAkBtiG,GAEhC,KAAKs6C,EAAMoE,OACX,KAAKpE,EAAMmE,KAOT,OANA+K,EAAOA,GAAQj8D,KAAKoa,MAAM7a,MAEtB8iB,GAAoB,QAAT45C,GACbj8D,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc0H,8BAGtCx6D,KAAK47F,kBAAkBnpF,EAAMwpD,GAEtC,KAAKlP,EAAMqE,OACT,OAAOpxD,KAAKg1G,oBAAoBviG,GAElC,KAAKs6C,EAAMsE,MACT,OAAOrxD,KAAKi1G,mBAAmBxiG,GAEjC,KAAKs6C,EAAMY,OACT,OAAO3tD,KAAK+gG,aAEd,KAAKh0C,EAAMmB,KACT,OAAOluD,KAAKk1G,oBAAoBziG,GAElC,KAAKs6C,EAAM6E,QACT,CACE,MAAMujD,EAAoBn1G,KAAKk3F,oBAE/B,GAA0B,KAAtBie,GAAkD,KAAtBA,EAC5B,MAIR,KAAKpoD,EAAM4E,QACT,CAME,IAAIpxD,EAiBJ,OAtBKP,KAAK1E,QAAQ6mG,6BAAgChpB,GAChDn5E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcuH,wBAG7Cr6D,KAAK2C,OAGD44F,IAAcxuC,EAAM6E,SACtBrxD,EAASP,KAAKwhF,YAAY/uE,GAEN,sBAAhBlS,EAAOpD,MAAkCoD,EAAOqhE,YAAoC,UAAtBrhE,EAAOqhE,aACvE5hE,KAAKqmG,mBAAoB,KAG3B9lG,EAASP,KAAKu7E,YAAY9oE,IAEN,2BAAhBlS,EAAOpD,MAAuCoD,EAAO0hF,YAAoC,UAAtB1hF,EAAO0hF,cAA2C,yBAAhB1hF,EAAOpD,MAAqCoD,EAAO0hF,YAAoC,UAAtB1hF,EAAO0hF,aAA2C,6BAAhB1hF,EAAOpD,OACjN6C,KAAKqmG,mBAAoB,IAI7BrmG,KAAK0pF,wBAAwBj3E,GACtBlS,EAGX,QAEI,GAAIP,KAAKo1G,kBAMP,OALI/yF,GACFriB,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcI,uCAG7ClzD,KAAK2C,OACE3C,KAAKy7F,uBAAuBhpF,GAAM,GAAO4P,GAKxD,MAAMgzF,EAAYr1G,KAAKoa,MAAM7a,MACvB+4E,EAAOt4E,KAAKq9E,kBAElB,OAAIke,IAAcxuC,EAAMnkD,MAAsB,eAAd0vE,EAAKn7E,MAAyB6C,KAAK+8E,IAAIhwB,EAAMoB,OACpEnuD,KAAKs1G,sBAAsB7iG,EAAM4iG,EAAW/8B,EAAMj2D,GAElDriB,KAAKynF,yBAAyBh1E,EAAM6lE,GAI/C,wBAAwB7lE,GACjBzS,KAAK1E,QAAQ6mG,6BAAgCniG,KAAK4+D,UACrD5+D,KAAKknG,cAAcz0F,EAAKyW,MAAO,CAC7BmhB,KAAM,2CACLyoB,EAAc6C,qBAIrB,eAAeljD,GACb,MAAMsqF,EAAa/8F,KAAKoa,MAAMopF,eAAexjG,KAAKoa,MAAMopF,eAAepnG,OAAS,GAE5E2gG,EAAW3gG,SACbqW,EAAKsqF,WAAaA,EAClB/8F,KAAKytF,2BAA2Bh7E,EAAMsqF,EAAW,IACjD/8F,KAAKoa,MAAMopF,eAAexjG,KAAKoa,MAAMopF,eAAepnG,OAAS,GAAK,IAItE,0BACE,OAAO4D,KAAKqX,MAAM01C,EAAM0E,QAG1B,gBAAgB8jD,GACd,MAAMC,EAA2Bx1G,KAAKoa,MAAMopF,eAAexjG,KAAKoa,MAAMopF,eAAepnG,OAAS,GAE9F,KAAO4D,KAAKqX,MAAM01C,EAAM6B,KAAK,CAC3B,MAAM6mD,EAAYz1G,KAAKwsG,iBACvBgJ,EAAyBx5G,KAAKy5G,GAGhC,GAAIz1G,KAAKqX,MAAM01C,EAAM4E,SACd4jD,GACHv1G,KAAK68E,aAGH78E,KAAKg3E,UAAU,gBAAkBh3E,KAAKk3E,gBAAgB,aAAc,2BACtEl3E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcmB,2BAExC,IAAKj0D,KAAK+/F,0BACf,MAAM//F,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcyH,4BAIrD,iBACEv6D,KAAK+wG,gBAAgB,CAAC,oBAAqB,eAC3C,MAAMt+F,EAAOzS,KAAKw6E,YAGlB,GAFAx6E,KAAK2C,OAED3C,KAAKg3E,UAAU,cAAe,CAChCh3E,KAAKoa,MAAMopF,eAAexnG,KAAK,IAC/B,MAAMg+E,EAAWh6E,KAAKoa,MAAM8O,MACtB+wD,EAAWj6E,KAAKoa,MAAM6/D,SAC5B,IAAI3B,EAEJ,GAAIt4E,KAAK+8E,IAAIhwB,EAAMiB,QACjBsqB,EAAOt4E,KAAKq9E,kBACZr9E,KAAKs9E,OAAOvwB,EAAMkB,aAIlB,IAFAqqB,EAAOt4E,KAAK8/E,iBAAgB,GAErB9/E,KAAK+8E,IAAIhwB,EAAMsB,MAAM,CAC1B,MAAM57C,EAAOzS,KAAKg4E,YAAYgC,EAAUC,GACxCxnE,EAAK5M,OAASyyE,EACd7lE,EAAK4/D,SAAWryE,KAAK8/E,iBAAgB,GACrCrtE,EAAKsiB,UAAW,EAChBujD,EAAOt4E,KAAKy6E,WAAWhoE,EAAM,oBAIjCA,EAAKwlE,WAAaj4E,KAAK6/F,6BAA6BvnB,GACpDt4E,KAAKoa,MAAMopF,eAAetnG,WAE1BuW,EAAKwlE,WAAaj4E,KAAK+uG,sBAGzB,OAAO/uG,KAAKy6E,WAAWhoE,EAAM,aAG/B,6BAA6B6lE,GAC3B,GAAIt4E,KAAK+8E,IAAIhwB,EAAMiB,QAAS,CAC1B,MAAMv7C,EAAOzS,KAAK+7E,gBAAgBzD,GAIlC,OAHA7lE,EAAK+6B,OAAS8qC,EACd7lE,EAAKmD,UAAY5V,KAAKquF,6BAA6BthC,EAAMkB,QAAQ,GACjEjuD,KAAKksG,iBAAiBz5F,EAAKmD,WACpB5V,KAAKy6E,WAAWhoE,EAAM,kBAG/B,OAAO6lE,EAGT,4BAA4B7lE,EAAM05C,GAChC,MAAMupD,EAAsB,UAAZvpD,EAWhB,OAVAnsD,KAAK2C,OAED3C,KAAKs7F,mBACP7oF,EAAKw5C,MAAQ,MAEbx5C,EAAKw5C,MAAQjsD,KAAK8/E,kBAClB9/E,KAAKugF,aAGPvgF,KAAK8gG,oBAAoBruF,EAAM05C,GACxBnsD,KAAKy6E,WAAWhoE,EAAMijG,EAAU,iBAAmB,qBAG5D,oBAAoBjjG,EAAM05C,GACxB,MAAMupD,EAAsB,UAAZvpD,EAChB,IAAItvD,EAEJ,IAAKA,EAAI,EAAGA,EAAImD,KAAKoa,MAAMmpF,OAAOnnG,SAAUS,EAAG,CAC7C,MAAM84G,EAAM31G,KAAKoa,MAAMmpF,OAAO1mG,GAE9B,GAAkB,MAAd4V,EAAKw5C,OAAiB0pD,EAAI/sG,OAAS6J,EAAKw5C,MAAMrjD,KAAM,CACtD,GAAgB,MAAZ+sG,EAAI15C,OAAiBy5C,GAAwB,SAAbC,EAAI15C,MAAkB,MAC1D,GAAIxpD,EAAKw5C,OAASypD,EAAS,OAI3B74G,IAAMmD,KAAKoa,MAAMmpF,OAAOnnG,QAC1B4D,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcoC,qBAAsB/I,GAI/D,uBAAuB15C,GAGrB,OAFAzS,KAAK2C,OACL3C,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,qBAG/B,wBACEzS,KAAKs9E,OAAOvwB,EAAMiB,QAClB,MAAM1pD,EAAMtE,KAAKq9E,kBAEjB,OADAr9E,KAAKs9E,OAAOvwB,EAAMkB,QACX3pD,EAGT,iBAAiBmO,GAQf,OAPAzS,KAAK2C,OACL3C,KAAKoa,MAAMmpF,OAAOvnG,KAAKopG,IACvB3yF,EAAKgxB,KAAOzjC,KAAK41G,2BAA2B,IAAM51G,KAAKunF,eAAe,OACtEvnF,KAAKoa,MAAMmpF,OAAOrnG,MAClB8D,KAAKs9E,OAAOvwB,EAAMqE,QAClB3+C,EAAKoN,KAAO7f,KAAK61G,wBACjB71G,KAAK+8E,IAAIhwB,EAAMmB,MACRluD,KAAKy6E,WAAWhoE,EAAM,oBAG/B,kBAAkBA,GAChBzS,KAAK2C,OACL3C,KAAKoa,MAAMmpF,OAAOvnG,KAAKopG,IACvB,IAAI0Q,GAAW,EASf,GAPI91G,KAAK2uG,kBAAoB3uG,KAAK4gF,cAAc,WAC9Ck1B,EAAU91G,KAAKoa,MAAM0mE,cAGvB9gF,KAAK4zE,MAAM7qD,MA1zWK,GA2zWhB/oB,KAAKs9E,OAAOvwB,EAAMiB,QAEdhuD,KAAKqX,MAAM01C,EAAMmB,MAKnB,OAJI4nD,GAAW,GACb91G,KAAK68E,WAAWi5B,GAGX91G,KAAK+1G,SAAStjG,EAAM,MAG7B,MAAMsvE,EAAQ/hF,KAAK+hF,QAEnB,GAAI/hF,KAAKqX,MAAM01C,EAAMmE,OAASlxD,KAAKqX,MAAM01C,EAAMoE,SAAW4wB,EAAO,CAC/D,MAAMsO,EAAOrwF,KAAKw6E,YACZve,EAAO8lB,EAAQ,MAAQ/hF,KAAKoa,MAAM7a,MAKxC,OAJAS,KAAK2C,OACL3C,KAAKg2G,SAAS3lB,GAAM,EAAMp0B,GAC1Bj8D,KAAKy6E,WAAW4V,EAAM,wBAEjBrwF,KAAKqX,MAAM01C,EAAMiF,MAAQhyD,KAAKghF,aAAa,QAAuC,IAA7BqP,EAAK4lB,aAAa75G,OACnE4D,KAAKk2G,WAAWzjG,EAAM49E,EAAMylB,IAGjCA,GAAW,GACb91G,KAAK68E,WAAWi5B,GAGX91G,KAAK+1G,SAAStjG,EAAM49E,IAG7B,MAAMxX,EAAsB,IAAIgsB,GAC1BxU,EAAOrwF,KAAKq9E,iBAAgB,EAAMxE,GAExC,GAAI74E,KAAKqX,MAAM01C,EAAMiF,MAAQhyD,KAAKghF,aAAa,MAAO,CACpDhhF,KAAK+6E,aAAasV,GAClB,MAAM8lB,EAAcn2G,KAAKghF,aAAa,MAAQ,mBAAqB,mBAEnE,OADAhhF,KAAK04E,UAAU2X,OAAMx0F,OAAWA,EAAWs6G,GACpCn2G,KAAKk2G,WAAWzjG,EAAM49E,EAAMylB,GASrC,OAPE91G,KAAK2tG,sBAAsB90B,GAAqB,GAG9Ci9B,GAAW,GACb91G,KAAK68E,WAAWi5B,GAGX91G,KAAK+1G,SAAStjG,EAAM49E,GAG7B,uBAAuB59E,EAAMsiE,EAASqhC,GAEpC,OADAp2G,KAAK2C,OACE3C,KAAKowG,cAAc39F,EAzaP,GAya+B2jG,EAAsB,EAxa7C,GAwa0ErhC,GAGvG,iBAAiBtiE,GAKf,OAJAzS,KAAK2C,OACL8P,EAAKoN,KAAO7f,KAAK61G,wBACjBpjG,EAAKs7B,WAAa/tC,KAAKunF,eAAe,MACtC90E,EAAKu7B,UAAYhuC,KAAK+8E,IAAIhwB,EAAM0D,OAASzwD,KAAKunF,eAAe,MAAQ,KAC9DvnF,KAAKy6E,WAAWhoE,EAAM,eAG/B,qBAAqBA,GAcnB,OAbKzS,KAAKq9D,UAAUg5C,WAAcr2G,KAAK1E,QAAQ4mG,4BAC7CliG,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcsC,eAG7Cp1D,KAAK2C,OAED3C,KAAKs7F,mBACP7oF,EAAK+qE,SAAW,MAEhB/qE,EAAK+qE,SAAWx9E,KAAKq9E,kBACrBr9E,KAAKugF,aAGAvgF,KAAKy6E,WAAWhoE,EAAM,mBAG/B,qBAAqBA,GACnBzS,KAAK2C,OACL8P,EAAK6jG,aAAet2G,KAAK61G,wBACzB,MAAMU,EAAQ9jG,EAAK8jG,MAAQ,GAI3B,IAAIptG,EAEKqtG,EAAT,IALAx2G,KAAKs9E,OAAOvwB,EAAMY,QAClB3tD,KAAKoa,MAAMmpF,OAAOvnG,KAAKqpG,IACvBrlG,KAAK4zE,MAAM7qD,MAh5WK,IAm5WM/oB,KAAKqX,MAAM01C,EAAMe,SACrC,GAAI9tD,KAAKqX,MAAM01C,EAAMoD,QAAUnwD,KAAKqX,MAAM01C,EAAMwD,UAAW,CACzD,MAAMkmD,EAASz2G,KAAKqX,MAAM01C,EAAMoD,OAC5BhnD,GAAKnJ,KAAKy6E,WAAWtxE,EAAK,cAC9BotG,EAAMv6G,KAAKmN,EAAMnJ,KAAKw6E,aACtBrxE,EAAI4kC,WAAa,GACjB/tC,KAAK2C,OAED8zG,EACFttG,EAAI0W,KAAO7f,KAAKq9E,mBAEZm5B,GACFx2G,KAAKmzE,MAAMnzE,KAAKoa,MAAM0mE,aAAchuB,EAAc6E,0BAGpD6+C,GAAa,EACbrtG,EAAI0W,KAAO,MAGb7f,KAAKs9E,OAAOvwB,EAAMoB,YAEdhlD,EACFA,EAAI4kC,WAAW/xC,KAAKgE,KAAKunF,eAAe,OAExCvnF,KAAK68E,aASX,OAJA78E,KAAK4zE,MAAM8N,OACPv4E,GAAKnJ,KAAKy6E,WAAWtxE,EAAK,cAC9BnJ,KAAK2C,OACL3C,KAAKoa,MAAMmpF,OAAOrnG,MACX8D,KAAKy6E,WAAWhoE,EAAM,mBAG/B,oBAAoBA,GASlB,OARAzS,KAAK2C,OAED3C,KAAK09D,yBACP19D,KAAKmzE,MAAMnzE,KAAKoa,MAAM+iE,WAAYrqB,EAAc8E,mBAGlDnlD,EAAK+qE,SAAWx9E,KAAKq9E,kBACrBr9E,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,kBAG/B,wBACE,MAAMk0E,EAAQ3mF,KAAK4/F,mBACb8W,EAAwB,eAAf/vB,EAAMxpF,KAGrB,OAFA6C,KAAK4zE,MAAM7qD,MAAM2tF,EAl8WM,EAk8WwB,GAC/C12G,KAAK04E,UAAUiO,EAl7WErF,EAk7WmB,KAAM,gBACnCqF,EAGT,kBAAkBl0E,GAKhB,GAJAzS,KAAK2C,OACL8P,EAAKq1F,MAAQ9nG,KAAK+gG,aAClBtuF,EAAKhG,QAAU,KAEXzM,KAAKqX,MAAM01C,EAAMqD,QAAS,CAC5B,MAAMumD,EAAS32G,KAAKw6E,YACpBx6E,KAAK2C,OAED3C,KAAKqX,MAAM01C,EAAMiB,SACnBhuD,KAAKs9E,OAAOvwB,EAAMiB,QAClB2oD,EAAOhwB,MAAQ3mF,KAAKmgG,wBACpBngG,KAAKs9E,OAAOvwB,EAAMkB,UAElB0oD,EAAOhwB,MAAQ,KACf3mF,KAAK4zE,MAAM7qD,MA19WC,IA69Wd4tF,EAAOlzE,KAAOzjC,KAAK41G,2BAA2B,IAAM51G,KAAK+gG,YAAW,GAAO,IAC3E/gG,KAAK4zE,MAAM8N,OACXjvE,EAAKhG,QAAUzM,KAAKy6E,WAAWk8B,EAAQ,eASzC,OANAlkG,EAAKmkG,UAAY52G,KAAK+8E,IAAIhwB,EAAM2D,UAAY1wD,KAAK+gG,aAAe,KAE3DtuF,EAAKhG,SAAYgG,EAAKmkG,WACzB52G,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAc+E,kBAGhC73D,KAAKy6E,WAAWhoE,EAAM,gBAG/B,kBAAkBA,EAAMwpD,GAItB,OAHAj8D,KAAK2C,OACL3C,KAAKg2G,SAASvjG,GAAM,EAAOwpD,GAC3Bj8D,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,uBAG/B,oBAAoBA,GAMlB,OALAzS,KAAK2C,OACL8P,EAAKoN,KAAO7f,KAAK61G,wBACjB71G,KAAKoa,MAAMmpF,OAAOvnG,KAAKopG,IACvB3yF,EAAKgxB,KAAOzjC,KAAK41G,2BAA2B,IAAM51G,KAAKunF,eAAe,UACtEvnF,KAAKoa,MAAMmpF,OAAOrnG,MACX8D,KAAKy6E,WAAWhoE,EAAM,kBAG/B,mBAAmBA,GAQjB,OAPIzS,KAAKoa,MAAM+sE,QACbnnF,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAc6G,YAG7C35D,KAAK2C,OACL8P,EAAK5M,OAAS7F,KAAK61G,wBACnBpjG,EAAKgxB,KAAOzjC,KAAK41G,2BAA2B,IAAM51G,KAAKunF,eAAe,SAC/DvnF,KAAKy6E,WAAWhoE,EAAM,iBAG/B,oBAAoBA,GAElB,OADAzS,KAAK2C,OACE3C,KAAKy6E,WAAWhoE,EAAM,kBAG/B,sBAAsBA,EAAM4iG,EAAW/8B,EAAMj2D,GAC3C,IAAK,IAAImvE,EAAM,EAAGqlB,EAAqB72G,KAAKoa,MAAMmpF,OAAQ/R,EAAMqlB,EAAmBz6G,OAAQo1F,IAAO,CAClFqlB,EAAmBrlB,GAEvB5oF,OAASysG,GACjBr1G,KAAKmzE,MAAMmF,EAAKpvD,MAAO4pC,EAAcgE,mBAAoBu+C,GAI7D,MAAMp5C,EAAOj8D,KAAKoa,MAAMjd,KAAKovD,OAAS,OAASvsD,KAAKqX,MAAM01C,EAAMgE,SAAW,SAAW,KAEtF,IAAK,IAAIl0D,EAAImD,KAAKoa,MAAMmpF,OAAOnnG,OAAS,EAAGS,GAAK,EAAGA,IAAK,CACtD,MAAMovD,EAAQjsD,KAAKoa,MAAMmpF,OAAO1mG,GAEhC,GAAIovD,EAAM6qD,iBAAmBrkG,EAAKyW,MAIhC,MAHA+iC,EAAM6qD,eAAiB92G,KAAKoa,MAAM8O,MAClC+iC,EAAMgQ,KAAOA,EAcjB,OARAj8D,KAAKoa,MAAMmpF,OAAOvnG,KAAK,CACrB4M,KAAMysG,EACNp5C,KAAMA,EACN66C,eAAgB92G,KAAKoa,MAAM8O,QAE7BzW,EAAKgxB,KAAOzjC,KAAKunF,eAAellE,GAAwC,IAA9BA,EAAQzC,QAAQ,SAAkByC,EAAU,QAAUA,EAAU,SAC1GriB,KAAKoa,MAAMmpF,OAAOrnG,MAClBuW,EAAKw5C,MAAQqsB,EACNt4E,KAAKy6E,WAAWhoE,EAAM,oBAG/B,yBAAyBA,EAAM6lE,GAG7B,OAFA7lE,EAAKwlE,WAAaK,EAClBt4E,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,uBAG/B,WAAWymE,GAAkB,EAAO69B,GAAwB,EAAMC,GAChE,MAAMvkG,EAAOzS,KAAKw6E,YAalB,OAZAx6E,KAAKs9E,OAAOvwB,EAAMY,QAEdopD,GACF/2G,KAAK4zE,MAAM7qD,MAvjXG,GA0jXhB/oB,KAAKo5E,eAAe3mE,EAAMymE,GAAiB,EAAOnsB,EAAMe,OAAQkpD,GAE5DD,GACF/2G,KAAK4zE,MAAM8N,OAGN1hF,KAAKy6E,WAAWhoE,EAAM,kBAG/B,iBAAiBslE,GACf,MAAqB,wBAAdA,EAAK56E,MAA2D,kBAAzB46E,EAAKE,WAAW96E,OAA6B46E,EAAKE,WAAWC,MAAMc,cAGnH,eAAevmE,EAAMymE,EAAiBC,EAAUrzD,EAAKkxF,GACnD,MAAMvzE,EAAOhxB,EAAKgxB,KAAO,GACnB3iB,EAAarO,EAAKqO,WAAa,GACrC9gB,KAAK06F,4BAA4Bj3D,EAAMy1C,EAAkBp4D,OAAajlB,EAAWs9E,EAAUrzD,EAAKkxF,GAGlG,4BAA4BvzE,EAAM3iB,EAAYq4D,EAAUrzD,EAAKkxF,GAC3D,MAAMlT,EAAiB,GACjB5C,EAAYlhG,KAAKoa,MAAM+sE,OAC7B,IAAImsB,GAAyB,EACzB2D,GAAqB,EAEzB,MAAQj3G,KAAKqX,MAAMyO,IAAM,EAClBmxF,GAAsBj3G,KAAKoa,MAAM0pF,eAAe1nG,QACnD0nG,EAAe9nG,QAAQgE,KAAKoa,MAAM0pF,gBAGpC,MAAM/rB,EAAO/3E,KAAKunF,eAAe,KAAMpO,GAEvC,GAAIr4D,IAAem2F,GAAsBj3G,KAAKwnF,iBAAiBzP,GAA/D,CACE,MAAM90D,EAAYjjB,KAAKi5E,gBAAgBlB,GACvCj3D,EAAW9kB,KAAKinB,GAEXqwF,GAAoD,eAA1BrwF,EAAU1jB,MAAMA,QAC7C+zG,GAAyB,EACzBtzG,KAAKk3G,WAAU,SAMnBD,GAAqB,EACrBxzE,EAAKznC,KAAK+7E,GAGZ,GAAI/3E,KAAKoa,MAAM+sE,QAAU2c,EAAe1nG,OACtC,IAAK,IAAI81F,EAAM,EAAGA,EAAM4R,EAAe1nG,OAAQ81F,IAAO,CACpD,MAAMrjD,EAAMi1D,EAAe5R,GAC3BlyF,KAAKmzE,MAAMtkC,EAAKikB,EAAc4G,oBAI9Bs9C,GACFA,EAAgBv1G,KAAKzB,KAAMszG,GAGxBpS,GACHlhG,KAAKk3G,WAAU,GAGjBl3G,KAAK2C,OAGP,SAAS8P,EAAM49E,GAUb,OATA59E,EAAK49E,KAAOA,EACZrwF,KAAKs9E,OAAOvwB,EAAMmB,MAClBz7C,EAAKoN,KAAO7f,KAAKqX,MAAM01C,EAAMmB,MAAQ,KAAOluD,KAAKq9E,kBACjDr9E,KAAKs9E,OAAOvwB,EAAMmB,MAClBz7C,EAAK6J,OAAStc,KAAKqX,MAAM01C,EAAMkB,QAAU,KAAOjuD,KAAKq9E,kBACrDr9E,KAAKs9E,OAAOvwB,EAAMkB,QAClBx7C,EAAKgxB,KAAOzjC,KAAK41G,2BAA2B,IAAM51G,KAAKunF,eAAe,QACtEvnF,KAAK4zE,MAAM8N,OACX1hF,KAAKoa,MAAMmpF,OAAOrnG,MACX8D,KAAKy6E,WAAWhoE,EAAM,gBAG/B,WAAWA,EAAM49E,EAAMylB,GACrB,MAAMqB,EAAUn3G,KAAKqX,MAAM01C,EAAMiF,KAqBjC,OApBAhyD,KAAK2C,OAEDw0G,EACErB,GAAW,GAAG91G,KAAK68E,WAAWi5B,GAElCrjG,EAAK2kG,MAAQtB,GAAW,EAGR,wBAAdzlB,EAAKlzF,MAA+D,MAA7BkzF,EAAK4lB,aAAa,GAAG5lB,MAAkB8mB,IAAWn3G,KAAKoa,MAAM+sE,QAAwB,QAAdkJ,EAAKp0B,MAAmD,eAAjCo0B,EAAK4lB,aAAa,GAAG55G,GAAGc,KAExI,sBAAdkzF,EAAKlzF,MACd6C,KAAKmzE,MAAMkd,EAAKnnE,MAAO4pC,EAAcsD,WAAY,YAFjDp2D,KAAKmzE,MAAMkd,EAAKnnE,MAAO4pC,EAAckC,uBAAwBmiD,EAAU,SAAW,UAKpF1kG,EAAK4xB,KAAOgsD,EACZ59E,EAAKs1B,MAAQovE,EAAUn3G,KAAKq9E,kBAAoBr9E,KAAKy9E,0BACrDz9E,KAAKs9E,OAAOvwB,EAAMkB,QAClBx7C,EAAKgxB,KAAOzjC,KAAK41G,2BAA2B,IAAM51G,KAAKunF,eAAe,QACtEvnF,KAAK4zE,MAAM8N,OACX1hF,KAAKoa,MAAMmpF,OAAOrnG,MACX8D,KAAKy6E,WAAWhoE,EAAM0kG,EAAU,iBAAmB,kBAG5D,SAAS1kG,EAAM4kG,EAAOp7C,GACpB,MAAMg6C,EAAexjG,EAAKwjG,aAAe,GACnCqB,EAAet3G,KAAKg3E,UAAU,cAGpC,IAFAvkE,EAAKwpD,KAAOA,IAEH,CACP,MAAM0tB,EAAO3pF,KAAKw6E,YAkBlB,GAjBAx6E,KAAK+sF,WAAWpD,EAAM1tB,GAElBj8D,KAAK+8E,IAAIhwB,EAAMgC,IACjB46B,EAAK0G,KAAOgnB,EAAQr3G,KAAKu3G,6BAA+Bv3G,KAAKy9E,2BAEhD,UAATxhB,GAAsBj8D,KAAKqX,MAAM01C,EAAMiF,MAAQhyD,KAAKghF,aAAa,MAIzC,eAAjB2I,EAAKttF,GAAGc,MAA2Bk6G,IAAUr3G,KAAKqX,MAAM01C,EAAMiF,MAAQhyD,KAAKghF,aAAa,QACjGhhF,KAAKmzE,MAAMnzE,KAAKoa,MAAM+iE,WAAYrqB,EAAcgB,8BAA+B,4BAJ1EwjD,GACHt3G,KAAKmzE,MAAMnzE,KAAKoa,MAAM+iE,WAAYrqB,EAAcgB,8BAA+B,sBAMnF61B,EAAK0G,KAAO,MAGd4lB,EAAaj6G,KAAKgE,KAAKy6E,WAAWkP,EAAM,wBACnC3pF,KAAK+8E,IAAIhwB,EAAMpS,OAAQ,MAG9B,OAAOloC,EAGT,WAAWk3E,EAAM1tB,GACf0tB,EAAKttF,GAAK2D,KAAK4/F,mBACf5/F,KAAK04E,UAAUiR,EAAKttF,GAAa,QAAT4/D,EA5qXXqlB,EADIA,OA6qXiDzlF,EAAW,uBAAiC,QAATogE,GAGvG,cAAcxpD,EAAM+kG,EAjwBA,EAiwB2BziC,GAAU,GACvD,MAAMoV,EAjwBa,EAiwBCqtB,EACdC,EAjwBqB,EAiwBAD,EACrBE,KAAcvtB,GAjwBC,EAiwBgBqtB,GACrCx3G,KAAKo4E,aAAa3lE,EAAMsiE,GAEpB/0E,KAAKqX,MAAM01C,EAAMgD,OAAS0nD,GAC5Bz3G,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcmC,mCAG7CxiD,EAAKwgG,UAAYjzG,KAAK+8E,IAAIhwB,EAAMgD,MAE5Bo6B,IACF13E,EAAKpW,GAAK2D,KAAKghG,gBAAgB0W,IAGjC,MAAMrb,EAA4Br8F,KAAKoa,MAAMkiF,uBACvCC,EAAcv8F,KAAKoa,MAAMoiF,SACzBC,EAAcz8F,KAAKoa,MAAMsiF,SAyB/B,OAxBA18F,KAAKoa,MAAMkiF,wBAAyB,EACpCt8F,KAAKoa,MAAMoiF,UAAY,EACvBx8F,KAAKoa,MAAMsiF,UAAY,EACvB18F,KAAK4zE,MAAM7qD,MAztXQ,GA0tXnB/oB,KAAKq9D,UAAUt0C,MAAM+rD,GAAcC,EAAStiE,EAAKwgG,YAE5C9oB,IACH13E,EAAKpW,GAAK2D,KAAKghG,mBAGjBhhG,KAAK8sF,oBAAoBr6E,GAAM,GAC/BzS,KAAK41G,2BAA2B,KAC9B51G,KAAKknF,2BAA2Bz0E,EAAM03E,EAAc,sBAAwB,wBAE9EnqF,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,OAEPyI,IAAgBstB,GAClBz3G,KAAKw9F,4BAA4B/qF,GAGnCzS,KAAKoa,MAAMkiF,uBAAyBD,EACpCr8F,KAAKoa,MAAMoiF,SAAWD,EACtBv8F,KAAKoa,MAAMsiF,SAAWD,EACfhqF,EAGT,gBAAgBilG,GACd,OAAOA,GAAa13G,KAAKqX,MAAM01C,EAAMnkD,MAAQ5I,KAAK8/E,kBAAoB,KAGxE,oBAAoBrtE,EAAMo6E,GACxB,MAAMwmB,EAAkBrzG,KAAKoa,MAAM2oF,aACnC/iG,KAAKoa,MAAM2oF,cAAe,EAC1B/iG,KAAKs9E,OAAOvwB,EAAMiB,QAClBv7C,EAAKi7B,OAAS1tC,KAAK80F,iBAAiB/nC,EAAMkB,OAAQ,IAAI,EAAO4+B,GAC7D7sF,KAAKoa,MAAM2oF,aAAesQ,EAC1BrzG,KAAKwvG,iCAGP,4BAA4B/8F,GACrBA,EAAKpW,IACV2D,KAAK4zE,MAAMa,YAAYhiE,EAAKpW,GAAGuM,KAAM5I,KAAKoa,MAAM+sE,QAAU10E,EAAKwgG,WAAaxgG,EAAKm7E,MAAQ5tF,KAAK4zE,MAAM+jC,oBA5uXvFr2B,EADIA,EAECA,GA2uXiJ7uE,EAAKpW,GAAG6sB,OAG7K,WAAWzW,EAAM03E,EAAaC,GAC5BpqF,KAAK2C,OACL3C,KAAKihG,eAAexuF,GACpB,MAAMyuF,EAAYlhG,KAAKoa,MAAM+sE,OAK7B,OAJAnnF,KAAKoa,MAAM+sE,QAAS,EACpBnnF,KAAKqqF,aAAa53E,EAAM03E,EAAaC,GACrCpqF,KAAKwrF,gBAAgB/4E,GACrBA,EAAKgxB,KAAOzjC,KAAKmhG,iBAAiB1uF,EAAK+kE,WAAY0pB,GAC5ClhG,KAAKy6E,WAAWhoE,EAAM03E,EAAc,mBAAqB,mBAGlE,kBACE,OAAOnqF,KAAKqX,MAAM01C,EAAMgC,KAAO/uD,KAAKqX,MAAM01C,EAAMmB,OAASluD,KAAKqX,MAAM01C,EAAMe,QAG5E,gBACE,OAAO9tD,KAAKqX,MAAM01C,EAAMiB,QAG1B,uBAAuBtuD,GACrB,QAAQA,EAAOq1B,UAAar1B,EAAO0kF,QAA+B,gBAApB1kF,EAAOtC,IAAIwL,MAA+C,gBAArBlJ,EAAOtC,IAAImC,OAGhG,eAAeq4G,EAAwB1W,GACrClhG,KAAK6lG,WAAW98E,QAChB,MAAM3O,EAAQ,CACZw9F,yBACAC,gBAAgB,EAChBC,gBAAgB,GAElB,IAAI/a,EAAa,GACjB,MAAMxjB,EAAYv5E,KAAKw6E,YAoCvB,GAnCAjB,EAAU91C,KAAO,GACjBzjC,KAAKs9E,OAAOvwB,EAAMY,QAClB3tD,KAAK41G,2BAA2B,KAC9B,MAAQ51G,KAAKqX,MAAM01C,EAAMe,SAAS,CAChC,GAAI9tD,KAAK+8E,IAAIhwB,EAAMmB,MAAO,CACxB,GAAI6uC,EAAW3gG,OAAS,EACtB,MAAM4D,KAAKmzE,MAAMnzE,KAAKoa,MAAM+iE,WAAYrqB,EAAcoB,oBAGxD,SAGF,GAAIl0D,KAAKqX,MAAM01C,EAAM6B,IAAK,CACxBmuC,EAAW/gG,KAAKgE,KAAKwsG,kBACrB,SAGF,MAAMliB,EAAStqF,KAAKw6E,YAEhBuiB,EAAW3gG,SACbkuF,EAAOyS,WAAaA,EACpB/8F,KAAKytF,2BAA2BnD,EAAQyS,EAAW,IACnDA,EAAa,IAGf/8F,KAAKwqF,iBAAiBjR,EAAW+Q,EAAQlwE,GAErB,gBAAhBkwE,EAAOruB,MAA0BquB,EAAOyS,YAAczS,EAAOyS,WAAW3gG,OAAS,GACnF4D,KAAKmzE,MAAMmX,EAAOphE,MAAO4pC,EAAckB,yBAI7Ch0D,KAAKoa,MAAM+sE,OAAS+Z,EACpBlhG,KAAK2C,OAEDo6F,EAAW3gG,OACb,MAAM4D,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcgH,mBAInD,OADA95D,KAAK6lG,WAAWnkB,OACT1hF,KAAKy6E,WAAWlB,EAAW,aAGpC,6BAA6BA,EAAW+Q,GACtC,MAAMltF,EAAM4C,KAAK8/E,iBAAgB,GAEjC,GAAI9/E,KAAKmrF,gBAAiB,CACxB,MAAMzrF,EAAS4qF,EAMf,OALA5qF,EAAOu8D,KAAO,SACdv8D,EAAOq1B,UAAW,EAClBr1B,EAAOtC,IAAMA,EACbsC,EAAO0kF,QAAS,EAChBpkF,KAAKsrF,gBAAgB/R,EAAW75E,GAAQ,GAAO,GAAO,GAAO,IACtD,EACF,GAAIM,KAAKorF,kBAAmB,CACjC,MAAMt0E,EAAOwzE,EAKb,OAJAxzE,EAAKie,UAAW,EAChBje,EAAK1Z,IAAMA,EACX0Z,EAAKstE,QAAS,EACd7K,EAAU91C,KAAKznC,KAAKgE,KAAKirF,mBAAmBn0E,KACrC,EAGT,OAAO,EAGT,iBAAiByiE,EAAW+Q,EAAQlwE,GAClC,MAAMgzB,EAAWptC,KAAKghF,aAAa,UAEnC,GAAI5zC,EAAU,CACZ,GAAIptC,KAAKuqF,6BAA6BhR,EAAW+Q,GAC/C,OAGF,GAAItqF,KAAK+8E,IAAIhwB,EAAMY,QAEjB,YADA3tD,KAAK+3G,sBAAsBx+B,EAAW+Q,EAAQlwE,GAKlDpa,KAAK6+F,6BAA6BtlB,EAAW+Q,EAAQlwE,EAAOgzB,GAG9D,6BAA6BmsC,EAAW+Q,EAAQlwE,EAAOgzB,GACrD,MAAM4qE,EAAe1tB,EACf2tB,EAAgB3tB,EAChB4tB,EAAa5tB,EACb6tB,EAAc7tB,EACd5qF,EAASs4G,EACTI,EAAeJ,EAGrB,GAFA1tB,EAAOlG,OAASh3C,EAEZptC,KAAK+8E,IAAIhwB,EAAMgD,MAIjB,OAHArwD,EAAOu8D,KAAO,SACdj8D,KAAKq4G,sBAAsB34G,GAEH,gBAApBA,EAAOtC,IAAID,UACb6C,KAAKurF,uBAAuBhS,EAAW0+B,GAAe,GAAM,IAI1Dj4G,KAAKqrF,uBAAuB2sB,IAC9Bh4G,KAAKmzE,MAAM6kC,EAAa56G,IAAI8rB,MAAO4pC,EAAce,6BAGnD7zD,KAAKsrF,gBAAgB/R,EAAWy+B,GAAc,GAAM,GAAO,GAAO,IAIpE,MAAM7e,EAAcn5F,KAAKoa,MAAM++E,YACzB/7F,EAAM4C,KAAKq4G,sBAAsB/tB,GACjCguB,EAAyB,gBAAbl7G,EAAID,KAChBo7G,EAAwB,eAAbn7G,EAAID,KACfq7G,EAA0Bx4G,KAAKoa,MAAM8O,MAG3C,GAFAlpB,KAAKy4G,6BAA6BL,GAE9Bp4G,KAAKmrF,gBAAiB,CAGxB,GAFAzrF,EAAOu8D,KAAO,SAEVq8C,EAEF,YADAt4G,KAAKurF,uBAAuBhS,EAAW0+B,GAAe,GAAO,GAI/D,MAAMz+B,EAAgBx5E,KAAKqrF,uBAAuB2sB,GAClD,IAAIv+B,GAAoB,EAEpBD,IACFw+B,EAAa/7C,KAAO,cAEhB7hD,EAAMy9F,iBAAmB73G,KAAKg3E,UAAU,eAC1Ch3E,KAAKmzE,MAAM/1E,EAAI8rB,MAAO4pC,EAAcwB,sBAGtCl6C,EAAMy9F,gBAAiB,EACvBp+B,EAAoBr/D,EAAMw9F,wBAG5B53G,KAAKsrF,gBAAgB/R,EAAWy+B,GAAc,GAAO,EAAOx+B,EAAeC,QACtE,GAAIz5E,KAAKorF,kBACVktB,EACFt4G,KAAK04G,yBAAyBn/B,EAAW4+B,GAEzCn4G,KAAK24G,kBAAkBp/B,EAAW2+B,QAE/B,IAAIK,GAAyB,UAAbn7G,EAAIwL,MAAqBuwF,GAAgBn5F,KAAKs7F,oBAoB1Did,GAA0B,QAAbn7G,EAAIwL,MAA+B,QAAbxL,EAAIwL,MAAoBuwF,GAAiBn5F,KAAKqX,MAAM01C,EAAMgD,OAAS/vD,KAAKs7F,mBAe3Gt7F,KAAKs7F,mBACVgd,EACFt4G,KAAK04G,yBAAyBn/B,EAAW4+B,GAEzCn4G,KAAK24G,kBAAkBp/B,EAAW2+B,GAGpCl4G,KAAK68E,cArBLn9E,EAAOu8D,KAAO7+D,EAAIwL,KAClB5I,KAAKq4G,sBAAsBL,GAEH,gBAApBt4G,EAAOtC,IAAID,KACb6C,KAAKurF,uBAAuBhS,EAAW0+B,GAAe,GAAO,IAEzDj4G,KAAKqrF,uBAAuB2sB,IAC9Bh4G,KAAKmzE,MAAM6kC,EAAa56G,IAAI8rB,MAAO4pC,EAAca,uBAGnD3zD,KAAKsrF,gBAAgB/R,EAAWy+B,GAAc,GAAO,GAAO,GAAO,IAGrEh4G,KAAK+yG,wBAAwBiF,QAlC0D,CACvF,MAAMhjC,EAAch1E,KAAK+8E,IAAIhwB,EAAMgD,MAE/BqoD,EAAal9B,UACfl7E,KAAK68E,WAAW27B,GAGlB94G,EAAOu8D,KAAO,SACdj8D,KAAKq4G,sBAAsB34G,GAC3BM,KAAKy4G,6BAA6BL,GAEV,gBAApB14G,EAAOtC,IAAID,KACb6C,KAAKurF,uBAAuBhS,EAAW0+B,EAAejjC,GAAa,IAE/Dh1E,KAAKqrF,uBAAuB2sB,IAC9Bh4G,KAAKmzE,MAAM6kC,EAAa56G,IAAI8rB,MAAO4pC,EAAcc,oBAGnD5zD,KAAKsrF,gBAAgB/R,EAAWy+B,EAAchjC,GAAa,GAAM,GAAO,KA4B9E,sBAAsBsV,GACpB,MAAMltF,EAAM4C,KAAK4rF,kBAAkBtB,GAAQ,GAU3C,OARKA,EAAOv1D,WAAYu1D,EAAOlG,QAAwB,cAAbhnF,EAAIwL,MAAsC,cAAdxL,EAAImC,OACxES,KAAKmzE,MAAM/1E,EAAI8rB,MAAO4pC,EAAcsG,iBAGrB,gBAAbh8D,EAAID,MAA0C,gBAAhBC,EAAIf,GAAGuM,MACvC5I,KAAKmzE,MAAM/1E,EAAI8rB,MAAO4pC,EAAcY,8BAG/Bt2D,EAGT,sBAAsBm8E,EAAW+Q,EAAQlwE,GACvC,IAAIw+F,EAEJ54G,KAAKohG,aAAa,mBAAoB9W,EAAOphE,OAC7ClpB,KAAK4zE,MAAM7qD,MAAM8vF,IACjB,MAAM7H,EAAYhxG,KAAKoa,MAAMmpF,OAC7BvjG,KAAKoa,MAAMmpF,OAAS,GACpBvjG,KAAKq9D,UAAUt0C,MAp3OL,GAq3OV,MAAM0a,EAAO6mD,EAAO7mD,KAAO,GAC3BzjC,KAAK06F,4BAA4Bj3D,OAAM5nC,GAAW,EAAOkxD,EAAMe,QAC/D9tD,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,OACX1hF,KAAKoa,MAAMmpF,OAASyN,EACpBz3B,EAAU91C,KAAKznC,KAAKgE,KAAKy6E,WAAW6P,EAAQ,gBAExClwE,EAAM09F,gBACR93G,KAAKmzE,MAAMmX,EAAOphE,MAAO4pC,EAAc6B,uBAGO,OAA3CikD,EAAqBtuB,EAAOyS,iBAAsB,EAAS6b,EAAmBx8G,SACjF4D,KAAKmzE,MAAMmX,EAAOphE,MAAO4pC,EAAcqB,sBAGzC/5C,EAAM09F,gBAAiB,EAGzB,kBAAkBv+B,EAAWziE,GACtBA,EAAKie,UAA+B,gBAAlBje,EAAK1Z,IAAIwL,MAA6C,gBAAnBkO,EAAK1Z,IAAImC,OACjES,KAAKmzE,MAAMr8D,EAAK1Z,IAAI8rB,MAAO4pC,EAAcW,uBAG3C8lB,EAAU91C,KAAKznC,KAAKgE,KAAKirF,mBAAmBn0E,IAG9C,yBAAyByiE,EAAWziE,GAClC9W,KAAKohG,aAAa,yBAA0BtqF,EAAK1Z,IAAI8rB,OACrD,MAAMzW,EAAOzS,KAAKkrF,0BAA0Bp0E,GAC5CyiE,EAAU91C,KAAKznC,KAAKyW,GACpBzS,KAAK6lG,WAAWiT,mBAAmBrmG,EAAKrV,IAAIf,GAAGuM,KAh/XvB,EAg/XkD6J,EAAKrV,IAAI8rB,OAGrF,gBAAgBqwD,EAAW75E,EAAQs1E,EAAaD,EAASyE,EAAeC,GACtEF,EAAU91C,KAAKznC,KAAKgE,KAAK05E,YAAYh6E,EAAQs1E,EAAaD,EAASyE,EAAeC,EAAmB,eAAe,IAGtH,uBAAuBF,EAAW75E,EAAQs1E,EAAaD,GACrD/0E,KAAKohG,aAAa,sBAAuB1hG,EAAOtC,IAAI8rB,OACpD,MAAMzW,EAAOzS,KAAK05E,YAAYh6E,EAAQs1E,EAAaD,GAAS,GAAO,EAAO,sBAAsB,GAChGwE,EAAU91C,KAAKznC,KAAKyW,GACpB,MAAMwpD,EAAqB,QAAdxpD,EAAKwpD,KAAiBxpD,EAAK2xE,OA//XR2hB,EAHF,EAkgY+F,QAAdtzF,EAAKwpD,KAAiBxpD,EAAK2xE,OA9/X1G20B,EAHF,EAMN,EA4/XxB/4G,KAAK6lG,WAAWiT,mBAAmBrmG,EAAKrV,IAAIf,GAAGuM,KAAMqzD,EAAMxpD,EAAKrV,IAAI8rB,OAGtE,6BAA6B41E,IAE7B,0BAA0BrsF,GAOxB,OANAzS,KAAK4zE,MAAM7qD,MAAM8vF,IACjB74G,KAAKq9D,UAAUt0C,MAt6OL,GAu6OVtW,EAAKlT,MAAQS,KAAK+8E,IAAIhwB,EAAMgC,IAAM/uD,KAAKy9E,0BAA4B,KACnEz9E,KAAKugF,YACLvgF,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,OACJ1hF,KAAKy6E,WAAWhoE,EAAM,wBAG/B,mBAAmBA,GAmBjB,OAlBKA,EAAK4tE,gBACRrgF,KAAKohG,aAAa,mBAGpBphG,KAAK4zE,MAAM7qD,MAAM8vF,IACjB74G,KAAKq9D,UAAUt0C,MAp7OL,GAs7ON/oB,KAAKqX,MAAM01C,EAAMgC,KACnB/uD,KAAKohG,aAAa,mBAClBphG,KAAK2C,OACL8P,EAAKlT,MAAQS,KAAKy9E,2BAElBhrE,EAAKlT,MAAQ,KAGfS,KAAKugF,YACLvgF,KAAKq9D,UAAUqkB,OACf1hF,KAAK4zE,MAAM8N,OACJ1hF,KAAKy6E,WAAWhoE,EAAM,iBAG/B,aAAaA,EAAM03E,EAAaC,EAAYvW,EArjY3ByN,KAsjYXthF,KAAKqX,MAAM01C,EAAMnkD,OACnB6J,EAAKpW,GAAK2D,KAAK8/E,kBAEXqK,GACFnqF,KAAK04E,UAAUjmE,EAAKpW,GAAIw3E,OAAah4E,EAAW,eAG9CuuF,IAAeD,EACjB13E,EAAKpW,GAAK,KAEV2D,KAAK68E,WAAW,KAAM/pB,EAAcoE,kBAK1C,gBAAgBzkD,GACdA,EAAK+kE,WAAax3E,KAAK+8E,IAAIhwB,EAAM2E,UAAY1xD,KAAK+uG,sBAAwB,KAG5E,YAAYt8F,GACV,MAAM2D,EAAapW,KAAKuhG,iCAAiC9uF,GACnDumG,GAAqB5iG,GAAcpW,KAAK+8E,IAAIhwB,EAAMpS,OAClDs+D,EAAUD,GAAqBh5G,KAAKgqF,cAAcv3E,GAClDw3E,EAAegvB,GAAWj5G,KAAKkqF,mCAAmCz3E,GAClEymG,EAAsBF,KAAuB/uB,GAAgBjqF,KAAK+8E,IAAIhwB,EAAMpS,QAC5Ew+D,EAAiB/iG,GAAc6iG,EAErC,GAAIA,IAAYhvB,EAGd,OAFI7zE,GAAYpW,KAAK68E,aACrB78E,KAAK8pF,gBAAgBr3E,GAAM,GACpBzS,KAAKy6E,WAAWhoE,EAAM,wBAG/B,MAAM2mG,EAAgBp5G,KAAKq5G,gCAAgC5mG,GAE3D,GAAI2D,GAAc4iG,IAAsBC,IAAYG,GAAiBnvB,GAAgBivB,IAAwBE,EAC3G,MAAMp5G,KAAK68E,WAAW,KAAM9vB,EAAMY,QAGpC,IAAI2rD,EASJ,GAPIH,GAAkBC,GACpBE,GAAiB,EACjBt5G,KAAK8pF,gBAAgBr3E,EAAM0mG,IAE3BG,EAAiBt5G,KAAKu5G,4BAA4B9mG,GAGhD0mG,GAAkBC,GAAiBE,EAErC,OADAt5G,KAAKwhG,YAAY/uF,GAAM,GAAM,IAASA,EAAKwG,QACpCjZ,KAAKy6E,WAAWhoE,EAAM,0BAG/B,GAAIzS,KAAK+8E,IAAIhwB,EAAMwD,UAGjB,OAFA99C,EAAKovE,YAAc7hF,KAAK4nF,+BACxB5nF,KAAKwhG,YAAY/uF,GAAM,GAAM,GACtBzS,KAAKy6E,WAAWhoE,EAAM,4BAG/B,MAAMzS,KAAK68E,WAAW,KAAM9vB,EAAMY,QAGpC,cAAcl7C,GACZ,OAAOzS,KAAK+8E,IAAIhwB,EAAMgD,MAGxB,iCAAiCt9C,GAC/B,GAAIzS,KAAK2nF,2BAA4B,CACnC3nF,KAAKohG,aAAa,qBAClB,MAAMpV,EAAYhsF,KAAKw6E,YAGvB,OAFAwR,EAAUxQ,SAAWx7E,KAAK8/E,iBAAgB,GAC1CrtE,EAAKgpE,WAAa,CAACz7E,KAAKy6E,WAAWuR,EAAW,4BACvC,EAGT,OAAO,EAGT,mCAAmCv5E,GACjC,GAAIzS,KAAKghF,aAAa,MAAO,CACtBvuE,EAAKgpE,aAAYhpE,EAAKgpE,WAAa,IACxC,MAAMuQ,EAAYhsF,KAAKg4E,YAAYh4E,KAAKoa,MAAM0mE,aAAc9gF,KAAKoa,MAAMypF,iBAIvE,OAHA7jG,KAAK2C,OACLqpF,EAAUxQ,SAAWx7E,KAAKw5G,wBAC1B/mG,EAAKgpE,WAAWz/E,KAAKgE,KAAKy6E,WAAWuR,EAAW,8BACzC,EAGT,OAAO,EAGT,gCAAgCv5E,GAC9B,QAAIzS,KAAKqX,MAAM01C,EAAMY,UACdl7C,EAAKgpE,aAAYhpE,EAAKgpE,WAAa,IACxChpE,EAAKgpE,WAAWz/E,QAAQgE,KAAK6pF,yBAC7Bp3E,EAAKwG,OAAS,KACdxG,EAAKovE,YAAc,MACZ,GAMX,4BAA4BpvE,GAC1B,QAAIzS,KAAK0nF,iCACPj1E,EAAKgpE,WAAa,GAClBhpE,EAAKwG,OAAS,KACdxG,EAAKovE,YAAc7hF,KAAK+pF,uBAAuBt3E,IACxC,GAMX,kBACE,IAAKzS,KAAKghF,aAAa,SAAU,OAAO,EACxC,MAAMr+E,EAAO3C,KAAKwyF,iBAClB,OAAQngC,EAAUxyC,KAAK7f,KAAKm+C,MAAM31C,MAAMxI,KAAKoa,MAAMy0B,IAAKlsC,KAAU3C,KAAKqhG,qBAAqB1+F,EAAM,YAGpG,+BACE,MAAM21E,EAAOt4E,KAAKw6E,YACZzF,EAAU/0E,KAAKo1G,kBAErB,GAAIp1G,KAAKqX,MAAM01C,EAAM6D,YAAcmkB,EAOjC,OANA/0E,KAAK2C,OAEDoyE,GACF/0E,KAAK2C,OAGA3C,KAAKowG,cAAc93B,EAAMmhC,EAAmC1kC,GAC9D,GAAI/0E,KAAKqX,MAAM01C,EAAM0E,QAC1B,OAAOzxD,KAAK07F,WAAWpjB,GAAM,GAAM,GAC9B,GAAIt4E,KAAKqX,MAAM01C,EAAM6B,IAM1B,OALI5uD,KAAKg3E,UAAU,eAAiBh3E,KAAKk3E,gBAAgB,aAAc,2BACrEl3E,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAciB,uBAG7C/zD,KAAKywG,iBAAgB,GACdzwG,KAAK07F,WAAWpjB,GAAM,GAAM,GAC9B,GAAIt4E,KAAKqX,MAAM01C,EAAMoE,SAAWnxD,KAAKqX,MAAM01C,EAAMmE,OAASlxD,KAAK+hF,QACpE,MAAM/hF,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcoI,0BAC5C,CACL,MAAM77D,EAAMW,KAAKy9E,0BAEjB,OADAz9E,KAAKugF,YACElhF,GAIX,uBAAuBoT,GACrB,OAAOzS,KAAKunF,eAAe,MAG7B,2BACE,GAAIvnF,KAAKqX,MAAM01C,EAAMnkD,MAAO,CAC1B,MAAMrJ,EAAQS,KAAKoa,MAAM7a,MAEzB,GAAc,UAAVA,IAAsBS,KAAKoa,MAAM++E,aAAyB,QAAV55F,EAClD,OAAO,EAGT,IAAe,SAAVA,GAA8B,cAAVA,KAA2BS,KAAKoa,MAAM++E,YAAa,CAC1E,MAAMl5F,EAAID,KAAKqkF,YAEf,GAAIpkF,EAAE9C,OAAS4vD,EAAMnkD,MAAoB,SAAZ3I,EAAEV,OAAoBU,EAAE9C,OAAS4vD,EAAMY,OAElE,OADA3tD,KAAK+wG,gBAAgB,CAAC,OAAQ,gBACvB,QAGN,IAAK/wG,KAAKqX,MAAM01C,EAAMwD,UAC3B,OAAO,EAGT,MAAM5tD,EAAO3C,KAAKwyF,iBACZknB,EAAU15G,KAAKqhG,qBAAqB1+F,EAAM,QAEhD,GAAoC,KAAhC3C,KAAKm+C,MAAMjP,WAAWvsC,IAAgB3C,KAAKqX,MAAM01C,EAAMnkD,OAAS8wG,EAClE,OAAO,EAGT,GAAI15G,KAAKqX,MAAM01C,EAAMwD,WAAampD,EAAS,CACzC,MAAMC,EAAgB35G,KAAKm+C,MAAMjP,WAAWlvC,KAAKshG,oBAAoB3+F,EAAO,IAC5E,OAAyB,KAAlBg3G,GAA0C,KAAlBA,EAGjC,OAAO,EAGT,gBAAgBlnG,EAAM6qE,GAChBt9E,KAAK4gF,cAAc,SACrBnuE,EAAKwG,OAASjZ,KAAK2hG,oBACnB3hG,KAAKwhG,YAAY/uF,IAEb6qE,EACFt9E,KAAK68E,aAELpqE,EAAKwG,OAAS,KAIlBjZ,KAAKugF,YAGP,+BACE,GAAIvgF,KAAKqX,MAAM01C,EAAM6B,MACnB5uD,KAAK+wG,gBAAgB,CAAC,aAAc,sBAEhC/wG,KAAKg3E,UAAU,eAAe,CAChC,IAAIh3E,KAAKk3E,gBAAgB,aAAc,0BAGrC,OAAO,EAFPl3E,KAAK68E,WAAW78E,KAAKoa,MAAM8O,MAAO4pC,EAAciB,uBAOtD,MAAmC,QAA5B/zD,KAAKoa,MAAMjd,KAAKgvD,SAAiD,UAA5BnsD,KAAKoa,MAAMjd,KAAKgvD,SAAmD,aAA5BnsD,KAAKoa,MAAMjd,KAAKgvD,SAAsD,UAA5BnsD,KAAKoa,MAAMjd,KAAKgvD,SAAuBnsD,KAAK+hF,SAAW/hF,KAAKo1G,kBAG3L,YAAY3iG,EAAMmnG,EAAYC,EAAWC,GACvC,GAAIF,EACF,GAAIC,GAGF,GAFA75G,KAAK+5G,sBAAsBtnG,EAAM,WAE7BzS,KAAKg3E,UAAU,qBAAsB,CACvC,IAAIgjC,EAEJ,MAAMn4B,EAAcpvE,EAAKovE,YAEA,eAArBA,EAAY1kF,MAA8C,SAArB0kF,EAAYj5E,MAAmBi5E,EAAY/7D,IAAM+7D,EAAY34D,OAAU,IAAmD,OAA3C8wF,EAAqBn4B,EAAY3J,YAAiB,EAAS8hC,EAAmBhhC,gBACpMh5E,KAAKmzE,MAAM0O,EAAY34D,MAAO4pC,EAAciC,qCAG3C,GAAItiD,EAAKgpE,YAAchpE,EAAKgpE,WAAWr/E,OAC5C,IAAK,IAAIg2F,EAAM,EAAG6nB,EAAmBxnG,EAAKgpE,WAAY2W,EAAM6nB,EAAiB79G,OAAQg2F,IAAO,CAC1F,MAAMpG,EAAYiuB,EAAiB7nB,IAC7B,SACJ5W,GACEwQ,EACEkuB,EAAiC,eAAlB1+B,EAASr+E,KAAwBq+E,EAAS5yE,KAAO4yE,EAASj8E,MAG/E,GAFAS,KAAK+5G,sBAAsB/tB,EAAWkuB,IAEjCJ,GAAU9tB,EAAUC,MAAO,CAC9B,MAAM,MACJA,GACED,EAEe,kBAAfC,EAAM9uF,KACR6C,KAAKmzE,MAAM6Y,EAAU9iE,MAAO4pC,EAAcgC,sBAAuBm3B,EAAM/T,MAAMz8E,IAAKy+G,IAElFl6G,KAAK4sF,kBAAkBX,EAAMrjF,KAAMqjF,EAAM/iE,OAAO,GAAM,GACtDlpB,KAAK4zE,MAAMc,iBAAiBuX,UAI7B,GAAIx5E,EAAKovE,YACd,GAA8B,wBAA1BpvE,EAAKovE,YAAY1kF,MAA4D,qBAA1BsV,EAAKovE,YAAY1kF,KAA6B,CACnG,MAAMd,EAAKoW,EAAKovE,YAAYxlF,GAC5B,IAAKA,EAAI,MAAM,IAAIk+B,MAAM,qBACzBv6B,KAAK+5G,sBAAsBtnG,EAAMpW,EAAGuM,WAC/B,GAA8B,wBAA1B6J,EAAKovE,YAAY1kF,KAC1B,IAAK,IAAIg9G,EAAM,EAAGC,EAAwB3nG,EAAKovE,YAAYo0B,aAAckE,EAAMC,EAAsBh+G,OAAQ+9G,IAAO,CAClH,MAAMt4B,EAAcu4B,EAAsBD,GAC1Cn6G,KAAKq4E,iBAAiBwJ,EAAYxlF,IAQ1C,GAFiC2D,KAAKoa,MAAMopF,eAAexjG,KAAKoa,MAAMopF,eAAepnG,OAAS,GAEjEA,OAC3B,MAAM4D,KAAKmzE,MAAM1gE,EAAKyW,MAAO4pC,EAAcmI,4BAI/C,iBAAiBxoD,GACf,GAAkB,eAAdA,EAAKtV,KACP6C,KAAK+5G,sBAAsBtnG,EAAMA,EAAK7J,WACjC,GAAkB,kBAAd6J,EAAKtV,KACd,IAAK,IAAIk9G,EAAM,EAAGC,EAAmB7nG,EAAKw6B,WAAYotE,EAAMC,EAAiBl+G,OAAQi+G,IAAO,CAC1F,MAAMvjG,EAAOwjG,EAAiBD,GAC9Br6G,KAAKq4E,iBAAiBvhE,QAEnB,GAAkB,iBAAdrE,EAAKtV,KACd,IAAK,IAAIo9G,EAAM,EAAGC,EAAiB/nG,EAAKs6B,SAAUwtE,EAAMC,EAAep+G,OAAQm+G,IAAO,CACpF,MAAMvN,EAAOwN,EAAeD,GAExBvN,GACFhtG,KAAKq4E,iBAAiB20B,OAGH,mBAAdv6F,EAAKtV,KACd6C,KAAKq4E,iBAAiB5lE,EAAKlT,OACJ,gBAAdkT,EAAKtV,KACd6C,KAAKq4E,iBAAiB5lE,EAAK+qE,UACJ,sBAAd/qE,EAAKtV,MACd6C,KAAKq4E,iBAAiB5lE,EAAK4xB,MAI/B,sBAAsB5xB,EAAM7J,GACtB5I,KAAKoa,MAAM2pF,oBAAoBnkF,QAAQhX,IAAS,GAClD5I,KAAKmzE,MAAM1gE,EAAKyW,MAAgB,YAATtgB,EAAqBkqD,EAAcyB,uBAAyBzB,EAAc0B,gBAAiB5rD,GAGpH5I,KAAKoa,MAAM2pF,oBAAoB/nG,KAAK4M,GAGtC,wBACE,MAAMwpC,EAAQ,GACd,IAAI5V,GAAQ,EAGZ,IAFAx8B,KAAKs9E,OAAOvwB,EAAMY,SAEV3tD,KAAK+8E,IAAIhwB,EAAMe,SAAS,CAC9B,GAAItxB,EACFA,GAAQ,OAGR,GADAx8B,KAAKs9E,OAAOvwB,EAAMpS,OACd36C,KAAK+8E,IAAIhwB,EAAMe,QAAS,MAG9B,MAAMr7C,EAAOzS,KAAKw6E,YAClB/nE,EAAKw5E,MAAQjsF,KAAKw5G,wBAClB/mG,EAAK+oE,SAAWx7E,KAAK4gF,cAAc,MAAQ5gF,KAAKw5G,wBAA0B/mG,EAAKw5E,MAAMQ,UACrFr6C,EAAMp2C,KAAKgE,KAAKy6E,WAAWhoE,EAAM,oBAGnC,OAAO2/B,EAGT,wBACE,GAAIpyC,KAAKqX,MAAM01C,EAAMK,QAAS,CAC5BptD,KAAKohG,aAAa,qBAClB,MAAM7gG,EAASP,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,iBAC7Ck7G,EAAYl6G,EAAOhB,MAAM8X,MAAMiuF,IAMrC,OAJImV,GACFz6G,KAAKmzE,MAAM5yE,EAAO2oB,MAAO4pC,EAAc2E,iCAAkCgjD,EAAU,GAAGvrE,WAAW,GAAG53B,SAAS,KAGxG/W,EAGT,OAAOP,KAAK8/E,iBAAgB,GAG9B,YAAYrtE,GAGV,GAFAA,EAAKgpE,WAAa,IAEbz7E,KAAKqX,MAAM01C,EAAMK,QAAS,CAC7B,MACMstD,GADa16G,KAAKksF,iCAAiCz5E,IACxBzS,KAAK+8E,IAAIhwB,EAAMpS,OAC1Cs+D,EAAUyB,GAAa16G,KAAKyhG,8BAA8BhvF,GAC5DioG,IAAczB,GAASj5G,KAAK0hG,2BAA2BjvF,GAC3DzS,KAAK0/E,iBAAiB,QAGxBjtE,EAAKwG,OAASjZ,KAAK2hG,oBACnB,MAAMgZ,EAAa36G,KAAK46G,6BAExB,GAAID,EACFloG,EAAKkoG,WAAaA,MACb,CACH,MAAM98B,EAAa79E,KAAK66G,6BAEpBh9B,IACFprE,EAAKorE,WAAaA,GAKxB,OADA79E,KAAKugF,YACEvgF,KAAKy6E,WAAWhoE,EAAM,qBAG/B,oBAEE,OADKzS,KAAKqX,MAAM01C,EAAMK,SAASptD,KAAK68E,aAC7B78E,KAAK+5E,gBAGd,yBAAyBtnE,GACvB,OAAOzS,KAAKqX,MAAM01C,EAAMnkD,MAG1B,0BAA0B6J,EAAMu5E,EAAW7uF,EAAMq7E,GAC/CwT,EAAUC,MAAQjsF,KAAK8/E,kBACvB9/E,KAAK04E,UAAUsT,EAAUC,MAx7YR3K,OAw7Y6BzlF,EAAW28E,GACzD/lE,EAAKgpE,WAAWz/E,KAAKgE,KAAKy6E,WAAWuR,EAAW7uF,IAGlD,qBACE6C,KAAKohG,aAAa,oBAClB,MAAMnzF,EAAQ,GACR6sG,EAAY,IAAIp9G,IAEtB,EAAG,CACD,GAAIsC,KAAKqX,MAAM01C,EAAMe,QACnB,MAGF,MAAMr7C,EAAOzS,KAAKw6E,YAClB,IAAIugC,EAqBJ,GAlBEA,EADE/6G,KAAKqX,MAAM01C,EAAMK,QACAptD,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,iBAEpCS,KAAK8/E,iBAAgB,GAG1C9/E,KAAK2C,OACL8P,EAAKrV,IAAM29G,EAEW,SAAlBtoG,EAAKrV,IAAIwL,MACX5I,KAAKmzE,MAAM1gE,EAAKrV,IAAI8rB,MAAO4pC,EAAcwE,iCAAkC7kD,EAAKrV,IAAIwL,MAGlFkyG,EAAUn9G,IAAI8U,EAAKrV,IAAIwL,OACzB5I,KAAKmzE,MAAM1gE,EAAKrV,IAAI8rB,MAAO4pC,EAAc0E,kCAAmC/kD,EAAKrV,IAAIwL,MAGvFkyG,EAAUl9G,IAAI6U,EAAKrV,IAAIwL,OAElB5I,KAAKqX,MAAM01C,EAAMK,QACpB,MAAMptD,KAAK68E,WAAW78E,KAAKoa,MAAM8O,MAAO4pC,EAAcyE,6BAGxD9kD,EAAKlT,MAAQS,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,iBACjDS,KAAKy6E,WAAWhoE,EAAM,mBACtBxE,EAAMjS,KAAKyW,SACJzS,KAAK+8E,IAAIhwB,EAAMpS,QAExB,OAAO1sC,EAGT,6BACE,IAAIjO,KAAKqX,MAAM01C,EAAMsE,QAAWrxD,KAAK09D,wBAInC,OAAI19D,KAAKg3E,UAAU,oBAA4B,GACxC,KAJPh3E,KAAKohG,aAAa,oBAClBphG,KAAK2C,OAMP,MAAMsL,EAAQ,GACR4vE,EAAa,IAAIngF,IAEvB,EAAG,CACD,MAAM+U,EAAOzS,KAAKw6E,YAclB,GAbA/nE,EAAKrV,IAAM4C,KAAK8/E,iBAAgB,GAEV,SAAlBrtE,EAAKrV,IAAIwL,MACX5I,KAAKmzE,MAAM1gE,EAAKrV,IAAI8rB,MAAO4pC,EAAcwE,iCAAkC7kD,EAAKrV,IAAIwL,MAGlFi1E,EAAWlgF,IAAI8U,EAAKrV,IAAIwL,OAC1B5I,KAAKmzE,MAAM1gE,EAAKrV,IAAI8rB,MAAO4pC,EAAc0E,kCAAmC/kD,EAAKrV,IAAIwL,MAGvFi1E,EAAWjgF,IAAI6U,EAAKrV,IAAIwL,MACxB5I,KAAKs9E,OAAOvwB,EAAMoB,QAEbnuD,KAAKqX,MAAM01C,EAAMK,QACpB,MAAMptD,KAAK68E,WAAW78E,KAAKoa,MAAM8O,MAAO4pC,EAAcyE,6BAGxD9kD,EAAKlT,MAAQS,KAAK63E,aAAa73E,KAAKoa,MAAM7a,MAAO,iBACjDS,KAAKy6E,WAAWhoE,EAAM,mBACtBxE,EAAMjS,KAAKyW,SACJzS,KAAK+8E,IAAIhwB,EAAMpS,QAExB,OAAO1sC,EAGT,6BACE,IAAIjO,KAAKqX,MAAM01C,EAAMnkD,OAA8B,WAArB5I,KAAKoa,MAAM7a,OAAuBS,KAAK09D,wBAInE,OAAI19D,KAAKg3E,UAAU,oBAA4B,GACxC,KAJPh3E,KAAKohG,aAAa,oBAClBphG,KAAK2C,OAMP3C,KAAK+8E,IAAIhwB,EAAMY,QACf,MAAM1/C,EAAQjO,KAAKg7G,qBAEnB,OADAh7G,KAAK+8E,IAAIhwB,EAAMe,QACR7/C,EAGT,iCAAiCwE,GAC/B,QAAIzS,KAAK+rF,yBAAyBt5E,KAChCzS,KAAKi7G,0BAA0BxoG,EAAMzS,KAAKw6E,YAAa,yBAA0B,6BAC1E,GAMX,8BAA8B/nE,GAC5B,GAAIzS,KAAKqX,MAAM01C,EAAMgD,MAAO,CAC1B,MAAMi8B,EAAYhsF,KAAKw6E,YAIvB,OAHAx6E,KAAK2C,OACL3C,KAAK0/E,iBAAiB,MACtB1/E,KAAKi7G,0BAA0BxoG,EAAMu5E,EAAW,2BAA4B,+BACrE,EAGT,OAAO,EAGT,2BAA2Bv5E,GACzB,IAAI+pB,GAAQ,EAGZ,IAFAx8B,KAAKs9E,OAAOvwB,EAAMY,SAEV3tD,KAAK+8E,IAAIhwB,EAAMe,SAAS,CAC9B,GAAItxB,EACFA,GAAQ,MACH,CACL,GAAIx8B,KAAK+8E,IAAIhwB,EAAMoB,OACjB,MAAMnuD,KAAKmzE,MAAMnzE,KAAKoa,MAAM8O,MAAO4pC,EAAcuB,wBAInD,GADAr0D,KAAKs9E,OAAOvwB,EAAMpS,OACd36C,KAAK+8E,IAAIhwB,EAAMe,QAAS,MAG9B9tD,KAAKk7G,qBAAqBzoG,IAI9B,qBAAqBA,GACnB,MAAMu5E,EAAYhsF,KAAKw6E,YAGvB,GAFAwR,EAAUQ,SAAWxsF,KAAKw5G,wBAEtBx5G,KAAK4gF,cAAc,MACrBoL,EAAUC,MAAQjsF,KAAK8/E,sBAClB,CACL,MAAM,SACJ0M,GACER,EAEJ,GAAsB,kBAAlBQ,EAASrvF,KACX,MAAM6C,KAAKmzE,MAAM6Y,EAAU9iE,MAAO4pC,EAAcuC,sBAAuBm3B,EAASjtF,OAGlFS,KAAK4sF,kBAAkBJ,EAAS5jF,KAAMojF,EAAU9iE,OAAO,GAAM,GAC7D8iE,EAAUC,MAAQO,EAASC,UAG7BzsF,KAAK04E,UAAUsT,EAAUC,MA1lZR3K,OA0lZ6BzlF,EAAW,oBACzD4W,EAAKgpE,WAAWz/E,KAAKgE,KAAKy6E,WAAWuR,EAAW,sBA2FlD,YAAY1wF,EAAS6iD,GAEnBg2B,MADA74E,EA7gLJ,SAAoB6/G,GAClB,MAAM7/G,EAAU,GAEhB,IAAK,IAAIg2F,EAAK,EAAG8pB,EAAe/8G,OAAOkK,KAAKs5F,IAAiBvQ,EAAK8pB,EAAah/G,OAAQk1F,IAAM,CAC3F,MAAMl0F,EAAMg+G,EAAa9pB,GACzBh2F,EAAQ8B,GAAO+9G,GAAqB,MAAbA,EAAK/9G,GAAe+9G,EAAK/9G,GAAOykG,GAAezkG,GAGxE,OAAO9B,EAqgLK+/G,CAAW//G,GACN6iD,GACf,MAAM+0B,EAAelzE,KAAKs7G,kBAC1Bt7G,KAAK1E,QAAUA,EACf0E,KAAK4+D,SAAuC,WAA5B5+D,KAAK1E,QAAQwmG,WAC7B9hG,KAAK4zE,MAAQ,IAAIV,EAAalzE,KAAKmzE,MAAMpoE,KAAK/K,MAAOA,KAAK4+D,UAC1D5+D,KAAKq9D,UAAY,IAAIsX,GACrB30E,KAAK6lG,WAAa,IAAIH,GAAkB1lG,KAAKmzE,MAAMpoE,KAAK/K,OACxDA,KAAKi3E,QA4BT,SAAoBA,GAClB,MAAMskC,EAAY,IAAI/9G,IAEtB,IAAK,IAAI8zF,EAAK,EAAGA,EAAKra,EAAQ76E,OAAQk1F,IAAM,CAC1C,MAAMxuE,EAASm0D,EAAQqa,IAChB1oF,EAAMtN,GAAWqE,MAAMmoD,QAAQhlC,GAAUA,EAAS,CAACA,EAAQ,IAC7Dy4F,EAAU59G,IAAIiL,IAAO2yG,EAAUh+G,IAAIqL,EAAMtN,GAAW,IAG3D,OAAOigH,EArCUC,CAAWx7G,KAAK1E,QAAQ27E,SACvCj3E,KAAK+4C,SAAWz9C,EAAQymG,eAG1B,kBACE,OAAO7uB,EAGT,QACE,IAAIg6B,EAxlQM,EA0lQNltG,KAAKg3E,UAAU,kBAAoBh3E,KAAK4+D,WAC1CsuC,GAzlQc,GA4lQhBltG,KAAK4zE,MAAM7qD,MAluZO,GAmuZlB/oB,KAAKq9D,UAAUt0C,MAAMmkF,GACrB,MAAM9d,EAAOpvF,KAAKw6E,YACZ6U,EAAUrvF,KAAKw6E,YAKrB,OAJAx6E,KAAKivF,YACLG,EAAKyT,OAAS,KACd7iG,KAAKuvF,cAAcH,EAAMC,GACzBD,EAAKyT,OAAS7iG,KAAKoa,MAAMyoF,OAClBzT,GAgEX,SAASqsB,GAAUngH,EAAS6iD,GAC1B,IAAIhd,EAAMilE,GAOV,OALe,MAAX9qG,OAAkB,EAASA,EAAQ27E,YAprLzC,SAAyBA,GACvB,GAAID,GAAUC,EAAS,cAAe,CACpC,GAAID,GAAUC,EAAS,qBACrB,MAAM,IAAI18C,MAAM,mEAGlB,MAAMmhF,EAAyBxkC,GAAgBD,EAAS,aAAc,0BAEtE,GAA8B,MAA1BykC,EACF,MAAM,IAAInhF,MAAM,mQACX,GAAsC,kBAA3BmhF,EAChB,MAAM,IAAInhF,MAAM,+CAIpB,GAAIy8C,GAAUC,EAAS,SAAWD,GAAUC,EAAS,cACnD,MAAM,IAAI18C,MAAM,+CAGlB,GAAIy8C,GAAUC,EAAS,iBAAmBD,GAAUC,EAAS,eAC3D,MAAM,IAAI18C,MAAM,wDAGlB,GAAIy8C,GAAUC,EAAS,sBAAwBG,GAAmBt7E,SAASo7E,GAAgBD,EAAS,mBAAoB,aACtH,MAAM,IAAI18C,MAAM,+EAAiF68C,GAAmB74E,IAAIsM,GAAK,IAAIA,MAAMpD,KAAK,OAG9I,GAAIuvE,GAAUC,EAAS,oBAAqB,CAC1C,GAAID,GAAUC,EAAS,oBACrB,MAAM,IAAI18C,MAAM,iEAKlB,GAA2C,aAFA28C,GAAgBD,EAAS,mBAAoB,WAGtF,MAAM,IAAI18C,MAAM,wJAIpB,GAAIy8C,GAAUC,EAAS,oBAAsBI,GAA8Bv7E,SAASo7E,GAAgBD,EAAS,iBAAkB,eAC7H,MAAM,IAAI18C,MAAM,+EAAiF88C,GAA8B94E,IAAIsM,GAAK,IAAIA,MAAMpD,KAAK,OA6oLvJk0G,CAAgBrgH,EAAQ27E,SACxB91C,EAQJ,SAAwBy6E,GACtB,MAAMC,EAAaja,GAAiBpjG,OAAOoK,GAAQouE,GAAU4kC,EAAoBhzG,IAC3ExL,EAAMy+G,EAAWp0G,KAAK,KAC5B,IAAI05B,EAAM26E,GAAiB1+G,GAE3B,IAAK+jC,EAAK,CACRA,EAAMilE,GAEN,IAAK,IAAI9U,EAAK,EAAGA,EAAKuqB,EAAWz/G,OAAQk1F,IAAM,CAC7C,MAAMxuE,EAAS+4F,EAAWvqB,GAC1BnwD,EAAMm2C,GAAax0D,GAAQqe,GAG7B26E,GAAiB1+G,GAAO+jC,EAG1B,OAAOA,EAxBC46E,CAAezgH,EAAQ27E,UAGxB,IAAI91C,EAAI7lC,EAAS6iD,GAG1B,MAAM29D,GAAmB,GAqBzB/vD,EAAQw9B,MA/ER,SAAeprC,EAAO7iD,GACpB,IAAI0gH,EAEJ,GAAsE,iBAAzC,OAAvBA,EAAW1gH,QAAmB,EAAS0gH,EAASla,YA+BpD,OAAO2Z,GAAUngH,EAAS6iD,GAAOorC,QA9BjCjuF,EAAU+C,OAAOunC,OAAO,GAAItqC,GAE5B,IACEA,EAAQwmG,WAAa,SACrB,MAAMmD,EAASwW,GAAUngH,EAAS6iD,GAC5BtF,EAAMosD,EAAO1b,QAEnB,GAAI0b,EAAOoB,kBACT,OAAOxtD,EAGT,GAAIosD,EAAOqB,4BACT,IAEE,OADAhrG,EAAQwmG,WAAa,SACd2Z,GAAUngH,EAAS6iD,GAAOorC,QACjC,MAAO0yB,SAETpjE,EAAIw2C,QAAQyS,WAAa,SAG3B,OAAOjpD,EACP,MAAOqjE,GACP,IAEE,OADA5gH,EAAQwmG,WAAa,SACd2Z,GAAUngH,EAAS6iD,GAAOorC,QACjC,MAAO4yB,IAET,MAAMD,IAiDZnwD,EAAQsxB,gBA3CR,SAAyBl/B,EAAO7iD,GAC9B,MAAM2pG,EAASwW,GAAUngH,EAAS6iD,GAMlC,OAJI8mD,EAAO3pG,QAAQgnG,aACjB2C,EAAO7qF,MAAM+sE,QAAS,GAGjB8d,EAAOmX,iBAqChBrwD,EAAQswD,SAAWtvD","file":"js/vendors~confetti~vue-legacy.bfc55965779a19e47ebd.js","sourcesContent":["import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, isProxy, reactive, shallowReadonly, track, proxyRefs, computed as computed$1, ref, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, capitalize, hyphenate, camelize, isOn, hasOwn, isModelListener, toNumber, def, isReservedProp, EMPTY_ARR, isObject, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production') && (true )) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        const comp = instance.type;\r\n        if (!hmrDirtyComponents.has(comp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n            extend(comp, newComp);\r\n            for (const key in comp) {\r\n                if (!(key in newComp)) {\r\n                    delete comp[key];\r\n                }\r\n            }\r\n            // 2. Mark component dirty. This forces the renderer to replace the component\r\n            // on patch.\r\n            hmrDirtyComponents.add(comp);\r\n            // 3. Make sure to unmark the component after the reload.\r\n            queuePostFlushCb(() => {\r\n                hmrDirtyComponents.delete(comp);\r\n            });\r\n        }\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...args) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(`on` + capitalize(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"on${capitalize(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...args);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[`on` + capitalize(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = `on${capitalize(camelize(event))}`;\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && event.startsWith('update:')) {\r\n        handlerName = `on${capitalize(hyphenate(event))}`;\r\n        handler = props[handlerName];\r\n    }\r\n    if (!handler) {\r\n        handler = props[handlerName + `Once`];\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return (hasOwn(options, key[2].toLowerCase() + key.slice(3)) ||\r\n        hasOwn(options, key.slice(2)));\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicIndex > -1) {\r\n            dynamicChildren[dynamicIndex] = updatedRoot;\r\n        }\r\n        else if (dynamicChildren && updatedRoot.patchFlag > 0) {\r\n            dynamicChildren.push(updatedRoot);\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\n/**\r\n * dev only\r\n */\r\nfunction filterSingleRoot(children) {\r\n    const filtered = children.filter(child => {\r\n        return !(isVNode(child) &&\r\n            child.type === Comment &&\r\n            child.children !== 'v-if');\r\n    });\r\n    return filtered.length === 1 && isVNode(filtered[0]) ? filtered[0] : null;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, optimized);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG, optimized } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    const rendered = (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = `on${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}`;\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post' });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentComponent, parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                (true ) &&\r\n                parentComponent &&\r\n                parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isArray(ref)\r\n            ? ref\r\n            : { i: currentRenderingInstance, r: ref }\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        const provides = instance.provides;\r\n        if (key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            for (const key in provides) {\r\n                provide(key, provides[key]);\r\n            }\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = {};\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    if (!(process.env.NODE_ENV !== 'production') || !true) {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[`on${capitalize(key)}`] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.1\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, unref, Fragment, h, BaseTransition, useTransitionState, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\nfunction useCssVars(getter, scoped = false) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const prefix = scoped && instance.type.__scopeId\r\n        ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n        : ``;\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy), prefix);\r\n    onMounted(() => watchEffect(setVars));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars, prefix) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars, prefix);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${prefix}${key}`, unref(vars[key]));\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars, prefix));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                if (checked) {\r\n                    modelValue.add(elementValue);\r\n                }\r\n                else {\r\n                    modelValue.delete(elementValue);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { modifiers: { number } }, vnode) {\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","import { isString, hyphenate, extend, isObject, isArray, NO, makeMap, isSymbol, NOOP, PatchFlagNames, isGloballyWhitelisted, babelParserDefaultPlugins, hasOwn, isOn, isReservedProp, capitalize, camelize } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\nimport { parse } from '@babel/parser';\nimport { walk as walk$1 } from 'estree-walker';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    // transform errors\r\n    [27 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [28 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [29 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if.`,\r\n    [30 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [31 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [33 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [34 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [36 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [39 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [40 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [41 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [42 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [43 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [44 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [45 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [46 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [47 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [48 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `withScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_SCOPE_ID]: `withScopeId`,\r\n    [WITH_CTX]: `withCtx`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(CREATE_BLOCK);\r\n        }\r\n        else {\r\n            context.helper(CREATE_VNODE);\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic, loc = locStub, isConstant = false) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        isConstant,\r\n        content,\r\n        isStatic\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst memberExpRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\[[^\\]]+\\])*$/;\r\nconst isMemberExpression = (path) => {\r\n    if (!path)\r\n        return false;\r\n    return memberExpRE.test(path.trim());\r\n};\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.substr(offset, length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isBindKey(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isBindKey(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    const props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        node.props = propsWithInjection;\r\n    }\r\n    else {\r\n        node.arguments[2] = propsWithInjection;\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    return `_${type}_${name.replace(/[^\\w]/g, '_')}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    comments: false\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    for (const key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] = rawOptions[key] || defaultParserOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace management for more efficient output\r\n    // (same as v2 whitespace: 'condense')\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */) {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // If:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - the whitespace is adjacent to a comment, or:\r\n                    // - the whitespace is between two elements AND contains newline\r\n                    // Then the whitespace is ignored.\r\n                    if (!prev ||\r\n                        !next ||\r\n                        prev.type === 3 /* COMMENT */ ||\r\n                        next.type === 3 /* COMMENT */ ||\r\n                        (prev.type === 1 /* ELEMENT */ &&\r\n                            next.type === 1 /* ELEMENT */ &&\r\n                            /[\\r\\n]/.test(node.content))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, condensed consecutive whitespace inside the text\r\n                        // down to a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else {\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // also remove comment nodes in prod by default\r\n            if (!(process.env.NODE_ENV !== 'production') &&\r\n                node.type === 3 /* COMMENT */ &&\r\n                !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // check v-pre\r\n    if (!context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    const options = context.options;\r\n    if (!context.inVPre && !options.isCustomElement(tag)) {\r\n        const hasVIs = props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'is');\r\n        if (options.isNativeTag && !hasVIs) {\r\n            if (!options.isNativeTag(tag))\r\n                tagType = 1 /* COMPONENT */;\r\n        }\r\n        else if (hasVIs ||\r\n            isCoreComponent(tag) ||\r\n            (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n            /^[A-Z]/.test(tag) ||\r\n            tag === 'component') {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template' &&\r\n            props.some(p => {\r\n                return (p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name));\r\n            })) {\r\n            tagType = 3 /* TEMPLATE */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-|:|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        const dirName = match[1] ||\r\n            (startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.indexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                }\r\n                content = content.substr(1, content.length - 2);\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                isConstant: isStatic,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // true by `transformExpression` to make it eligible for hoisting.\r\n                isConstant: false,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers: match[3] ? match[3].substr(1).split('.') : [],\r\n            loc\r\n        };\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            isConstant: false,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = ['<', context.options.delimiters[0]];\r\n    if (mode === 3 /* CDATA */) {\r\n        endTokens.push(']]>');\r\n    }\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        rawText.indexOf('&') === -1) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                //TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, new Map(), \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, resultCache, doNotHoistNode = false) {\r\n    let hasHoistedNode = false;\r\n    // Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\r\n    // static bindings with expressions. These expressions are guaranteed to be\r\n    // constant so they are still eligible for hoisting, but they are only\r\n    // available at runtime and therefore cannot be evaluated ahead of time.\r\n    // This is only a concern for pre-stringification (via transformHoist by\r\n    // @vue/compiler-dom), but doing it here allows us to perform only one full\r\n    // walk of the AST and allow `stringifyStatic` to stop walking as soon as its\r\n    // stringficiation threshold is met.\r\n    let hasRuntimeConstant = false;\r\n    const { children } = node;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            let staticType;\r\n            if (!doNotHoistNode &&\r\n                (staticType = getStaticType(child, resultCache)) > 0) {\r\n                if (staticType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    hasRuntimeConstant = true;\r\n                }\r\n                child.codegenNode.patchFlag =\r\n                    -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                child.codegenNode = context.hoist(child.codegenNode);\r\n                hasHoistedNode = true;\r\n                continue;\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        !hasNonHoistableProps(child)) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */) {\r\n            const staticType = getStaticType(child.content, resultCache);\r\n            if (staticType > 0) {\r\n                if (staticType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    hasRuntimeConstant = true;\r\n                }\r\n                child.codegenNode = context.hoist(child.codegenNode);\r\n                hasHoistedNode = true;\r\n            }\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            walk(child, context, resultCache);\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, resultCache, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, resultCache, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (!hasRuntimeConstant && hasHoistedNode && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n}\r\nfunction getStaticType(node, resultCache = new Map()) {\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n            const cached = resultCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag && !hasNonHoistableProps(node)) {\r\n                // element self is static. check its children.\r\n                let returnType = 1 /* FULL_STATIC */;\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getStaticType(node.children[i], resultCache);\r\n                    if (childType === 0 /* NOT_STATIC */) {\r\n                        resultCache.set(node, 0 /* NOT_STATIC */);\r\n                        return 0 /* NOT_STATIC */;\r\n                    }\r\n                    else if (childType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                        returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                    }\r\n                }\r\n                // check if any of the props contain runtime constants\r\n                if (returnType !== 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ &&\r\n                            p.name === 'bind' &&\r\n                            p.exp &&\r\n                            (p.exp.type === 8 /* COMPOUND_EXPRESSION */ ||\r\n                                p.exp.isRuntimeConstant)) {\r\n                            returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // stati then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    codegenNode.isBlock = false;\r\n                }\r\n                resultCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                resultCache.set(node, 0 /* NOT_STATIC */);\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 1 /* FULL_STATIC */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_STATIC */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getStaticType(node.content, resultCache);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.isConstant\r\n                ? node.isRuntimeConstant\r\n                    ? 2 /* HAS_RUNTIME_CONSTANT */\r\n                    : 1 /* FULL_STATIC */\r\n                : 0 /* NOT_STATIC */;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 1 /* FULL_STATIC */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getStaticType(child, resultCache);\r\n                if (childType === 0 /* NOT_STATIC */) {\r\n                    return 0 /* NOT_STATIC */;\r\n                }\r\n                else if (childType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_STATIC */;\r\n    }\r\n}\r\n/**\r\n * Even for a node with no patch flag, it is possible for it to contain\r\n * non-hoistable expressions that refers to scope variables, e.g. compiler\r\n * injected keys or cached event handlers. Therefore we need to always check the\r\n * codegenNode's props to be sure.\r\n */\r\nfunction hasNonHoistableProps(node) {\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                !key.isStatic ||\r\n                (value.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                    (!value.isStatic && !value.isConstant))) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, ssr = false, ssrCssVars = ``, bindingMetadata = {}, onError = defaultOnError }) {\r\n    const context = {\r\n        // options\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        ssr,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        onError,\r\n        // state\r\n        root,\r\n        helpers: new Set(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: new Set(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        // methods\r\n        helper(name) {\r\n            context.helpers.add(name);\r\n            return name;\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, true);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(++context.cached, exp, isVNode);\r\n        }\r\n    };\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = [...context.imports];\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                codegenNode.isBlock = true;\r\n                helper(OPEN_BLOCK);\r\n                helper(CREATE_BLOCK);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssr = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssr,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    {\r\n        genFunctionPreamble(ast, context);\r\n    }\r\n    // binding optimizations\r\n    const optimizeSources = options.bindingMetadata\r\n        ? `, $props, $setup, $data, $options`\r\n        : ``;\r\n    // enter render function\r\n    if (!ssr) {\r\n        push(`function render(_ctx, _cache${optimizeSources}) {`);\r\n    }\r\n    else {\r\n        push(`function ssrRender(_ctx, _push, _parent, _attrs${optimizeSources}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName } = context;\r\n    const VueBinding =  runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline }) {\r\n    const resolver = helper(type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        const id = assets[i];\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)})`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    hoists.forEach((exp, i) => {\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = `);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    });\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (( (process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        // SSR only types\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            break;\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { push, helper, pure } = context;\r\n        if (pure) {\r\n            push(PURE_ANNOTATION);\r\n        }\r\n        push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n    }\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(helper(isBlock ? CREATE_BLOCK : CREATE_VNODE) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (( (process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent, scopeId, mode } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if ( isSlot) {\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(43 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false) {\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        // simple in-browser validation (same logic in 2.x)\r\n        validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        return node;\r\n    }\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    const { bindingMetadata } = context;\r\n    const prefix = (raw) => {\r\n        const source = hasOwn(bindingMetadata, raw)\r\n            ? `$` + bindingMetadata[raw]\r\n            : `_ctx`;\r\n        return `${source}.${raw}`;\r\n    };\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail on parens to prevent any possible function invocations.\r\n    const bailConstant = rawExp.indexOf(`(`) > -1;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        if (!asParams &&\r\n            !context.identifiers[rawExp] &&\r\n            !isGloballyWhitelisted(rawExp) &&\r\n            !isLiteralWhitelisted(rawExp)) {\r\n            node.content = prefix(rawExp);\r\n        }\r\n        else if (!context.identifiers[rawExp] && !bailConstant) {\r\n            // mark node constant for hoisting unless it's referring a scope variable\r\n            node.isConstant = true;\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parse(source, {\r\n            plugins: [...context.expressionPlugins, ...babelParserDefaultPlugins]\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(43 /* X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    const isDuplicate = (node) => ids.some(id => id.start === node.start);\r\n    walk$1(ast, {\r\n        enter(node, parent) {\r\n            if (node.type === 'Identifier') {\r\n                if (!isDuplicate(node)) {\r\n                    const needPrefix = shouldPrefix(node, parent);\r\n                    if (!knownIds[node.name] && needPrefix) {\r\n                        if (isPropertyShorthand(node, parent)) {\r\n                            // property shorthand like { foo }, we need to add the key since we\r\n                            // rewrite the value\r\n                            node.prefix = `${node.name}: `;\r\n                        }\r\n                        node.name = prefix(node.name);\r\n                        ids.push(node);\r\n                    }\r\n                    else if (!isStaticPropertyKey(node, parent)) {\r\n                        // The identifier is considered constant unless it's pointing to a\r\n                        // scope variable (a v-for alias, or a v-slot prop)\r\n                        if (!(needPrefix && knownIds[node.name]) && !bailConstant) {\r\n                            node.isConstant = true;\r\n                        }\r\n                        // also generate sub-expressions for other identifiers for better\r\n                        // source map support. (except for property keys which are static)\r\n                        ids.push(node);\r\n                    }\r\n                }\r\n            }\r\n            else if (isFunction(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                node.params.forEach(p => walk$1(p, {\r\n                    enter(child, parent) {\r\n                        if (child.type === 'Identifier' &&\r\n                            // do not record as scope variable if is a destructured key\r\n                            !isStaticPropertyKey(child, parent) &&\r\n                            // do not record if this is a default value\r\n                            // assignment of a destructured variable\r\n                            !(parent &&\r\n                                parent.type === 'AssignmentPattern' &&\r\n                                parent.right === child)) {\r\n                            const { name } = child;\r\n                            if (node.scopeIds && node.scopeIds.has(name)) {\r\n                                return;\r\n                            }\r\n                            if (name in knownIds) {\r\n                                knownIds[name]++;\r\n                            }\r\n                            else {\r\n                                knownIds[name] = 1;\r\n                            }\r\n                            (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        },\r\n        leave(node) {\r\n            if (node !== ast.body[0].expression && node.scopeIds) {\r\n                node.scopeIds.forEach((id) => {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant /* isConstant */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.isConstant = !bailConstant;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nconst isFunction = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isPropertyShorthand = (node, parent) => {\r\n    return (isStaticProperty(parent) &&\r\n        parent.value === node &&\r\n        parent.key.type === 'Identifier' &&\r\n        parent.key.name === node.name &&\r\n        parent.key.start === node.start);\r\n};\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\nfunction shouldPrefix(identifier, parent) {\r\n    if (!(isFunction(parent) &&\r\n        // not id of a FunctionDeclaration\r\n        (parent.id === identifier ||\r\n            // not a params of a function\r\n            parent.params.includes(identifier))) &&\r\n        // not a key of Property\r\n        !isStaticPropertyKey(identifier, parent) &&\r\n        // not a property of a MemberExpression\r\n        !((parent.type === 'MemberExpression' ||\r\n            parent.type === 'OptionalMemberExpression') &&\r\n            parent.property === identifier &&\r\n            !parent.computed) &&\r\n        // not in an Array destructure pattern\r\n        !(parent.type === 'ArrayPattern') &&\r\n        // skip whitelisted globals\r\n        !isGloballyWhitelisted(identifier.name) &&\r\n        // special case for webpack compilation\r\n        identifier.name !== `require` &&\r\n        // is a special keyword but parsed as identifier\r\n        identifier.name !== `arguments`) {\r\n        return true;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(27 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') && comments.length) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(28 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, true));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true, false, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const vnodeCall = firstChild\r\n            .codegenNode;\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            vnodeCall.isBlock = true;\r\n            helper(OPEN_BLOCK);\r\n            helper(CREATE_BLOCK);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return vnodeCall;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            (exp.isStatic !== branchExp.isStatic ||\r\n                exp.content !== branchExp.content)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const keyProp = findProp(node, `key`);\r\n        const keyProperty = keyProp\r\n            ? createObjectProperty(`key`, keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp)\r\n            : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.isConstant;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, `${fragmentFlag} /* ${PatchFlagNames[fragmentFlag]} */`, undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const isTemplate = isTemplateNode(node);\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(CREATE_BLOCK);\r\n                }\r\n            }\r\n            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(30 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim()\r\n        .replace(stripParensRE, '')\r\n        .trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }) {\r\n    const params = [];\r\n    if (value) {\r\n        params.push(value);\r\n    }\r\n    if (key) {\r\n        if (!value) {\r\n            params.push(createSimpleExpression(`_`, false));\r\n        }\r\n        params.push(key);\r\n    }\r\n    if (index) {\r\n        if (!key) {\r\n            if (!value) {\r\n                params.push(createSimpleExpression(`_`, false));\r\n            }\r\n            params.push(createSimpleExpression(`__`, false));\r\n        }\r\n        params.push(index);\r\n    }\r\n    return params;\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    const buildDefaultSlotProperty = (props, children) => createObjectProperty(`default`, buildSlotFn(props, children, loc));\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression('' + slotFlag, false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            if (child.tagType === 2 /* SLOT */ ||\r\n                (child.tagType === 0 /* ELEMENT */ &&\r\n                    hasForwardedSlots(child.children))) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    if (!(node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 0 /* ELEMENT */ ||\r\n            node.tagType === 1 /* COMPONENT */))) {\r\n        return;\r\n    }\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        const vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' ||\r\n                    tag === 'foreignObject' ||\r\n                    // #938: elements with dynamic keys should be forced into blocks\r\n                    findProp(node, 'key', true)));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(44 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild && !getStaticType(child)) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    const { tag } = node;\r\n    // 1. dynamic component\r\n    const isProp = node.tag === 'component' ? findProp(node, 'is') : findDir(node, 'is');\r\n    if (isProp) {\r\n        const exp = isProp.type === 6 /* ATTRIBUTE */\r\n            ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n            : isProp.exp;\r\n        if (exp) {\r\n            return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                exp\r\n            ]);\r\n        }\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // no we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (from setup bindings)\r\n    if (context.bindingMetadata[tag] === 'setup') {\r\n        return `$setup[${JSON.stringify(tag)}]`;\r\n    }\r\n    // 4. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getStaticType(value) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class' && !isComponent) {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style' && !isComponent) {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            // skip :is on <component>\r\n            if (name === 'is' && tag === 'component') {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', true, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isBind = name === 'bind';\r\n            const isOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(39 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once - it is handled by its dedicated transform.\r\n            if (name === 'once') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isBind && tag === 'component' && isBindKey(arg, 'is'))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isOn && ssr) {\r\n                continue;\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isBind || isOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isBind) {\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isBind\r\n                        ? 33 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if ((patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || name.startsWith('on')) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // inject statement for resolving directive\r\n        context.helper(RESOLVE_DIRECTIVE);\r\n        context.directives.add(dir.name);\r\n        dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName\r\n        ];\r\n        if (slotProps) {\r\n            slotArgs.push(slotProps);\r\n        }\r\n        if (children.length) {\r\n            if (!slotProps) {\r\n                slotArgs.push(`{}`);\r\n            }\r\n            slotArgs.push(createFunctionExpression([], children, false, false, loc));\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    // check for <slot name=\"xxx\" OR :name=\"xxx\" />\r\n    const name = findProp(node, 'name');\r\n    if (name) {\r\n        if (name.type === 6 /* ATTRIBUTE */ && name.value) {\r\n            // static name\r\n            slotName = JSON.stringify(name.value.content);\r\n        }\r\n        else if (name.type === 7 /* DIRECTIVE */ && name.exp) {\r\n            // dynamic name\r\n            slotName = name.exp;\r\n        }\r\n    }\r\n    const propsWithoutName = name\r\n        ? node.props.filter(p => p !== name)\r\n        : node.props;\r\n    if (propsWithoutName.length > 0) {\r\n        const { props, directives } = buildProps(node, context, propsWithoutName);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^\\s*function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            const rawName = arg.content;\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            const normalizedName = capitalize(camelize(rawName));\r\n            eventName = createSimpleExpression(`on${normalizedName}`, true, arg.loc);\r\n        }\r\n        else {\r\n            eventName = createCompoundExpression([\r\n                `\"on\" + ${context.helperString(CAPITALIZE)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`\"on\" + ${context.helperString(CAPITALIZE)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let isCacheable = context.cacheHandlers && !exp;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (isCacheable && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement ? `$event` : `(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (isCacheable) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    // .prop is no longer necessary due to new patch behavior\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(33 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */)))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr && child.type !== 2 /* TEXT */) {\r\n                        callArgs.push(`${1 /* TEXT */} /* ${PatchFlagNames[1 /* TEXT */]} */`);\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node)) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(40 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : exp.loc.source;\r\n    if (!isMemberExpression(expString)) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, createCompoundExpression([`$event => (`, exp, ` = $event)`]))\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, true)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformFor,\r\n            ...(  (process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(45 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(46 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if ( options.cacheHandlers) {\r\n        onError(createCompilerError(47 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(48 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, KEEP_ALIVE, MERGE_PROPS, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, WITH_CTX, WITH_DIRECTIVES, WITH_SCOPE_ID, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildProps, buildSlots, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBindKey, isBuiltInType, isCoreComponent, isMemberExpression, isSimpleIdentifier, isSlotOutlet, isStaticExp, isTemplateNode, isText, isVSlot, locStub, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode };\n","import { registerRuntimeHelpers, isBuiltInType, createSimpleExpression, createCompilerError, createObjectProperty, transformModel as transformModel$1, findProp, hasDynamicKeyVBind, transformOn as transformOn$1, createCompoundExpression, createCallExpression, isStaticExp, noopDirectiveTransform, baseCompile, baseParse } from '@vue/compiler-core';\nexport * from '@vue/compiler-core';\nimport { isVoidTag, isHTMLTag, isSVGTag, makeMap, parseStringStyle, capitalize, extend } from '@vue/shared';\n\nconst V_MODEL_RADIO = Symbol((process.env.NODE_ENV !== 'production') ? `vModelRadio` : ``);\r\nconst V_MODEL_CHECKBOX = Symbol((process.env.NODE_ENV !== 'production') ? `vModelCheckbox` : ``);\r\nconst V_MODEL_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelText` : ``);\r\nconst V_MODEL_SELECT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelSelect` : ``);\r\nconst V_MODEL_DYNAMIC = Symbol((process.env.NODE_ENV !== 'production') ? `vModelDynamic` : ``);\r\nconst V_ON_WITH_MODIFIERS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnModifiersGuard` : ``);\r\nconst V_ON_WITH_KEYS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnKeysGuard` : ``);\r\nconst V_SHOW = Symbol((process.env.NODE_ENV !== 'production') ? `vShow` : ``);\r\nconst TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `Transition` : ``);\r\nconst TRANSITION_GROUP = Symbol((process.env.NODE_ENV !== 'production') ? `TransitionGroup` : ``);\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\n/* eslint-disable no-restricted-globals */\r\nlet decoder;\r\nfunction decodeHtmlBrowser(raw) {\r\n    (decoder || (decoder = document.createElement('div'))).innerHTML = raw;\r\n    return decoder.textContent;\r\n}\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities:  decodeHtmlBrowser ,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, true);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, (process.env.NODE_ENV !== 'production') || !true ? DOMErrorMessages : undefined);\r\n}\r\nconst DOMErrorMessages = {\r\n    [49 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [50 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [51 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [52 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [53 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [54 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [55 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [56 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [57 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [58 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [59 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(49 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = transformModel$1(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(56 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(55 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(53 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return transformOn$1(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(57 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst warnTransitionChildren = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (node.children.length && hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(58 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(59 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...((process.env.NODE_ENV !== 'production') ? [warnTransitionChildren] : [])\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist:  null \r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\n\nexport { DOMDirectiveTransforms, DOMNodeTransforms, TRANSITION, TRANSITION_GROUP, V_MODEL_CHECKBOX, V_MODEL_DYNAMIC, V_MODEL_RADIO, V_MODEL_SELECT, V_MODEL_TEXT, V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS, V_SHOW, compile, createDOMCompilerError, parse, parserOptions, transformStyle };\n","import * as runtimeDom from '@vue/runtime-dom';\nimport { setDevtoolsHook, initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { getGlobalThis, isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\nimport { compile } from '@vue/compiler-dom';\n\nfunction initDev() {\r\n    const target = getGlobalThis();\r\n    target.__VUE__ = true;\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    {\r\n        console.info(`You are running a development build of Vue.\\n` +\r\n            `Make sure to use the production build (*.prod.js) when deploying for production.`);\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\n(process.env.NODE_ENV !== 'production') && initDev();\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError(err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const message = `Template compilation error: ${err.message}`;\r\n                const codeFrame = err.loc &&\r\n                    generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n                warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                /* istanbul ignore next */\r\n                throw err;\r\n            }\r\n        }\r\n    }, options));\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = ( new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toNumber, toRawType, toTypeString };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst SCOPE_OTHER = 0b00000000,\n      SCOPE_PROGRAM = 0b00000001,\n      SCOPE_FUNCTION = 0b00000010,\n      SCOPE_ARROW = 0b00000100,\n      SCOPE_SIMPLE_CATCH = 0b00001000,\n      SCOPE_SUPER = 0b00010000,\n      SCOPE_DIRECT_SUPER = 0b00100000,\n      SCOPE_CLASS = 0b01000000,\n      SCOPE_TS_MODULE = 0b10000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b00000000001,\n      BIND_KIND_TYPE = 0b00000000010,\n      BIND_SCOPE_VAR = 0b00000000100,\n      BIND_SCOPE_LEXICAL = 0b00000001000,\n      BIND_SCOPE_FUNCTION = 0b00000010000,\n      BIND_FLAGS_NONE = 0b00001000000,\n      BIND_FLAGS_CLASS = 0b00010000000,\n      BIND_FLAGS_TS_ENUM = 0b00100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b01000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b10000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.options = void 0;\n    this.inModule = void 0;\n    this.scope = void 0;\n    this.classScope = void 0;\n    this.prodParam = void 0;\n    this.plugins = void 0;\n    this.filename = void 0;\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n    this.state = void 0;\n    this.input = void 0;\n    this.length = void 0;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncFunction: \"Can not use keyword 'await' outside an async function\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { %0 as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"yield is not allowed in generator parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nfunction isSimpleProperty(node) {\n  return node != null && node.type === \"Property\" && node.kind === \"init\" && node.method === false;\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    const bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.value;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (isSimpleProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  checkLVal(expr, bindingType = BIND_NONE, checkClashes, contextDescription, disallowLetBinding) {\n    switch (expr.type) {\n      case \"ObjectPattern\":\n        expr.properties.forEach(prop => {\n          this.checkLVal(prop.type === \"Property\" ? prop.value : prop, bindingType, checkClashes, \"object destructuring pattern\", disallowLetBinding);\n        });\n        break;\n\n      default:\n        super.checkLVal(expr, bindingType, checkClashes, contextDescription, disallowLetBinding);\n    }\n  }\n\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.method) {\n      return;\n    }\n\n    super.checkProto(prop, isRecord, protoRef, refExpressionErrors);\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    directive.value.value = value;\n    return directive;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node) {\n    if (isSimpleProperty(node)) {\n      this.toAssignable(node.value);\n      return node;\n    }\n\n    return super.toAssignable(node);\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      throw this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      throw this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    if (!exprList) {\n      return;\n    }\n\n    super.toReferencedListDeep(exprList, isParenthesizedExpr);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class || this.state.value === \"yield\" && this.prodParam.hasYield) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(options, input) {\n      super(options, input);\n      this.flowPragma = void 0;\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      } else {\n        const stmt = super.parseStatement(context, topLevel);\n\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n\n        return stmt;\n      }\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node));\n      } else {\n        return super.toAssignable(node);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    checkLVal(expr, bindingType = BIND_NONE, checkClashes, contextDescription) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, bindingType, checkClashes, contextDescription);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, BIND_LEXICAL, undefined, contextDescription);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseIdentifier(true);\n      let specifierTypeKind = null;\n\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, BIND_LEXICAL, undefined, \"import specifier\");\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      node.expression = this.parseExpression();\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.raise = void 0;\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return !this.hasPrecedingLineBreak() && !this.match(types.parenL) && !this.match(types.parenR) && !this.match(types.colon) && !this.match(types.eq) && !this.match(types.question) && !this.match(types.bang);\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (Object.hasOwnProperty.call(modified, modifier)) {\n        this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n      }\n\n      modified[modifier] = true;\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    this.eat(operator);\n    let type = parseConstituentType();\n\n    if (this.match(operator)) {\n      const types = [type];\n\n      while (this.eat(operator)) {\n        types.push(parseConstituentType());\n      }\n\n      const node = this.startNodeAtNode(type);\n      node.types = types;\n      type = this.finishNode(node, kind);\n    }\n\n    return type;\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          const node = this.startNodeAtNode(t);\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        const node = this.startNodeAtNode(t);\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      const node = this.startNodeAtNode(t);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, BIND_TS_INTERFACE, undefined, \"typescript interface declaration\");\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, BIND_TS_TYPE, undefined, \"typescript type alias\");\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM, undefined, \"typescript enum declaration\");\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, BIND_TS_NAMESPACE, null, \"module or namespace declaration\");\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, BIND_LEXICAL, undefined, \"import equals declaration\");\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n          const cls = node;\n          cls.abstract = true;\n\n          if (next) {\n            this.next();\n\n            if (!this.match(types._class)) {\n              this.unexpected(null, types._class);\n            }\n          }\n\n          return this.parseClass(cls, true, false);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, BIND_TS_AMBIENT, null, \"function name\");\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    const node = super.parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder);\n\n    if (!refNeedsArrowPos && (node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n      this.raise(node.start, TSErrors.UnexpectedTypeAnnotation);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            node.typeParameters = typeArguments;\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      this.parseClass(cls, true, true);\n      cls.abstract = true;\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\"]);\n    const accessibility = this.parseAccessModifier();\n    if (accessibility) member.accessibility = accessibility;\n    this.tsParseModifiers(member, [\"declare\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.match(types.jsxTagStart)) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node));\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression);\n        return node;\n\n      default:\n        return super.toAssignable(node);\n    }\n  }\n\n  checkLVal(expr, bindingType = BIND_NONE, checkClashes, contextDescription) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, bindingType, checkClashes, \"parameter property\");\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, bindingType, checkClashes, contextDescription);\n        return;\n\n      default:\n        super.checkLVal(expr, bindingType, checkClashes, contextDescription);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const firstParam = method.params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.inParameters = false;\n    this.maybeInArrowParameters = false;\n    this.maybeInAsyncArrowHead = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.yieldPos = -1;\n    this.awaitPos = -1;\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.octalPositions = [];\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = void 0;\n    this.value = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n    if (!this.match(types.num) && !this.match(types.string)) return;\n    this.state.pos = this.state.start;\n\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart = this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n\n    this.nextToken();\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.octalPositions = [];\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n\n      if (this.state.strict) {\n        this.raise(start, ErrorMessages.StrictOctalLiteral);\n      } else {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else if (this.state.strict) {\n          this.raise(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, ErrorMessages.StrictNumericEscape);\n            } else {\n              this.state.octalPositions.push(codePos);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon() {\n    if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  checkYieldAwaitInDefaultParams() {\n    if (this.state.yieldPos !== -1 && (this.state.awaitPos === -1 || this.state.yieldPos < this.state.awaitPos)) {\n      this.raise(this.state.yieldPos, ErrorMessages.YieldBindingIdentifier);\n    }\n\n    if (this.state.awaitPos !== -1) {\n      this.raise(this.state.awaitPos, ErrorMessages.AwaitBindingIdentifier);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (parenthesized.type !== \"Identifier\" && parenthesized.type !== \"MemberExpression\") {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        const arg = last.argument;\n        this.toAssignable(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, bindingType = BIND_NONE, checkClashes, contextDescription, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(expr.name, this.inModule) : isStrictBindOnlyReservedWord(expr.name))) {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, expr.name);\n        }\n\n        if (checkClashes) {\n          const key = `_${expr.name}`;\n\n          if (checkClashes[key]) {\n            this.raise(expr.start, ErrorMessages.ParamDupe);\n          } else {\n            checkClashes[key] = true;\n          }\n        }\n\n        if (disallowLetBinding && expr.name === \"let\") {\n          this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n        }\n\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(expr.name, bindingType, expr.start);\n        }\n\n        break;\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (prop.type === \"ObjectProperty\") prop = prop.value;else if (prop.type === \"ObjectMethod\") continue;\n          this.checkLVal(prop, bindingType, checkClashes, \"object destructuring pattern\", disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, bindingType, checkClashes, \"array destructuring pattern\", disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, bindingType, checkClashes, \"assignment pattern\");\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, bindingType, checkClashes, \"rest element\");\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, bindingType, checkClashes, \"parenthesized expression\");\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || prop.type === \"ObjectMethod\" || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      } else {\n        this.state.exprAllowed = false;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, undefined, undefined, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if ((arg.type === \"MemberExpression\" || arg.type === \"OptionalMemberExpression\") && arg.property.type === \"PrivateName\") {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n\n      if (state.maybeAsyncArrow) {\n        this.state.maybeInAsyncArrowHead = true;\n      }\n\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n      this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      state.optionalChainMember = optional = true;\n\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (property.type === \"PrivateName\") {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(property.id.name, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n    } else {\n      this.toReferencedListDeep(node.arguments);\n      if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n\n      if (!this.isAwaitAllowed() && !oldMaybeInArrowParameters || oldAwaitPos !== -1) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let innerParenStart;\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      if (this.match(types.parenL) && !innerParenStart) {\n        innerParenStart = this.state.start;\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n      this.unexpected();\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = true;\n    this.state.maybeInAsyncArrowHead = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    const params = [this.parseIdentifier()];\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.checkYieldAwaitInDefaultParams();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      if (!this.isAwaitAllowed() && !this.state.maybeInAsyncArrowHead) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n\n      for (let _i2 = 0; _i2 < exprList.length; _i2++) {\n        const param = exprList[_i2];\n\n        if (param.extra && param.extra.parenthesized) {\n          this.unexpected(param.extra.parenStart);\n        }\n      }\n\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n    if (oldAwaitPos !== -1) this.state.awaitPos = oldAwaitPos;\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (node.callee.type === \"OptionalMemberExpression\" || node.callee.type === \"OptionalCallExpression\") {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          this.next();\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && prop.type !== \"ObjectProperty\" && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (prop.key.type !== \"PrivateName\") {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, BIND_OUTSIDE, undefined, \"function name\", undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.state.inParameters = oldInParameters;\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const nameHash = Object.create(null);\n\n    for (let i = 0; i < node.params.length; i++) {\n      this.checkLVal(node.params[i], BIND_VAR, allowDuplicates ? null : nameHash, \"function parameter list\", undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      }\n\n      if (this.state.awaitPos === -1 && (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed())) {\n        this.state.awaitPos = this.state.start;\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, ErrorMessages.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.scope.inFunction) return this.prodParam.hasAwait;\n    if (this.options.allowAwaitOutsideFunction) return true;\n\n    if (this.hasPlugin(\"topLevelAwait\")) {\n      return this.inModule && this.prodParam.hasAwait;\n    }\n\n    return false;\n  }\n\n  parseAwait() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n    } else if (this.state.awaitPos === -1) {\n      this.state.awaitPos = node.start;\n    }\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo)) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  parseYield() {\n    const node = this.startNode();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, ErrorMessages.YieldInParameter);\n    } else if (this.state.yieldPos === -1) {\n      this.state.yieldPos = node.start;\n    }\n\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, undefined, undefined, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, BIND_LEXICAL, null, \"catch clause\");\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const octalPositions = [];\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      if (!parsedNonDirective && this.state.octalPositions.length) {\n        octalPositions.push(...this.state.octalPositions);\n      }\n\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n        const directive = this.stmtToDirective(stmt);\n        directives.push(directive);\n\n        if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n          hasStrictModeDirective = true;\n          this.setStrict(true);\n        }\n\n        continue;\n      }\n\n      parsedNonDirective = true;\n      body.push(stmt);\n    }\n\n    if (this.state.strict && octalPositions.length) {\n      for (let _i3 = 0; _i3 < octalPositions.length; _i3++) {\n        const pos = octalPositions[_i3];\n        this.raise(pos, ErrorMessages.StrictOctalLiteral);\n      }\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, \"variable declaration\", kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = true;\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.state.inParameters = oldInParameters;\n    this.checkYieldAwaitInDefaultParams();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (method.key.type === \"PrivateName\") {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = key.type === \"PrivateName\";\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (method.key.type === \"PrivateName\") {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (method.key.type === \"PrivateName\") {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(node.key.id.name, CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.semicolon();\n    this.prodParam.exit();\n    this.scope.exit();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.prodParam.enter(PARAM);\n\n    if (this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n      this.next();\n      node.value = this.parseMaybeAssignAllowIn();\n    } else {\n      node.value = null;\n    }\n\n    this.semicolon();\n    this.prodParam.exit();\n    this.scope.exit();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, bindingType, undefined, \"class name\");\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i4 = 0, _node$specifiers = node.specifiers; _i4 < _node$specifiers.length; _i4++) {\n          const specifier = _node$specifiers[_i4];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.extra.raw, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i5 = 0, _node$declaration$dec = node.declaration.declarations; _i5 < _node$declaration$dec.length; _i5++) {\n            const declaration = _node$declaration$dec[_i5];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i6 = 0, _node$properties = node.properties; _i6 < _node$properties.length; _i6++) {\n        const prop = _node$properties[_i6];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i7 = 0, _node$elements = node.elements; _i7 < _node$elements.length; _i7++) {\n        const elem = _node$elements[_i7];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, BIND_LEXICAL, undefined, contextDescription);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    this.expectPlugin(\"importAssertions\");\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      let assertionKeyNode;\n\n      if (this.match(types.string)) {\n        assertionKeyNode = this.parseLiteral(this.state.value, \"StringLiteral\");\n      } else {\n        assertionKeyNode = this.parseIdentifier(true);\n      }\n\n      this.next();\n      node.key = assertionKeyNode;\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attrNames.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attrNames.add(node.key.name);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.match(types.name) && this.state.value === \"assert\" && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, BIND_LEXICAL, undefined, \"import specifier\");\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.raise = void 0;\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":""}